package java.time.zone;
final public class ZoneOffsetTransition
implements java.io.Serializable, java.lang.Comparable
{
final private static java.lang.Object serialVersionUID;

final private java.lang.Object transition;

final private java.lang.Object offsetBefore;

final private java.lang.Object offsetAfter;

public static java.time.zone.ZoneOffsetTransition of(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

void <init>(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

void <init>(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

private void readObject(java.lang.Object arg0) throws java.io.InvalidObjectException
{

}

private java.lang.Object writeReplace()
{

}

void writeExternal(java.lang.Object arg0) throws java.io.IOException
{

}

static java.time.zone.ZoneOffsetTransition readExternal(java.lang.Object arg0) throws java.io.IOException
{

}

public java.time.Instant getInstant()
{

}

public long toEpochSecond()
{

}

public java.time.LocalDateTime getDateTimeBefore()
{

}

public java.time.LocalDateTime getDateTimeAfter()
{

}

public java.time.ZoneOffset getOffsetBefore()
{

}

public java.time.ZoneOffset getOffsetAfter()
{

}

public java.time.Duration getDuration()
{

}

private int getDurationSeconds()
{

}

public boolean isGap()
{

}

public boolean isOverlap()
{

}

public boolean isValidOffset(java.lang.Object arg0)
{

}

java.util.List getValidOffsets()
{

}

public int compareTo(java.lang.Object arg0)
{

}

public boolean equals(java.lang.Object arg0)
{

}

public int hashCode()
{

}

public java.lang.String toString()
{

}


}
