package java.time;
final public class OffsetDateTime
implements java.io.Serializable, java.lang.Comparable, java.time.temporal.Temporal, java.time.temporal.TemporalAdjuster
{
final public static java.lang.Object MIN;

final public static java.lang.Object MAX;

final private static java.lang.Object serialVersionUID;

final private java.lang.Object dateTime;

final private java.lang.Object offset;

public static java.util.Comparator timeLineOrder()
{

}

private static int compareInstant(java.lang.Object arg0, java.lang.Object arg1)
{

}

public static java.time.OffsetDateTime now()
{

}

public static java.time.OffsetDateTime now(java.lang.Object arg0)
{

}

public static java.time.OffsetDateTime now(java.lang.Object arg0)
{

}

public static java.time.OffsetDateTime of(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

public static java.time.OffsetDateTime of(java.lang.Object arg0, java.lang.Object arg1)
{

}

public static java.time.OffsetDateTime of(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2, java.lang.Object arg3, java.lang.Object arg4, java.lang.Object arg5, java.lang.Object arg6, java.lang.Object arg7)
{

}

public static java.time.OffsetDateTime ofInstant(java.lang.Object arg0, java.lang.Object arg1)
{

}

public static java.time.OffsetDateTime from(java.lang.Object arg0)
{

}

public static java.time.OffsetDateTime parse(java.lang.Object arg0)
{

}

public static java.time.OffsetDateTime parse(java.lang.Object arg0, java.lang.Object arg1)
{

}

private void <init>(java.lang.Object arg0, java.lang.Object arg1)
{

}

private java.time.OffsetDateTime with(java.lang.Object arg0, java.lang.Object arg1)
{

}

public boolean isSupported(java.lang.Object arg0)
{

}

public boolean isSupported(java.lang.Object arg0)
{

}

public java.time.temporal.ValueRange range(java.lang.Object arg0)
{

}

public int get(java.lang.Object arg0)
{

}

public long getLong(java.lang.Object arg0)
{

}

public java.time.ZoneOffset getOffset()
{

}

public java.time.OffsetDateTime withOffsetSameLocal(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime withOffsetSameInstant(java.lang.Object arg0)
{

}

public java.time.LocalDateTime toLocalDateTime()
{

}

public java.time.LocalDate toLocalDate()
{

}

public int getYear()
{

}

public int getMonthValue()
{

}

public java.time.Month getMonth()
{

}

public int getDayOfMonth()
{

}

public int getDayOfYear()
{

}

public java.time.DayOfWeek getDayOfWeek()
{

}

public java.time.LocalTime toLocalTime()
{

}

public int getHour()
{

}

public int getMinute()
{

}

public int getSecond()
{

}

public int getNano()
{

}

public java.time.OffsetDateTime with(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime with(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.time.OffsetDateTime withYear(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime withMonth(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime withDayOfMonth(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime withDayOfYear(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime withHour(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime withMinute(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime withSecond(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime withNano(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime truncatedTo(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime plus(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime plus(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.time.OffsetDateTime plusYears(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime plusMonths(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime plusWeeks(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime plusDays(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime plusHours(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime plusMinutes(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime plusSeconds(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime plusNanos(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime minus(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime minus(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.time.OffsetDateTime minusYears(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime minusMonths(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime minusWeeks(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime minusDays(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime minusHours(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime minusMinutes(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime minusSeconds(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime minusNanos(java.lang.Object arg0)
{

}

public java.lang.Object query(java.lang.Object arg0)
{

}

public java.time.temporal.Temporal adjustInto(java.lang.Object arg0)
{

}

public long until(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.lang.String format(java.lang.Object arg0)
{

}

public java.time.ZonedDateTime atZoneSameInstant(java.lang.Object arg0)
{

}

public java.time.ZonedDateTime atZoneSimilarLocal(java.lang.Object arg0)
{

}

public java.time.OffsetTime toOffsetTime()
{

}

public java.time.ZonedDateTime toZonedDateTime()
{

}

public java.time.Instant toInstant()
{

}

public long toEpochSecond()
{

}

public int compareTo(java.lang.Object arg0)
{

}

public boolean isAfter(java.lang.Object arg0)
{

}

public boolean isBefore(java.lang.Object arg0)
{

}

public boolean isEqual(java.lang.Object arg0)
{

}

public boolean equals(java.lang.Object arg0)
{

}

public int hashCode()
{

}

public java.lang.String toString()
{

}

private java.lang.Object writeReplace()
{

}

private void readObject(java.lang.Object arg0) throws java.io.InvalidObjectException
{

}

void writeExternal(java.lang.Object arg0) throws java.io.IOException
{

}

static java.time.OffsetDateTime readExternal(java.lang.Object arg0) throws java.io.IOException, java.lang.ClassNotFoundException
{

}

static void <clinit>()
{

}


}
