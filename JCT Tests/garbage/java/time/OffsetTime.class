package java.time;
final public class OffsetTime
implements java.io.Serializable, java.lang.Comparable, java.time.temporal.Temporal, java.time.temporal.TemporalAdjuster
{
final public static java.lang.Object MIN;

final public static java.lang.Object MAX;

final private static java.lang.Object serialVersionUID;

final private java.lang.Object time;

final private java.lang.Object offset;

public static java.time.OffsetTime now()
{

}

public static java.time.OffsetTime now(java.lang.Object arg0)
{

}

public static java.time.OffsetTime now(java.lang.Object arg0)
{

}

public static java.time.OffsetTime of(java.lang.Object arg0, java.lang.Object arg1)
{

}

public static java.time.OffsetTime of(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2, java.lang.Object arg3, java.lang.Object arg4)
{

}

public static java.time.OffsetTime ofInstant(java.lang.Object arg0, java.lang.Object arg1)
{

}

public static java.time.OffsetTime from(java.lang.Object arg0)
{

}

public static java.time.OffsetTime parse(java.lang.Object arg0)
{

}

public static java.time.OffsetTime parse(java.lang.Object arg0, java.lang.Object arg1)
{

}

private void <init>(java.lang.Object arg0, java.lang.Object arg1)
{

}

private java.time.OffsetTime with(java.lang.Object arg0, java.lang.Object arg1)
{

}

public boolean isSupported(java.lang.Object arg0)
{

}

public boolean isSupported(java.lang.Object arg0)
{

}

public java.time.temporal.ValueRange range(java.lang.Object arg0)
{

}

public int get(java.lang.Object arg0)
{

}

public long getLong(java.lang.Object arg0)
{

}

public java.time.ZoneOffset getOffset()
{

}

public java.time.OffsetTime withOffsetSameLocal(java.lang.Object arg0)
{

}

public java.time.OffsetTime withOffsetSameInstant(java.lang.Object arg0)
{

}

public java.time.LocalTime toLocalTime()
{

}

public int getHour()
{

}

public int getMinute()
{

}

public int getSecond()
{

}

public int getNano()
{

}

public java.time.OffsetTime with(java.lang.Object arg0)
{

}

public java.time.OffsetTime with(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.time.OffsetTime withHour(java.lang.Object arg0)
{

}

public java.time.OffsetTime withMinute(java.lang.Object arg0)
{

}

public java.time.OffsetTime withSecond(java.lang.Object arg0)
{

}

public java.time.OffsetTime withNano(java.lang.Object arg0)
{

}

public java.time.OffsetTime truncatedTo(java.lang.Object arg0)
{

}

public java.time.OffsetTime plus(java.lang.Object arg0)
{

}

public java.time.OffsetTime plus(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.time.OffsetTime plusHours(java.lang.Object arg0)
{

}

public java.time.OffsetTime plusMinutes(java.lang.Object arg0)
{

}

public java.time.OffsetTime plusSeconds(java.lang.Object arg0)
{

}

public java.time.OffsetTime plusNanos(java.lang.Object arg0)
{

}

public java.time.OffsetTime minus(java.lang.Object arg0)
{

}

public java.time.OffsetTime minus(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.time.OffsetTime minusHours(java.lang.Object arg0)
{

}

public java.time.OffsetTime minusMinutes(java.lang.Object arg0)
{

}

public java.time.OffsetTime minusSeconds(java.lang.Object arg0)
{

}

public java.time.OffsetTime minusNanos(java.lang.Object arg0)
{

}

public java.lang.Object query(java.lang.Object arg0)
{

}

public java.time.temporal.Temporal adjustInto(java.lang.Object arg0)
{

}

public long until(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.lang.String format(java.lang.Object arg0)
{

}

public java.time.OffsetDateTime atDate(java.lang.Object arg0)
{

}

private long toEpochNano()
{

}

public int compareTo(java.lang.Object arg0)
{

}

public boolean isAfter(java.lang.Object arg0)
{

}

public boolean isBefore(java.lang.Object arg0)
{

}

public boolean isEqual(java.lang.Object arg0)
{

}

public boolean equals(java.lang.Object arg0)
{

}

public int hashCode()
{

}

public java.lang.String toString()
{

}

private java.lang.Object writeReplace()
{

}

private void readObject(java.lang.Object arg0) throws java.io.InvalidObjectException
{

}

void writeExternal(java.lang.Object arg0) throws java.io.IOException
{

}

static java.time.OffsetTime readExternal(java.lang.Object arg0) throws java.io.IOException, java.lang.ClassNotFoundException
{

}

static void <clinit>()
{

}


}
