package java.lang;
abstract class AbstractStringBuilder
implements java.lang.Appendable, java.lang.CharSequence
{
java.lang.Object value;

java.lang.Object count;

final private static java.lang.Object MAX_ARRAY_SIZE;

void <init>()
{

}

void <init>(java.lang.Object arg0)
{

}

public int length()
{

}

public int capacity()
{

}

public void ensureCapacity(java.lang.Object arg0)
{

}

private void ensureCapacityInternal(java.lang.Object arg0)
{

}

private int newCapacity(java.lang.Object arg0)
{

}

private int hugeCapacity(java.lang.Object arg0)
{

}

public void trimToSize()
{

}

public void setLength(java.lang.Object arg0)
{

}

public char charAt(java.lang.Object arg0)
{

}

public int codePointAt(java.lang.Object arg0)
{

}

public int codePointBefore(java.lang.Object arg0)
{

}

public int codePointCount(java.lang.Object arg0, java.lang.Object arg1)
{

}

public int offsetByCodePoints(java.lang.Object arg0, java.lang.Object arg1)
{

}

public void getChars(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2, java.lang.Object arg3)
{

}

public void setCharAt(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.lang.AbstractStringBuilder append(java.lang.Object arg0)
{

}

public java.lang.AbstractStringBuilder append(java.lang.Object arg0)
{

}

public java.lang.AbstractStringBuilder append(java.lang.Object arg0)
{

}

java.lang.AbstractStringBuilder append(java.lang.Object arg0)
{

}

public java.lang.AbstractStringBuilder append(java.lang.Object arg0)
{

}

private java.lang.AbstractStringBuilder appendNull()
{

}

public java.lang.AbstractStringBuilder append(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

public java.lang.AbstractStringBuilder append(java.lang.Object arg0)
{

}

public java.lang.AbstractStringBuilder append(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

public java.lang.AbstractStringBuilder append(java.lang.Object arg0)
{

}

public java.lang.AbstractStringBuilder append(java.lang.Object arg0)
{

}

public java.lang.AbstractStringBuilder append(java.lang.Object arg0)
{

}

public java.lang.AbstractStringBuilder append(java.lang.Object arg0)
{

}

public java.lang.AbstractStringBuilder append(java.lang.Object arg0)
{

}

public java.lang.AbstractStringBuilder append(java.lang.Object arg0)
{

}

public java.lang.AbstractStringBuilder delete(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.lang.AbstractStringBuilder appendCodePoint(java.lang.Object arg0)
{

}

public java.lang.AbstractStringBuilder deleteCharAt(java.lang.Object arg0)
{

}

public java.lang.AbstractStringBuilder replace(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

public java.lang.String substring(java.lang.Object arg0)
{

}

public java.lang.CharSequence subSequence(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.lang.String substring(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.lang.AbstractStringBuilder insert(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2, java.lang.Object arg3)
{

}

public java.lang.AbstractStringBuilder insert(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.lang.AbstractStringBuilder insert(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.lang.AbstractStringBuilder insert(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.lang.AbstractStringBuilder insert(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.lang.AbstractStringBuilder insert(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2, java.lang.Object arg3)
{

}

public java.lang.AbstractStringBuilder insert(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.lang.AbstractStringBuilder insert(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.lang.AbstractStringBuilder insert(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.lang.AbstractStringBuilder insert(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.lang.AbstractStringBuilder insert(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.lang.AbstractStringBuilder insert(java.lang.Object arg0, java.lang.Object arg1)
{

}

public int indexOf(java.lang.Object arg0)
{

}

public int indexOf(java.lang.Object arg0, java.lang.Object arg1)
{

}

public int lastIndexOf(java.lang.Object arg0)
{

}

public int lastIndexOf(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.lang.AbstractStringBuilder reverse()
{

}

private void reverseAllValidSurrogatePairs()
{

}

abstract public java.lang.String toString()
{

}

final char[] getValue()
{

}


}
