package java.lang;
final public class String
implements java.io.Serializable, java.lang.CharSequence, java.lang.Comparable
{
private static class CaseInsensitiveComparator
implements java.io.Serializable, java.util.Comparator
{
final private static java.lang.Object serialVersionUID;

private void <init>()
{

}

public int compare(java.lang.Object arg0, java.lang.Object arg1)
{

}

private java.lang.Object readResolve()
{

}


}

final private java.lang.Object value;

private java.lang.Object hash;

final private static java.lang.Object serialVersionUID;

final private static java.lang.Object serialPersistentFields;

final public static java.lang.Object CASE_INSENSITIVE_ORDER;

public void <init>()
{

}

public void <init>(java.lang.Object arg0)
{

}

public void <init>(java.lang.Object arg0)
{

}

public void <init>(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

public void <init>(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

public void <init>(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2, java.lang.Object arg3)
{

}

public void <init>(java.lang.Object arg0, java.lang.Object arg1)
{

}

private static void checkBounds(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

public void <init>(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2, java.lang.Object arg3) throws java.io.UnsupportedEncodingException
{

}

public void <init>(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2, java.lang.Object arg3)
{

}

public void <init>(java.lang.Object arg0, java.lang.Object arg1) throws java.io.UnsupportedEncodingException
{

}

public void <init>(java.lang.Object arg0, java.lang.Object arg1)
{

}

public void <init>(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

public void <init>(java.lang.Object arg0)
{

}

public void <init>(java.lang.Object arg0)
{

}

public void <init>(java.lang.Object arg0)
{

}

void <init>(java.lang.Object arg0, java.lang.Object arg1)
{

}

public int length()
{

}

public boolean isEmpty()
{

}

public char charAt(java.lang.Object arg0)
{

}

public int codePointAt(java.lang.Object arg0)
{

}

public int codePointBefore(java.lang.Object arg0)
{

}

public int codePointCount(java.lang.Object arg0, java.lang.Object arg1)
{

}

public int offsetByCodePoints(java.lang.Object arg0, java.lang.Object arg1)
{

}

void getChars(java.lang.Object arg0, java.lang.Object arg1)
{

}

public void getChars(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2, java.lang.Object arg3)
{

}

public void getBytes(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2, java.lang.Object arg3)
{

}

public byte[] getBytes(java.lang.Object arg0) throws java.io.UnsupportedEncodingException
{

}

public byte[] getBytes(java.lang.Object arg0)
{

}

public byte[] getBytes()
{

}

public boolean equals(java.lang.Object arg0)
{

}

public boolean contentEquals(java.lang.Object arg0)
{

}

private boolean nonSyncContentEquals(java.lang.Object arg0)
{

}

public boolean contentEquals(java.lang.Object arg0)
{

}

public boolean equalsIgnoreCase(java.lang.Object arg0)
{

}

public int compareTo(java.lang.Object arg0)
{

}

public int compareToIgnoreCase(java.lang.Object arg0)
{

}

public boolean regionMatches(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2, java.lang.Object arg3)
{

}

public boolean regionMatches(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2, java.lang.Object arg3, java.lang.Object arg4)
{

}

public boolean startsWith(java.lang.Object arg0, java.lang.Object arg1)
{

}

public boolean startsWith(java.lang.Object arg0)
{

}

public boolean endsWith(java.lang.Object arg0)
{

}

public int hashCode()
{

}

public int indexOf(java.lang.Object arg0)
{

}

public int indexOf(java.lang.Object arg0, java.lang.Object arg1)
{

}

private int indexOfSupplementary(java.lang.Object arg0, java.lang.Object arg1)
{

}

public int lastIndexOf(java.lang.Object arg0)
{

}

public int lastIndexOf(java.lang.Object arg0, java.lang.Object arg1)
{

}

private int lastIndexOfSupplementary(java.lang.Object arg0, java.lang.Object arg1)
{

}

public int indexOf(java.lang.Object arg0)
{

}

public int indexOf(java.lang.Object arg0, java.lang.Object arg1)
{

}

static int indexOf(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2, java.lang.Object arg3, java.lang.Object arg4)
{

}

static int indexOf(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2, java.lang.Object arg3, java.lang.Object arg4, java.lang.Object arg5, java.lang.Object arg6)
{

}

public int lastIndexOf(java.lang.Object arg0)
{

}

public int lastIndexOf(java.lang.Object arg0, java.lang.Object arg1)
{

}

static int lastIndexOf(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2, java.lang.Object arg3, java.lang.Object arg4)
{

}

static int lastIndexOf(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2, java.lang.Object arg3, java.lang.Object arg4, java.lang.Object arg5, java.lang.Object arg6)
{

}

public java.lang.String substring(java.lang.Object arg0)
{

}

public java.lang.String substring(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.lang.CharSequence subSequence(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.lang.String concat(java.lang.Object arg0)
{

}

public java.lang.String replace(java.lang.Object arg0, java.lang.Object arg1)
{

}

public boolean matches(java.lang.Object arg0)
{

}

public boolean contains(java.lang.Object arg0)
{

}

public java.lang.String replaceFirst(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.lang.String replaceAll(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.lang.String replace(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.lang.String[] split(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.lang.String[] split(java.lang.Object arg0)
{

}

public static java.lang.String join(java.lang.Object arg0, java.lang.Object arg1)
{

}

public static java.lang.String join(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.lang.String toLowerCase(java.lang.Object arg0)
{

}

public java.lang.String toLowerCase()
{

}

public java.lang.String toUpperCase(java.lang.Object arg0)
{

}

public java.lang.String toUpperCase()
{

}

public java.lang.String trim()
{

}

public java.lang.String toString()
{

}

public char[] toCharArray()
{

}

public static java.lang.String format(java.lang.Object arg0, java.lang.Object arg1)
{

}

public static java.lang.String format(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

public static java.lang.String valueOf(java.lang.Object arg0)
{

}

public static java.lang.String valueOf(java.lang.Object arg0)
{

}

public static java.lang.String valueOf(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

public static java.lang.String copyValueOf(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

public static java.lang.String copyValueOf(java.lang.Object arg0)
{

}

public static java.lang.String valueOf(java.lang.Object arg0)
{

}

public static java.lang.String valueOf(java.lang.Object arg0)
{

}

public static java.lang.String valueOf(java.lang.Object arg0)
{

}

public static java.lang.String valueOf(java.lang.Object arg0)
{

}

public static java.lang.String valueOf(java.lang.Object arg0)
{

}

public static java.lang.String valueOf(java.lang.Object arg0)
{

}

native public java.lang.String intern()
{

}

static void <clinit>()
{

}


}
