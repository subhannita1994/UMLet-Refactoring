package java.lang.reflect;
final public class Parameter
implements java.lang.reflect.AnnotatedElement
{
final private java.lang.Object name;

final private java.lang.Object modifiers;

final private java.lang.Object executable;

final private java.lang.Object index;

private transient volatile java.lang.Object parameterTypeCache;

private transient volatile java.lang.Object parameterClassCache;

private transient java.lang.Object declaredAnnotations;

void <init>(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2, java.lang.Object arg3)
{

}

public boolean equals(java.lang.Object arg0)
{

}

public int hashCode()
{

}

public boolean isNamePresent()
{

}

public java.lang.String toString()
{

}

public java.lang.reflect.Executable getDeclaringExecutable()
{

}

public int getModifiers()
{

}

public java.lang.String getName()
{

}

java.lang.String getRealName()
{

}

public java.lang.reflect.Type getParameterizedType()
{

}

public java.lang.Class getType()
{

}

public java.lang.reflect.AnnotatedType getAnnotatedType()
{

}

public boolean isImplicit()
{

}

public boolean isSynthetic()
{

}

public boolean isVarArgs()
{

}

public java.lang.annotation.Annotation getAnnotation(java.lang.Object arg0)
{

}

public java.lang.annotation.Annotation[] getAnnotationsByType(java.lang.Object arg0)
{

}

public java.lang.annotation.Annotation[] getDeclaredAnnotations()
{

}

public java.lang.annotation.Annotation getDeclaredAnnotation(java.lang.Object arg0)
{

}

public java.lang.annotation.Annotation[] getDeclaredAnnotationsByType(java.lang.Object arg0)
{

}

public java.lang.annotation.Annotation[] getAnnotations()
{

}

private synchronized java.util.Map declaredAnnotations()
{

}


}
