package java.nio.file.attribute;
final public class FileTime
implements java.lang.Comparable
{
final private java.lang.Object unit;

final private java.lang.Object value;

private java.lang.Object instant;

private java.lang.Object valueAsString;

final private static java.lang.Object HOURS_PER_DAY;

final private static java.lang.Object MINUTES_PER_HOUR;

final private static java.lang.Object SECONDS_PER_MINUTE;

final private static java.lang.Object SECONDS_PER_HOUR;

final private static java.lang.Object SECONDS_PER_DAY;

final private static java.lang.Object MILLIS_PER_SECOND;

final private static java.lang.Object MICROS_PER_SECOND;

final private static java.lang.Object NANOS_PER_SECOND;

final private static java.lang.Object NANOS_PER_MILLI;

final private static java.lang.Object NANOS_PER_MICRO;

final private static java.lang.Object MIN_SECOND;

final private static java.lang.Object MAX_SECOND;

final private static java.lang.Object DAYS_PER_10000_YEARS;

final private static java.lang.Object SECONDS_PER_10000_YEARS;

final private static java.lang.Object SECONDS_0000_TO_1970;

private void <init>(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

public static java.nio.file.attribute.FileTime from(java.lang.Object arg0, java.lang.Object arg1)
{

}

public static java.nio.file.attribute.FileTime fromMillis(java.lang.Object arg0)
{

}

public static java.nio.file.attribute.FileTime from(java.lang.Object arg0)
{

}

public long to(java.lang.Object arg0)
{

}

public long toMillis()
{

}

private static long scale(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

public java.time.Instant toInstant()
{

}

public boolean equals(java.lang.Object arg0)
{

}

public int hashCode()
{

}

private long toDays()
{

}

private long toExcessNanos(java.lang.Object arg0)
{

}

public int compareTo(java.lang.Object arg0)
{

}

private java.lang.StringBuilder append(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

public java.lang.String toString()
{

}


}
