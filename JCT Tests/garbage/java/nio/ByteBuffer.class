package java.nio;
abstract public class ByteBuffer
extends java.nio.Buffer
implements java.lang.Comparable
{
final java.lang.Object hb;

final java.lang.Object offset;

java.lang.Object isReadOnly;

java.lang.Object bigEndian;

java.lang.Object nativeByteOrder;

void <init>(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2, java.lang.Object arg3, java.lang.Object arg4, java.lang.Object arg5)
{

}

void <init>(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2, java.lang.Object arg3)
{

}

public static java.nio.ByteBuffer allocateDirect(java.lang.Object arg0)
{

}

public static java.nio.ByteBuffer allocate(java.lang.Object arg0)
{

}

public static java.nio.ByteBuffer wrap(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

public static java.nio.ByteBuffer wrap(java.lang.Object arg0)
{

}

abstract public java.nio.ByteBuffer slice()
{

}

abstract public java.nio.ByteBuffer duplicate()
{

}

abstract public java.nio.ByteBuffer asReadOnlyBuffer()
{

}

abstract public byte get()
{

}

abstract public java.nio.ByteBuffer put(java.lang.Object arg0)
{

}

abstract public byte get(java.lang.Object arg0)
{

}

abstract public java.nio.ByteBuffer put(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.nio.ByteBuffer get(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

public java.nio.ByteBuffer get(java.lang.Object arg0)
{

}

public java.nio.ByteBuffer put(java.lang.Object arg0)
{

}

public java.nio.ByteBuffer put(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

final public java.nio.ByteBuffer put(java.lang.Object arg0)
{

}

final public boolean hasArray()
{

}

final public byte[] array()
{

}

final public int arrayOffset()
{

}

abstract public java.nio.ByteBuffer compact()
{

}

abstract public boolean isDirect()
{

}

public java.lang.String toString()
{

}

public int hashCode()
{

}

public boolean equals(java.lang.Object arg0)
{

}

private static boolean equals(java.lang.Object arg0, java.lang.Object arg1)
{

}

public int compareTo(java.lang.Object arg0)
{

}

private static int compare(java.lang.Object arg0, java.lang.Object arg1)
{

}

final public java.nio.ByteOrder order()
{

}

final public java.nio.ByteBuffer order(java.lang.Object arg0)
{

}

abstract byte _get(java.lang.Object arg0)
{

}

abstract void _put(java.lang.Object arg0, java.lang.Object arg1)
{

}

abstract public char getChar()
{

}

abstract public java.nio.ByteBuffer putChar(java.lang.Object arg0)
{

}

abstract public char getChar(java.lang.Object arg0)
{

}

abstract public java.nio.ByteBuffer putChar(java.lang.Object arg0, java.lang.Object arg1)
{

}

abstract public java.nio.CharBuffer asCharBuffer()
{

}

abstract public short getShort()
{

}

abstract public java.nio.ByteBuffer putShort(java.lang.Object arg0)
{

}

abstract public short getShort(java.lang.Object arg0)
{

}

abstract public java.nio.ByteBuffer putShort(java.lang.Object arg0, java.lang.Object arg1)
{

}

abstract public java.nio.ShortBuffer asShortBuffer()
{

}

abstract public int getInt()
{

}

abstract public java.nio.ByteBuffer putInt(java.lang.Object arg0)
{

}

abstract public int getInt(java.lang.Object arg0)
{

}

abstract public java.nio.ByteBuffer putInt(java.lang.Object arg0, java.lang.Object arg1)
{

}

abstract public java.nio.IntBuffer asIntBuffer()
{

}

abstract public long getLong()
{

}

abstract public java.nio.ByteBuffer putLong(java.lang.Object arg0)
{

}

abstract public long getLong(java.lang.Object arg0)
{

}

abstract public java.nio.ByteBuffer putLong(java.lang.Object arg0, java.lang.Object arg1)
{

}

abstract public java.nio.LongBuffer asLongBuffer()
{

}

abstract public float getFloat()
{

}

abstract public java.nio.ByteBuffer putFloat(java.lang.Object arg0)
{

}

abstract public float getFloat(java.lang.Object arg0)
{

}

abstract public java.nio.ByteBuffer putFloat(java.lang.Object arg0, java.lang.Object arg1)
{

}

abstract public java.nio.FloatBuffer asFloatBuffer()
{

}

abstract public double getDouble()
{

}

abstract public java.nio.ByteBuffer putDouble(java.lang.Object arg0)
{

}

abstract public double getDouble(java.lang.Object arg0)
{

}

abstract public java.nio.ByteBuffer putDouble(java.lang.Object arg0, java.lang.Object arg1)
{

}

abstract public java.nio.DoubleBuffer asDoubleBuffer()
{

}


}
