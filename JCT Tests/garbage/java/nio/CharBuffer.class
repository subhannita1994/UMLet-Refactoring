package java.nio;
abstract public class CharBuffer
extends java.nio.Buffer
implements java.lang.Appendable, java.lang.CharSequence, java.lang.Comparable, java.lang.Readable
{
final java.lang.Object hb;

final java.lang.Object offset;

java.lang.Object isReadOnly;

void <init>(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2, java.lang.Object arg3, java.lang.Object arg4, java.lang.Object arg5)
{

}

void <init>(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2, java.lang.Object arg3)
{

}

public static java.nio.CharBuffer allocate(java.lang.Object arg0)
{

}

public static java.nio.CharBuffer wrap(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

public static java.nio.CharBuffer wrap(java.lang.Object arg0)
{

}

public int read(java.lang.Object arg0) throws java.io.IOException
{

}

public static java.nio.CharBuffer wrap(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

public static java.nio.CharBuffer wrap(java.lang.Object arg0)
{

}

abstract public java.nio.CharBuffer slice()
{

}

abstract public java.nio.CharBuffer duplicate()
{

}

abstract public java.nio.CharBuffer asReadOnlyBuffer()
{

}

abstract public char get()
{

}

abstract public java.nio.CharBuffer put(java.lang.Object arg0)
{

}

abstract public char get(java.lang.Object arg0)
{

}

abstract char getUnchecked(java.lang.Object arg0)
{

}

abstract public java.nio.CharBuffer put(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.nio.CharBuffer get(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

public java.nio.CharBuffer get(java.lang.Object arg0)
{

}

public java.nio.CharBuffer put(java.lang.Object arg0)
{

}

public java.nio.CharBuffer put(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

final public java.nio.CharBuffer put(java.lang.Object arg0)
{

}

public java.nio.CharBuffer put(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

final public java.nio.CharBuffer put(java.lang.Object arg0)
{

}

final public boolean hasArray()
{

}

final public char[] array()
{

}

final public int arrayOffset()
{

}

abstract public java.nio.CharBuffer compact()
{

}

abstract public boolean isDirect()
{

}

public int hashCode()
{

}

public boolean equals(java.lang.Object arg0)
{

}

private static boolean equals(java.lang.Object arg0, java.lang.Object arg1)
{

}

public int compareTo(java.lang.Object arg0)
{

}

private static int compare(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.lang.String toString()
{

}

abstract java.lang.String toString(java.lang.Object arg0, java.lang.Object arg1)
{

}

final public int length()
{

}

final public char charAt(java.lang.Object arg0)
{

}

abstract public java.nio.CharBuffer subSequence(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.nio.CharBuffer append(java.lang.Object arg0)
{

}

public java.nio.CharBuffer append(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

public java.nio.CharBuffer append(java.lang.Object arg0)
{

}

abstract public java.nio.ByteOrder order()
{

}

public java.util.stream.IntStream chars()
{

}


}
