package java.util.stream;
abstract public interface LongStream
extends java.util.stream.BaseStream
{
abstract public static interface Builder
extends java.util.function.LongConsumer
{
abstract public void accept(java.lang.Object arg0)
{

}

public java.util.stream.LongStream.Builder add(java.lang.Object arg0)
{

}

abstract public java.util.stream.LongStream build()
{

}


}

abstract public java.util.stream.LongStream filter(java.lang.Object arg0)
{

}

abstract public java.util.stream.LongStream map(java.lang.Object arg0)
{

}

abstract public java.util.stream.Stream mapToObj(java.lang.Object arg0)
{

}

abstract public java.util.stream.IntStream mapToInt(java.lang.Object arg0)
{

}

abstract public java.util.stream.DoubleStream mapToDouble(java.lang.Object arg0)
{

}

abstract public java.util.stream.LongStream flatMap(java.lang.Object arg0)
{

}

abstract public java.util.stream.LongStream distinct()
{

}

abstract public java.util.stream.LongStream sorted()
{

}

abstract public java.util.stream.LongStream peek(java.lang.Object arg0)
{

}

abstract public java.util.stream.LongStream limit(java.lang.Object arg0)
{

}

abstract public java.util.stream.LongStream skip(java.lang.Object arg0)
{

}

abstract public void forEach(java.lang.Object arg0)
{

}

abstract public void forEachOrdered(java.lang.Object arg0)
{

}

abstract public long[] toArray()
{

}

abstract public long reduce(java.lang.Object arg0, java.lang.Object arg1)
{

}

abstract public java.util.OptionalLong reduce(java.lang.Object arg0)
{

}

abstract public java.lang.Object collect(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

abstract public long sum()
{

}

abstract public java.util.OptionalLong min()
{

}

abstract public java.util.OptionalLong max()
{

}

abstract public long count()
{

}

abstract public java.util.OptionalDouble average()
{

}

abstract public java.util.LongSummaryStatistics summaryStatistics()
{

}

abstract public boolean anyMatch(java.lang.Object arg0)
{

}

abstract public boolean allMatch(java.lang.Object arg0)
{

}

abstract public boolean noneMatch(java.lang.Object arg0)
{

}

abstract public java.util.OptionalLong findFirst()
{

}

abstract public java.util.OptionalLong findAny()
{

}

abstract public java.util.stream.DoubleStream asDoubleStream()
{

}

abstract public java.util.stream.Stream boxed()
{

}

abstract public java.util.stream.LongStream sequential()
{

}

abstract public java.util.stream.LongStream parallel()
{

}

abstract public java.util.PrimitiveIterator.OfLong iterator()
{

}

abstract public java.util.Spliterator.OfLong spliterator()
{

}

public static java.util.stream.LongStream.Builder builder()
{

}

public static java.util.stream.LongStream empty()
{

}

public static java.util.stream.LongStream of(java.lang.Object arg0)
{

}

public static java.util.stream.LongStream of(java.lang.Object arg0)
{

}

public static java.util.stream.LongStream iterate(java.lang.Object arg0, java.lang.Object arg1)
{

}

public static java.util.stream.LongStream generate(java.lang.Object arg0)
{

}

public static java.util.stream.LongStream range(java.lang.Object arg0, java.lang.Object arg1)
{

}

public static java.util.stream.LongStream rangeClosed(java.lang.Object arg0, java.lang.Object arg1)
{

}

public static java.util.stream.LongStream concat(java.lang.Object arg0, java.lang.Object arg1)
{

}


}
