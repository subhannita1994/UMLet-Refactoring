package java.util.stream;
abstract public interface IntStream
extends java.util.stream.BaseStream
{
abstract public static interface Builder
extends java.util.function.IntConsumer
{
abstract public void accept(java.lang.Object arg0)
{

}

public java.util.stream.IntStream.Builder add(java.lang.Object arg0)
{

}

abstract public java.util.stream.IntStream build()
{

}


}

abstract public java.util.stream.IntStream filter(java.lang.Object arg0)
{

}

abstract public java.util.stream.IntStream map(java.lang.Object arg0)
{

}

abstract public java.util.stream.Stream mapToObj(java.lang.Object arg0)
{

}

abstract public java.util.stream.LongStream mapToLong(java.lang.Object arg0)
{

}

abstract public java.util.stream.DoubleStream mapToDouble(java.lang.Object arg0)
{

}

abstract public java.util.stream.IntStream flatMap(java.lang.Object arg0)
{

}

abstract public java.util.stream.IntStream distinct()
{

}

abstract public java.util.stream.IntStream sorted()
{

}

abstract public java.util.stream.IntStream peek(java.lang.Object arg0)
{

}

abstract public java.util.stream.IntStream limit(java.lang.Object arg0)
{

}

abstract public java.util.stream.IntStream skip(java.lang.Object arg0)
{

}

abstract public void forEach(java.lang.Object arg0)
{

}

abstract public void forEachOrdered(java.lang.Object arg0)
{

}

abstract public int[] toArray()
{

}

abstract public int reduce(java.lang.Object arg0, java.lang.Object arg1)
{

}

abstract public java.util.OptionalInt reduce(java.lang.Object arg0)
{

}

abstract public java.lang.Object collect(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

abstract public int sum()
{

}

abstract public java.util.OptionalInt min()
{

}

abstract public java.util.OptionalInt max()
{

}

abstract public long count()
{

}

abstract public java.util.OptionalDouble average()
{

}

abstract public java.util.IntSummaryStatistics summaryStatistics()
{

}

abstract public boolean anyMatch(java.lang.Object arg0)
{

}

abstract public boolean allMatch(java.lang.Object arg0)
{

}

abstract public boolean noneMatch(java.lang.Object arg0)
{

}

abstract public java.util.OptionalInt findFirst()
{

}

abstract public java.util.OptionalInt findAny()
{

}

abstract public java.util.stream.LongStream asLongStream()
{

}

abstract public java.util.stream.DoubleStream asDoubleStream()
{

}

abstract public java.util.stream.Stream boxed()
{

}

abstract public java.util.stream.IntStream sequential()
{

}

abstract public java.util.stream.IntStream parallel()
{

}

abstract public java.util.PrimitiveIterator.OfInt iterator()
{

}

abstract public java.util.Spliterator.OfInt spliterator()
{

}

public static java.util.stream.IntStream.Builder builder()
{

}

public static java.util.stream.IntStream empty()
{

}

public static java.util.stream.IntStream of(java.lang.Object arg0)
{

}

public static java.util.stream.IntStream of(java.lang.Object arg0)
{

}

public static java.util.stream.IntStream iterate(java.lang.Object arg0, java.lang.Object arg1)
{

}

public static java.util.stream.IntStream generate(java.lang.Object arg0)
{

}

public static java.util.stream.IntStream range(java.lang.Object arg0, java.lang.Object arg1)
{

}

public static java.util.stream.IntStream rangeClosed(java.lang.Object arg0, java.lang.Object arg1)
{

}

public static java.util.stream.IntStream concat(java.lang.Object arg0, java.lang.Object arg1)
{

}


}
