package java.util;
public class Hashtable
extends java.util.Dictionary
implements java.io.Serializable, java.lang.Cloneable, java.util.Map
{
private static class Entry
implements java.util.Map.Entry
{
final java.lang.Object hash;

final java.lang.Object key;

java.lang.Object value;

java.lang.Object next;

protected void <init>(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2, java.lang.Object arg3)
{

}

protected java.lang.Object clone()
{

}

public java.lang.Object getKey()
{

}

public java.lang.Object getValue()
{

}

public java.lang.Object setValue(java.lang.Object arg0)
{

}

public boolean equals(java.lang.Object arg0)
{

}

public int hashCode()
{

}

public java.lang.String toString()
{

}


}

private class EntrySet
extends java.util.AbstractSet
{
private void <init>()
{

}

public java.util.Iterator iterator()
{

}

public boolean add(java.lang.Object arg0)
{

}

public boolean contains(java.lang.Object arg0)
{

}

public boolean remove(java.lang.Object arg0)
{

}

public int size()
{

}

public void clear()
{

}


}

private class Enumerator
implements java.util.Enumeration, java.util.Iterator
{
java.lang.Object table;

java.lang.Object index;

java.lang.Object entry;

java.lang.Object lastReturned;

java.lang.Object type;

java.lang.Object iterator;

protected java.lang.Object expectedModCount;

void <init>(java.lang.Object arg0, java.lang.Object arg1)
{

}

public boolean hasMoreElements()
{

}

public java.lang.Object nextElement()
{

}

public boolean hasNext()
{

}

public java.lang.Object next()
{

}

public void remove()
{

}


}

private class KeySet
extends java.util.AbstractSet
{
private void <init>()
{

}

public java.util.Iterator iterator()
{

}

public int size()
{

}

public boolean contains(java.lang.Object arg0)
{

}

public boolean remove(java.lang.Object arg0)
{

}

public void clear()
{

}


}

private class ValueCollection
extends java.util.AbstractCollection
{
private void <init>()
{

}

public java.util.Iterator iterator()
{

}

public int size()
{

}

public boolean contains(java.lang.Object arg0)
{

}

public void clear()
{

}


}

private transient java.lang.Object table;

private transient java.lang.Object count;

private java.lang.Object threshold;

private java.lang.Object loadFactor;

private transient java.lang.Object modCount;

final private static java.lang.Object serialVersionUID;

final private static java.lang.Object MAX_ARRAY_SIZE;

private transient volatile java.lang.Object keySet;

private transient volatile java.lang.Object entrySet;

private transient volatile java.lang.Object values;

final private static java.lang.Object KEYS;

final private static java.lang.Object VALUES;

final private static java.lang.Object ENTRIES;

public void <init>(java.lang.Object arg0, java.lang.Object arg1)
{

}

public void <init>(java.lang.Object arg0)
{

}

public void <init>()
{

}

public void <init>(java.lang.Object arg0)
{

}

public synchronized int size()
{

}

public synchronized boolean isEmpty()
{

}

public synchronized java.util.Enumeration keys()
{

}

public synchronized java.util.Enumeration elements()
{

}

public synchronized boolean contains(java.lang.Object arg0)
{

}

public boolean containsValue(java.lang.Object arg0)
{

}

public synchronized boolean containsKey(java.lang.Object arg0)
{

}

public synchronized java.lang.Object get(java.lang.Object arg0)
{

}

protected void rehash()
{

}

private void addEntry(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2, java.lang.Object arg3)
{

}

public synchronized java.lang.Object put(java.lang.Object arg0, java.lang.Object arg1)
{

}

public synchronized java.lang.Object remove(java.lang.Object arg0)
{

}

public synchronized void putAll(java.lang.Object arg0)
{

}

public synchronized void clear()
{

}

public synchronized java.lang.Object clone()
{

}

public synchronized java.lang.String toString()
{

}

private java.util.Enumeration getEnumeration(java.lang.Object arg0)
{

}

private java.util.Iterator getIterator(java.lang.Object arg0)
{

}

public java.util.Set keySet()
{

}

public java.util.Set entrySet()
{

}

public java.util.Collection values()
{

}

public synchronized boolean equals(java.lang.Object arg0)
{

}

public synchronized int hashCode()
{

}

public synchronized java.lang.Object getOrDefault(java.lang.Object arg0, java.lang.Object arg1)
{

}

public synchronized void forEach(java.lang.Object arg0)
{

}

public synchronized void replaceAll(java.lang.Object arg0)
{

}

public synchronized java.lang.Object putIfAbsent(java.lang.Object arg0, java.lang.Object arg1)
{

}

public synchronized boolean remove(java.lang.Object arg0, java.lang.Object arg1)
{

}

public synchronized boolean replace(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

public synchronized java.lang.Object replace(java.lang.Object arg0, java.lang.Object arg1)
{

}

public synchronized java.lang.Object computeIfAbsent(java.lang.Object arg0, java.lang.Object arg1)
{

}

public synchronized java.lang.Object computeIfPresent(java.lang.Object arg0, java.lang.Object arg1)
{

}

public synchronized java.lang.Object compute(java.lang.Object arg0, java.lang.Object arg1)
{

}

public synchronized java.lang.Object merge(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

private void writeObject(java.lang.Object arg0) throws java.io.IOException
{

}

private void readObject(java.lang.Object arg0) throws java.io.IOException, java.lang.ClassNotFoundException
{

}

private void reconstitutionPut(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2) throws java.io.StreamCorruptedException
{

}


}
