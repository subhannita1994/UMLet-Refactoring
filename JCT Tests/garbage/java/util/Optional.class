package java.util;
final public class Optional
{
final private static java.lang.Object EMPTY;

final private java.lang.Object value;

private void <init>()
{

}

public static java.util.Optional empty()
{

}

private void <init>(java.lang.Object arg0)
{

}

public static java.util.Optional of(java.lang.Object arg0)
{

}

public static java.util.Optional ofNullable(java.lang.Object arg0)
{

}

public java.lang.Object get()
{

}

public boolean isPresent()
{

}

public void ifPresent(java.lang.Object arg0)
{

}

public java.util.Optional filter(java.lang.Object arg0)
{

}

public java.util.Optional map(java.lang.Object arg0)
{

}

public java.util.Optional flatMap(java.lang.Object arg0)
{

}

public java.lang.Object orElse(java.lang.Object arg0)
{

}

public java.lang.Object orElseGet(java.lang.Object arg0)
{

}

public java.lang.Object orElseThrow(java.lang.Object arg0) throws java.lang.Throwable
{

}

public boolean equals(java.lang.Object arg0)
{

}

public int hashCode()
{

}

public java.lang.String toString()
{

}

static void <clinit>()
{

}


}
