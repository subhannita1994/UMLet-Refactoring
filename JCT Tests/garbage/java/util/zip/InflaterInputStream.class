package java.util.zip;
public class InflaterInputStream
extends java.io.FilterInputStream
{
protected java.lang.Object inf;

protected java.lang.Object buf;

protected java.lang.Object len;

private java.lang.Object closed;

private java.lang.Object reachEOF;

java.lang.Object usesDefaultInflater;

private java.lang.Object singleByteBuf;

private java.lang.Object b;

private void ensureOpen() throws java.io.IOException
{

}

public void <init>(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

public void <init>(java.lang.Object arg0, java.lang.Object arg1)
{

}

public void <init>(java.lang.Object arg0)
{

}

public int read() throws java.io.IOException
{

}

public int read(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2) throws java.io.IOException
{

}

public int available() throws java.io.IOException
{

}

public long skip(java.lang.Object arg0) throws java.io.IOException
{

}

public void close() throws java.io.IOException
{

}

protected void fill() throws java.io.IOException
{

}

public boolean markSupported()
{

}

public synchronized void mark(java.lang.Object arg0)
{

}

public synchronized void reset() throws java.io.IOException
{

}


}
