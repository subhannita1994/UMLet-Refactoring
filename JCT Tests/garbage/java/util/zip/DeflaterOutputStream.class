package java.util.zip;
public class DeflaterOutputStream
extends java.io.FilterOutputStream
{
protected java.lang.Object def;

protected java.lang.Object buf;

private java.lang.Object closed;

final private java.lang.Object syncFlush;

java.lang.Object usesDefaultDeflater;

public void <init>(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2, java.lang.Object arg3)
{

}

public void <init>(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

public void <init>(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

public void <init>(java.lang.Object arg0, java.lang.Object arg1)
{

}

public void <init>(java.lang.Object arg0, java.lang.Object arg1)
{

}

public void <init>(java.lang.Object arg0)
{

}

public void write(java.lang.Object arg0) throws java.io.IOException
{

}

public void write(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2) throws java.io.IOException
{

}

public void finish() throws java.io.IOException
{

}

public void close() throws java.io.IOException
{

}

protected void deflate() throws java.io.IOException
{

}

public void flush() throws java.io.IOException
{

}


}
