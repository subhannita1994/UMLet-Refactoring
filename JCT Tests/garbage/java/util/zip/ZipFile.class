package java.util.zip;
public class ZipFile
implements java.io.Closeable, java.util.zip.ZipConstants
{
private class ZipEntryIterator
implements java.util.Enumeration, java.util.Iterator
{
private java.lang.Object i;

public void <init>()
{

}

public boolean hasMoreElements()
{

}

public boolean hasNext()
{

}

public java.util.zip.ZipEntry nextElement()
{

}

public java.util.zip.ZipEntry next()
{

}


}

private class ZipFileInflaterInputStream
extends java.util.zip.InflaterInputStream
{
private volatile java.lang.Object closeRequested;

private java.lang.Object eof;

final private java.lang.Object zfin;

void <init>(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

public void close() throws java.io.IOException
{

}

protected void fill() throws java.io.IOException
{

}

public int available() throws java.io.IOException
{

}

protected void finalize() throws java.lang.Throwable
{

}


}

private class ZipFileInputStream
extends java.io.InputStream
{
private volatile java.lang.Object zfisCloseRequested;

protected java.lang.Object jzentry;

private java.lang.Object pos;

protected java.lang.Object rem;

protected java.lang.Object size;

void <init>(java.lang.Object arg0)
{

}

public int read(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2) throws java.io.IOException
{

}

public int read() throws java.io.IOException
{

}

public long skip(java.lang.Object arg0)
{

}

public int available()
{

}

public long size()
{

}

public void close()
{

}

protected void finalize()
{

}


}

private java.lang.Object jzfile;

final private java.lang.Object name;

final private java.lang.Object total;

final private java.lang.Object locsig;

private volatile java.lang.Object closeRequested;

final private static java.lang.Object STORED;

final private static java.lang.Object DEFLATED;

final public static java.lang.Object OPEN_READ;

final public static java.lang.Object OPEN_DELETE;

final private static java.lang.Object usemmap;

private java.lang.Object zc;

final private java.lang.Object streams;

private java.lang.Object inflaterCache;

final private static java.lang.Object JZENTRY_NAME;

final private static java.lang.Object JZENTRY_EXTRA;

final private static java.lang.Object JZENTRY_COMMENT;

native private static void initIDs()
{

}

public void <init>(java.lang.Object arg0) throws java.io.IOException
{

}

public void <init>(java.lang.Object arg0, java.lang.Object arg1) throws java.io.IOException
{

}

public void <init>(java.lang.Object arg0) throws java.io.IOException, java.util.zip.ZipException
{

}

public void <init>(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2) throws java.io.IOException
{

}

public void <init>(java.lang.Object arg0, java.lang.Object arg1) throws java.io.IOException
{

}

public void <init>(java.lang.Object arg0, java.lang.Object arg1) throws java.io.IOException
{

}

public java.lang.String getComment()
{

}

public java.util.zip.ZipEntry getEntry(java.lang.Object arg0)
{

}

native private static long getEntry(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2)
{

}

native private static void freeEntry(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.io.InputStream getInputStream(java.lang.Object arg0) throws java.io.IOException
{

}

private java.util.zip.Inflater getInflater()
{

}

private void releaseInflater(java.lang.Object arg0)
{

}

public java.lang.String getName()
{

}

public java.util.Enumeration entries()
{

}

public java.util.stream.Stream stream()
{

}

private java.util.zip.ZipEntry getZipEntry(java.lang.Object arg0, java.lang.Object arg1)
{

}

native private static long getNextEntry(java.lang.Object arg0, java.lang.Object arg1)
{

}

public int size()
{

}

public void close() throws java.io.IOException
{

}

protected void finalize() throws java.io.IOException
{

}

native private static void close(java.lang.Object arg0)
{

}

private void ensureOpen()
{

}

private void ensureOpenOrZipException() throws java.io.IOException
{

}

private boolean startsWithLocHeader()
{

}

native private static long open(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2, java.lang.Object arg3) throws java.io.IOException
{

}

native private static int getTotal(java.lang.Object arg0)
{

}

native private static boolean startsWithLOC(java.lang.Object arg0)
{

}

native private static int read(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2, java.lang.Object arg3, java.lang.Object arg4, java.lang.Object arg5)
{

}

native private static long getEntryTime(java.lang.Object arg0)
{

}

native private static long getEntryCrc(java.lang.Object arg0)
{

}

native private static long getEntryCSize(java.lang.Object arg0)
{

}

native private static long getEntrySize(java.lang.Object arg0)
{

}

native private static int getEntryMethod(java.lang.Object arg0)
{

}

native private static int getEntryFlag(java.lang.Object arg0)
{

}

native private static byte[] getCommentBytes(java.lang.Object arg0)
{

}

native private static byte[] getEntryBytes(java.lang.Object arg0, java.lang.Object arg1)
{

}

native private static java.lang.String getZipMessage(java.lang.Object arg0)
{

}

static void <clinit>()
{

}


}
