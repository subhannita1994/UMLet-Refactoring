package java.util;
abstract public class AbstractList
extends java.util.AbstractCollection
implements java.util.List
{
private class Itr
implements java.util.Iterator
{
java.lang.Object cursor;

java.lang.Object lastRet;

java.lang.Object expectedModCount;

private void <init>()
{

}

public boolean hasNext()
{

}

public java.lang.Object next()
{

}

public void remove()
{

}

final void checkForComodification()
{

}


}

private class ListItr
extends this.Itr
implements java.util.ListIterator
{
void <init>(java.lang.Object arg0)
{

}

public boolean hasPrevious()
{

}

public java.lang.Object previous()
{

}

public int nextIndex()
{

}

public int previousIndex()
{

}

public void set(java.lang.Object arg0)
{

}

public void add(java.lang.Object arg0)
{

}


}

protected transient java.lang.Object modCount;

protected void <init>()
{

}

public boolean add(java.lang.Object arg0)
{

}

abstract public java.lang.Object get(java.lang.Object arg0)
{

}

public java.lang.Object set(java.lang.Object arg0, java.lang.Object arg1)
{

}

public void add(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.lang.Object remove(java.lang.Object arg0)
{

}

public int indexOf(java.lang.Object arg0)
{

}

public int lastIndexOf(java.lang.Object arg0)
{

}

public void clear()
{

}

public boolean addAll(java.lang.Object arg0, java.lang.Object arg1)
{

}

public java.util.Iterator iterator()
{

}

public java.util.ListIterator listIterator()
{

}

public java.util.ListIterator listIterator(java.lang.Object arg0)
{

}

public java.util.List subList(java.lang.Object arg0, java.lang.Object arg1)
{

}

public boolean equals(java.lang.Object arg0)
{

}

public int hashCode()
{

}

protected void removeRange(java.lang.Object arg0, java.lang.Object arg1)
{

}

private void rangeCheckForAdd(java.lang.Object arg0)
{

}

private java.lang.String outOfBoundsMsg(java.lang.Object arg0)
{

}


}
