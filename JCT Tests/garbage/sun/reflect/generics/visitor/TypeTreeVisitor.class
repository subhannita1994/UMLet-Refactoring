package sun.reflect.generics.visitor;
abstract public interface TypeTreeVisitor
{
abstract public java.lang.Object getResult()
{

}

abstract public void visitFormalTypeParameter(java.lang.Object arg0)
{

}

abstract public void visitClassTypeSignature(java.lang.Object arg0)
{

}

abstract public void visitArrayTypeSignature(java.lang.Object arg0)
{

}

abstract public void visitTypeVariableSignature(java.lang.Object arg0)
{

}

abstract public void visitWildcard(java.lang.Object arg0)
{

}

abstract public void visitSimpleClassTypeSignature(java.lang.Object arg0)
{

}

abstract public void visitBottomSignature(java.lang.Object arg0)
{

}

abstract public void visitByteSignature(java.lang.Object arg0)
{

}

abstract public void visitBooleanSignature(java.lang.Object arg0)
{

}

abstract public void visitShortSignature(java.lang.Object arg0)
{

}

abstract public void visitCharSignature(java.lang.Object arg0)
{

}

abstract public void visitIntSignature(java.lang.Object arg0)
{

}

abstract public void visitLongSignature(java.lang.Object arg0)
{

}

abstract public void visitFloatSignature(java.lang.Object arg0)
{

}

abstract public void visitDoubleSignature(java.lang.Object arg0)
{

}

abstract public void visitVoidDescriptor(java.lang.Object arg0)
{

}


}
