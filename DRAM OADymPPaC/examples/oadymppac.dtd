<!-- 
  Copyright (c) 2001
  Ecole des Mines de Nantes, INRIA, IRISA, Universite d'Orleans, Cosytec, Ilog

  $Id: oadymppac.dtd,v 1.14 2002/01/22 23:47:58 fekete Exp $

  DTD describing traces for constraint based programs.
  Project OADYMPPAC.  All the documentation related to the project can
  be found at the folloging URL:
  http://contraintes.inria.fr/OADymPPaC/

  Copyright (c) 2001 OADymPPaC Project (Ecole des Mines de Nantes,
  INRIA, IRISA, Universite d'Orleans, ILOG, Cosytec).

  For the OADymPPaC version 1.0:

  Namespace:
    http://contraintes.inria.fr/OADymPPaC

  Public identifier:
    PUBLIC "-//OADYMPPAC//DTD OADYMPPAC 1.0//EN"

  URI for the DTD:
    http://contraintes.inria.fr/OADymPPaC/oadymppac10.dtd
--> 

<!ENTITY % Toplevel
  "(new-variable | new-constraint | reduce | restore | wake-up |
    suspend | true | reject | activate | select-constraint | 
    select-update | tell | deactivate | solution | new-annotation |
    new-stage | start-stage | end-stage |
    suspend-stage | resume-stage | stage )*" >

<!ELEMENT oadymppac %Toplevel; >
<!ATTLIST oadymppac
   xmlns CDATA #FIXED "http://contraintes.inria.fr/OADymPPaC">

<!ENTITY % integer "CDATA" >

<!ENTITY % constraintAttributes
  "cname IDREF #IMPLIED
   externalrep CDATA #IMPLIED
   internalrep CDATA #IMPLIED" >

<!ENTITY % eventAttributes
  "depth %integer; #IMPLIED
   n %integer; #IMPLIED
   time %integer; #IMPLIED
   context CDATA #IMPLIED
   activities IDREFS #IMPLIED" >

<!ENTITY % commonAttributes
  "%eventAttributes;
   %constraintAttributes;" >

<!ENTITY % valueList "( values | range )*" >

<!ELEMENT new-variable %valueList; >
<!ATTLIST new-variable
  %eventAttributes;
  vname ID #REQUIRED
  type (int | rat | real | enum | string ) "int"
  externalrep CDATA #IMPLIED
  internalrep CDATA #IMPLIED >

<!ELEMENT new-constraint (update)* >
<!ATTLIST new-constraint
  %eventAttributes;
  cname ID #REQUIRED
  orig ( user | system ) #IMPLIED
  externalrep CDATA #IMPLIED
  internalrep CDATA #IMPLIED >

<!ELEMENT reduce ( state?, (update)*, explanation? ) >
<!ATTLIST reduce
  %commonAttributes; >

<!ELEMENT restore ( state?, (update)* ) >
<!ATTLIST restore
  %commonAttributes; >

<!ELEMENT wake-up (state?, (cause)* ) >
<!ATTLIST wake-up
  %commonAttributes; >

<!ELEMENT suspend (state?) >
<!ATTLIST suspend
  %commonAttributes; >

<!ELEMENT true (state?) >
<!ATTLIST true
  %commonAttributes; >

<!ELEMENT reject ( state?, explanation?) >
<!ATTLIST reject
  %commonAttributes; >

<!ELEMENT select-constraint ( state?) >
<!ATTLIST select-constraint
  %commonAttributes; >

<!ELEMENT select-update ( state? , %valueList; ) >
<!ATTLIST select-update
  %eventAttributes;
  vname IDREF #REQUIRED
  type (ground | any | min | max | minmax |
  empty | val | nothing) #REQUIRED >

<!ELEMENT activate (state?, explanation?) >
<!ATTLIST activate
  %commonAttributes; >

<!ELEMENT tell (state?) >
<!ATTLIST tell
   depth %integer; #REQUIRED
   n %integer; #IMPLIED
   time %integer; #IMPLIED
   context CDATA #IMPLIED
   activities IDREFS #IMPLIED
   %constraintAttributes; >

<!ELEMENT deactivate (state?) >
<!ATTLIST deactivate
  %commonAttributes; >

<!ELEMENT solution (state?) >
<!ATTLIST solution
  val %integer; #IMPLIED
  %commonAttributes; >

<!-- Annotations may replace stages -->
<!ELEMENT new-annotation (#PCDATA) >
<!ATTLIST new-annotation
  id ID #REQUIRED
  type IDREF #IMPLIED
  name CDATA #IMPLIED
  refs IDREFS #IMPLIED >

<!ELEMENT new-stage (#PCDATA) >
<!ATTLIST new-stage
  id ID #REQUIRED 
  sname CDATA #IMPLIED
  refs IDREFS #IMPLIED >
<!-- such as "labeling", "init" -->

<!ENTITY % StageAttributes
  "sname IDREF #REQUIRED
   refs IDREFS #IMPLIED
   detail CDATA #IMPLIED" >

<!ELEMENT stage %Toplevel; >
<!ATTLIST stage
  %StageAttributes; >

<!ELEMENT start-stage EMPTY >
<!ATTLIST start-stage
  %StageAttributes; >

<!ELEMENT suspend-stage EMPTY >
<!ATTLIST suspend-stage
  %StageAttributes; >

<!ELEMENT resume-stage EMPTY >
<!ATTLIST resume-stage
  %StageAttributes; >

<!ELEMENT end-stage EMPTY >
<!ATTLIST end-stage
  %StageAttributes; >

<!ELEMENT values (#PCDATA) >

<!ELEMENT range EMPTY>
<!ATTLIST range
  from CDATA #REQUIRED
  to CDATA #REQUIRED >

<!ELEMENT vardomain %valueList; >
<!ATTLIST vardomain
  vname IDREF #REQUIRED >

<!ELEMENT state (alist?, slist?, qlist?, tlist?, rlist?, ulist?, vlist?, (misc)*) >
<!ATTLIST state
  precision (changed | full) #IMPLIED >

<!ELEMENT alist (constraint)* >
<!ELEMENT slist (constraint)* >
<!ELEMENT qlist (constraint)* >
<!ELEMENT tlist (constraint)* >
<!ELEMENT rlist (constraint)* >
<!ELEMENT ulist (update)* >
<!ELEMENT vlist (vardomain)* >
<!ELEMENT misc (#PCDATA) >
<!ATTLIST misc
  type CDATA #IMPLIED >

<!ELEMENT constraint EMPTY>
<!ATTLIST constraint
  cname IDREF #REQUIRED >

<!ELEMENT update %valueList; >
<!ATTLIST update
  cname IDREF #IMPLIED
  vname IDREF #REQUIRED
  type (ground | any | min | max | minmax | empty | val | nothing) #IMPLIED >

<!ELEMENT cause %valueList; >
<!ATTLIST cause
  cname IDREF #IMPLIED
  vname IDREF #REQUIRED
  type (ground | any | min | max | minmax | empty | val) #IMPLIED >


<!ELEMENT explanation ((cause)*, (constraint)*) >

