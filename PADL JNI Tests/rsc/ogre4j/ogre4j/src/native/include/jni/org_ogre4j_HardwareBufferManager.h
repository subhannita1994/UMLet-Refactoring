/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_ogre4j_HardwareBufferManager */

#ifndef _Included_org_ogre4j_HardwareBufferManager
#define _Included_org_ogre4j_HardwareBufferManager
#ifdef __cplusplus
extern "C" {
#endif
/* Inaccessible static: pInstance */
/* Inaccessible static: singleton */
/*
 * Class:     org_ogre4j_HardwareBufferManager
 * Method:    _getSingleton
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_ogre4j_HardwareBufferManager__1getSingleton
  (JNIEnv *, jclass);

/*
 * Class:     org_ogre4j_HardwareBufferManager
 * Method:    dispose
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_HardwareBufferManager_dispose
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_HardwareBufferManager
 * Method:    createVertexBuffer
 * Signature: (IIIIZ)I
 */
JNIEXPORT jint JNICALL Java_org_ogre4j_HardwareBufferManager_createVertexBuffer
  (JNIEnv *, jclass, jint, jint, jint, jint, jboolean);

/*
 * Class:     org_ogre4j_HardwareBufferManager
 * Method:    createIndexBuffer
 * Signature: (IIIIZ)I
 */
JNIEXPORT jint JNICALL Java_org_ogre4j_HardwareBufferManager_createIndexBuffer
  (JNIEnv *, jclass, jint, jint, jint, jint, jboolean);

#ifdef __cplusplus
}
#endif
#endif
