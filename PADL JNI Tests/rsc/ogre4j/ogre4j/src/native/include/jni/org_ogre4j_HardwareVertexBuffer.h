/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_ogre4j_HardwareVertexBuffer */

#ifndef _Included_org_ogre4j_HardwareVertexBuffer
#define _Included_org_ogre4j_HardwareVertexBuffer
#ifdef __cplusplus
extern "C" {
#endif
/* Inaccessible static: table */
#undef org_ogre4j_HardwareVertexBuffer_HBU_STATIC
#define org_ogre4j_HardwareVertexBuffer_HBU_STATIC 1L
#undef org_ogre4j_HardwareVertexBuffer_HBU_DYNAMIC
#define org_ogre4j_HardwareVertexBuffer_HBU_DYNAMIC 2L
#undef org_ogre4j_HardwareVertexBuffer_HBU_WRITE_ONLY
#define org_ogre4j_HardwareVertexBuffer_HBU_WRITE_ONLY 4L
#undef org_ogre4j_HardwareVertexBuffer_HBU_DISCARDABLE
#define org_ogre4j_HardwareVertexBuffer_HBU_DISCARDABLE 8L
#undef org_ogre4j_HardwareVertexBuffer_HBU_STATIC_WRITE_ONLY
#define org_ogre4j_HardwareVertexBuffer_HBU_STATIC_WRITE_ONLY 5L
#undef org_ogre4j_HardwareVertexBuffer_HBU_DYNAMIC_WRITE_ONLY
#define org_ogre4j_HardwareVertexBuffer_HBU_DYNAMIC_WRITE_ONLY 6L
#undef org_ogre4j_HardwareVertexBuffer_HBU_DYNAMIC_WRITE_ONLY_DISCARDABLE
#define org_ogre4j_HardwareVertexBuffer_HBU_DYNAMIC_WRITE_ONLY_DISCARDABLE 14L
/* Inaccessible static: VES_POSITION */
/* Inaccessible static: VES_BLEND_WEIGHTS */
/* Inaccessible static: VES_BLEND_INDICES */
/* Inaccessible static: VES_NORMAL */
/* Inaccessible static: VES_DIFFUSE */
/* Inaccessible static: VES_SPECULAR */
/* Inaccessible static: VES_TEXTURE_COORDINATES */
/* Inaccessible static: VES_BINORMAL */
/* Inaccessible static: VES_TANGENT */
/* Inaccessible static: VET_FLOAT1 */
/* Inaccessible static: VET_FLOAT2 */
/* Inaccessible static: VET_FLOAT3 */
/* Inaccessible static: VET_FLOAT4 */
/* Inaccessible static: VET_COLOUR */
/* Inaccessible static: VET_SHORT1 */
/* Inaccessible static: VET_SHORT2 */
/* Inaccessible static: VET_SHORT3 */
/* Inaccessible static: VET_SHORT4 */
/* Inaccessible static: VET_UBYTE4 */
/*
 * Class:     org_ogre4j_HardwareVertexBuffer
 * Method:    writeData
 * Signature: (IIJ[FZ)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_HardwareVertexBuffer_writeData
  (JNIEnv *, jclass, jint, jint, jlong, jfloatArray, jboolean);

/*
 * Class:     org_ogre4j_HardwareVertexBuffer
 * Method:    dispose
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_HardwareVertexBuffer_dispose
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_HardwareVertexBuffer
 * Method:    getSizeInBytes
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_org_ogre4j_HardwareVertexBuffer_getSizeInBytes
  (JNIEnv *, jclass, jint);

#ifdef __cplusplus
}
#endif
#endif
