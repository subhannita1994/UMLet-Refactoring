/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_ogre4j_SceneManager */

#ifndef _Included_org_ogre4j_SceneManager
#define _Included_org_ogre4j_SceneManager
#ifdef __cplusplus
extern "C" {
#endif
/* Inaccessible static: table */
#undef org_ogre4j_SceneManager_SCRQM_EXCLUDE
#define org_ogre4j_SceneManager_SCRQM_EXCLUDE 1L
#undef org_ogre4j_SceneManager_SCRQM_INCLUDE
#define org_ogre4j_SceneManager_SCRQM_INCLUDE 0L
/*
 * Class:     org_ogre4j_SceneManager
 * Method:    _applySceneAnimations
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager__1applySceneAnimations
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    _findVisibleObjects
 * Signature: (IIZ)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager__1findVisibleObjects
  (JNIEnv *, jclass, jint, jint, jboolean);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    _notifyAutotrackingSceneNode
 * Signature: (IIZ)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager__1notifyAutotrackingSceneNode
  (JNIEnv *, jclass, jint, jint, jboolean);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    _queueSkiesForRendering
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager__1queueSkiesForRendering
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    _renderVisibleObjects
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager__1renderVisibleObjects
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    addRenderQueueListener
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_addRenderQueueListener
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    addSpecialCaseRenderQueue
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_addSpecialCaseRenderQueue
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    clearScene
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_clearScene
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    clearSpecialCaseRenderQueues
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_clearSpecialCaseRenderQueues
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    createAnimation
 * Signature: (ILjava/lang/String;F)I
 */
JNIEXPORT jint JNICALL Java_org_ogre4j_SceneManager_createAnimation
  (JNIEnv *, jclass, jint, jstring, jfloat);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    createAnimationState
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_ogre4j_SceneManager_createAnimationState
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    createBillboardSet
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_ogre4j_SceneManager_createBillboardSet
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    createCamera
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_ogre4j_SceneManager_createCamera
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    createEntity
 * Signature: (ILjava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_org_ogre4j_SceneManager_createEntity__ILjava_lang_String_2I
  (JNIEnv *, jclass, jint, jstring, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    createEntity
 * Signature: (ILjava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_ogre4j_SceneManager_createEntity__ILjava_lang_String_2Ljava_lang_String_2
  (JNIEnv *, jclass, jint, jstring, jstring);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    createInstance
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_ogre4j_SceneManager_createInstance
  (JNIEnv *, jclass);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    createLight
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_ogre4j_SceneManager_createLight
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    createRayQuery
 * Signature: (IIJ)I
 */
JNIEXPORT jint JNICALL Java_org_ogre4j_SceneManager_createRayQuery
  (JNIEnv *, jclass, jint, jint, jlong);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    createSceneNode
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_org_ogre4j_SceneManager_createSceneNode__I
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    createSceneNode
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_ogre4j_SceneManager_createSceneNode__ILjava_lang_String_2
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    createStaticGeometry
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_ogre4j_SceneManager_createStaticGeometry
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    destroyAllAnimations
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_destroyAllAnimations
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    destroyAllAnimationStates
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_destroyAllAnimationStates
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    destroyAnimation
 * Signature: (ILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_destroyAnimation
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    destroyAnimationState
 * Signature: (ILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_destroyAnimationState
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    destroyQuery
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_destroyQuery
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    destroySceneNode
 * Signature: (ILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_destroySceneNode
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    estimateWorldGeometry
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_ogre4j_SceneManager_estimateWorldGeometry
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    getAnimation
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_ogre4j_SceneManager_getAnimation
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    getAnimationIterator
 * Signature: (I)[Lorg/ogre4j/Animation;
 */
JNIEXPORT jobjectArray JNICALL Java_org_ogre4j_SceneManager_getAnimationIterator
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    getAnimationStateIterator
 * Signature: (I)[Lorg/ogre4j/AnimationState;
 */
JNIEXPORT jobjectArray JNICALL Java_org_ogre4j_SceneManager_getAnimationStateIterator
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    getBillboardSetIterator
 * Signature: (I)[Lorg/ogre4j/BillboardSet;
 */
JNIEXPORT jobjectArray JNICALL Java_org_ogre4j_SceneManager_getBillboardSetIterator
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    getCamera
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_ogre4j_SceneManager_getCamera
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    getCameraIterator
 * Signature: (I)[Lorg/ogre4j/Camera;
 */
JNIEXPORT jobjectArray JNICALL Java_org_ogre4j_SceneManager_getCameraIterator
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    getEntity
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_ogre4j_SceneManager_getEntity
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    getEntityIterator
 * Signature: (I)[Lorg/ogre4j/Entity;
 */
JNIEXPORT jobjectArray JNICALL Java_org_ogre4j_SceneManager_getEntityIterator
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    getFogEnd
 * Signature: (I)F
 */
JNIEXPORT jfloat JNICALL Java_org_ogre4j_SceneManager_getFogEnd
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    getFogMode
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_org_ogre4j_SceneManager_getFogMode
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    getFogStart
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_org_ogre4j_SceneManager_getFogStart
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    getLightIterator
 * Signature: (I)[Lorg/ogre4j/Light;
 */
JNIEXPORT jobjectArray JNICALL Java_org_ogre4j_SceneManager_getLightIterator
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    getRootSceneNode
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_org_ogre4j_SceneManager_getRootSceneNode
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    getShadowIndexBufferSize
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_org_ogre4j_SceneManager_getShadowIndexBufferSize
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    getShadowTextureCount
 * Signature: (I)S
 */
JNIEXPORT jshort JNICALL Java_org_ogre4j_SceneManager_getShadowTextureCount
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    getShowBoundingBoxes
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ogre4j_SceneManager_getShowBoundingBoxes
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    getShowDebugShadows
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ogre4j_SceneManager_getShowDebugShadows
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    getSuggestedViewpoint
 * Signature: (IZ)I
 */
JNIEXPORT jint JNICALL Java_org_ogre4j_SceneManager_getSuggestedViewpoint
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    getWorldGeometryRenderQueue
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_org_ogre4j_SceneManager_getWorldGeometryRenderQueue
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    isRenderQueueToBeProcessed
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ogre4j_SceneManager_isRenderQueueToBeProcessed
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    removeAllBillboardSets
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_removeAllBillboardSets
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    removeAllCameras
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_removeAllCameras
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    removeAllEntities
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_removeAllEntities
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    removeAllLights
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_removeAllLights
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    removeAllStaticGeometry
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_removeAllStaticGeometry
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    removeBillboardSet
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_removeBillboardSet__II
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    removeBillboardSet
 * Signature: (ILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_removeBillboardSet__ILjava_lang_String_2
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    removeCamera
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_removeCamera__II
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    removeCamera
 * Signature: (ILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_removeCamera__ILjava_lang_String_2
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    removeEntity
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_removeEntity__II
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    removeEntity
 * Signature: (ILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_removeEntity__ILjava_lang_String_2
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    removeLight
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_removeLight__II
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    removeLight
 * Signature: (ILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_removeLight__ILjava_lang_String_2
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    removeSpecialCaseRenderQueue
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_removeSpecialCaseRenderQueue
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    removeStaticGeometry
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_removeStaticGeometry__II
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    removeStaticGeometry
 * Signature: (ILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_removeStaticGeometry__ILjava_lang_String_2
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    setAmbientLight
 * Signature: (IFFFF)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_setAmbientLight
  (JNIEnv *, jclass, jint, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    setDisplaySceneNodes
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_setDisplaySceneNodes
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    setFog
 * Signature: (IIFFFFFFF)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_setFog
  (JNIEnv *, jclass, jint, jint, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    setShadowColour
 * Signature: (IFFFF)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_setShadowColour
  (JNIEnv *, jclass, jint, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    setShadowDirectionalLightExtrusionDistance
 * Signature: (IF)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_setShadowDirectionalLightExtrusionDistance
  (JNIEnv *, jclass, jint, jfloat);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    setShadowDirLightTextureOffset
 * Signature: (IF)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_setShadowDirLightTextureOffset
  (JNIEnv *, jclass, jint, jfloat);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    setShadowFarDistance
 * Signature: (IF)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_setShadowFarDistance
  (JNIEnv *, jclass, jint, jfloat);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    setShadowIndexBufferSize
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_setShadowIndexBufferSize
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    setShadowTextureCasterMaterial
 * Signature: (ILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_setShadowTextureCasterMaterial
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    setShadowTextureCount
 * Signature: (IS)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_setShadowTextureCount
  (JNIEnv *, jclass, jint, jshort);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    setShadowTextureFadeEnd
 * Signature: (IF)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_setShadowTextureFadeEnd
  (JNIEnv *, jclass, jint, jfloat);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    setShadowTextureFadeStart
 * Signature: (IF)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_setShadowTextureFadeStart
  (JNIEnv *, jclass, jint, jfloat);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    setShadowTextureReceiverMaterial
 * Signature: (ILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_setShadowTextureReceiverMaterial
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    setShadowTextureSelfShadow
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_setShadowTextureSelfShadow
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    setShadowTextureSize
 * Signature: (IS)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_setShadowTextureSize
  (JNIEnv *, jclass, jint, jshort);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    setShadowUseInfiniteFarPlane
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_setShadowUseInfiniteFarPlane
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    setShowDebugShadows
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_setShowDebugShadows
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    setSkyBox
 * Signature: (IZLjava/lang/String;FZFFFFLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_setSkyBox
  (JNIEnv *, jclass, jint, jboolean, jstring, jfloat, jboolean, jfloat, jfloat, jfloat, jfloat, jstring);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    setSkyPlane
 * Signature: (IZLorg/ogre4j/Plane;Ljava/lang/String;FFZFIILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_setSkyPlane
  (JNIEnv *, jclass, jint, jboolean, jobject, jstring, jfloat, jfloat, jboolean, jfloat, jint, jint, jstring);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    setSpecialCaseRenderQueueMode
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_setSpecialCaseRenderQueueMode
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    setWorldGeometry
 * Signature: (ILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_setWorldGeometry
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    setWorldGeometryRenderQueue
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_setWorldGeometryRenderQueue
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     org_ogre4j_SceneManager
 * Method:    showBoundingBoxes
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_org_ogre4j_SceneManager_showBoundingBoxes
  (JNIEnv *, jclass, jint, jboolean);

#ifdef __cplusplus
}
#endif
#endif
