RULE_CARD : BlobCard { 

RULE : Blob {ASSOC: associated FROM: mainClass ONE TO: DataClass MANY } ; 

RULE : mainClass {INTER LargeClassLowCohesion ControllerClass } ; 

RULE : LargeClassLowCohesion {INTER LargeClass LowCohesion } ; 

RULE : LargeClass { (METRIC: NM + NA, HIGH) } ; 

RULE : LowCohesion {(METRIC: LCOM, HIGH) } ;

RULE : ControllerClass {(SEMANTIC: CLASSNAME, {System, Subsystem, Manager, Driver, Controller}) } ;

RULE : DataClass {INTER (STRUCT: METHOD, Accessor) (METRIC: LCOM, LOW) } ;

} ; 



RULE_CARD : BlobCard2 { 

RULE : Blob {ASSOC: associated FROM: mainClass ONE TO: DataClass MANY } ; 

RULE : mainClass {INTER LargeClassLowCohesion ControllerClass } ; 

RULE : LargeClassLowCohesion {INTER LargeClass LowCohesion } ; 

RULE : LargeClass; 

RULE : LowCohesion; 

RULE : ControllerClass; 

RULE : DataClass; 

} ; 

RULE_CARD : SpaghettiCodeCard { 

RULE : SpaghettiCode {AGGREG: is-composed-of FROM: mainClass ONE TO: aClass ONE_OR_MANY };

RULE : mainClass {UNION NoInheritance NoPolymorphism};

RULE : NoInheritance {(METRIC: DIT, 1.1) };

RULE : NoPolymorphism {INTER (METRIC: NM, HIGH) (STRUCT: PARAMETER, Different) };

RULE : aClass {INTER ClassProcessGlobalVariable LongMethodNoParameter };

RULE : LongMethodNoParameter {INTER LongMethod MethodNoParameter };

RULE : LongMethod {(METRIC: LOC, HIGH) };

RULE : MethodNoParameter {(STRUCT: PARAMETER, No) };

RULE : ClassProcessGlobalVariable {UNION ClassProcess ClassGlobalVariable };

RULE : ClassProcess {(SEMANTIC: CLASSNAME, {process, main}) };

RULE : ClassGlobalVariable {(STRUCT: FIELD, CLASS_GLOBAL_VAR, true) };

};


RULE_CARD : SpaghettiCodeCard2 { 

RULE : SpaghettiCode {AGGREG: is-composed-of FROM: mainClass ONE TO: aClass ONE_OR_MANY };

RULE : mainClass {UNION NoInheritance NoPolymorphism};

RULE : NoInheritance;

RULE : NoPolymorphism;

RULE : aClass {INTER ClassProcessGlobalVariable LongMethodNoParameter };

RULE : LongMethodNoParameter {INTER LongMethod MethodNoParameter };

RULE : LongMethod;

RULE : MethodNoParameter;

RULE : ClassProcessGlobalVariable {UNION ClassProcess ClassGlobalVariable };

RULE : ClassProcess; 

RULE : ClassGlobalVariable;

};


RULE_CARD : FunctionalDecompositionCard { 

RULE : FunctionalDecomposition {ASSOC: associated FROM: mainClass ONE TO: aClass MANY };

RULE : mainClass {UNION NoInheritPoly ControllerClass};

RULE : NoInheritPoly {UNION NoInheritance NoPolymorphism};

RULE : NoInheritance {(METRIC: DIT, 1) };

RULE : NoPolymorphism {INTER (METRIC: NM, HIGH) (STRUCT: PARAMETER, Different) };

RULE : ControllerClass {(SEMANTIC: CLASSNAME, {Calculate, Display}) } ; 

RULE : aClass {INTER ClassOneMethod FieldPrivate};

RULE : ClassOneMethod {(STRUCT: METHOD, One)};

RULE : FieldPrivate {(STRUCT: FIELD, PRIVATE) };

};


RULE_CARD : FunctionalDecompositionCard2 { 

RULE : FunctionalDecomposition {ASSOC: associated FROM: mainClass ONE TO: aClass MANY };

RULE : mainClass {UNION NoInheritance NoPolymorphism};

RULE : NoInheritance;

RULE : NoPolymorphism;

RULE : mainClass {INTER NoInheritance ControllerClass} ;

RULE : NoInheritance;

RULE : ControllerClass; 

RULE : aClass {INTER ClassOneMethod FieldPrivate};

RULE : ClassOneMethod {(STRUCT: METHOD, One)};

RULE : FieldPrivate;

};

RULE_CARD : SwissArmyKnife {

RULE : MultipleInterface { (STRUCT: INTERFACE, HIGH) } ;

};


