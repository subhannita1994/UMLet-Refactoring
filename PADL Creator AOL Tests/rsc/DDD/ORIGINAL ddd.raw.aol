
#Process file  ../../code/ddd-3.0/ddd/ctrl.o.nu.cls

CLASS regex	#LOC 54


	ATTRIBUTES
		PROTECTED  matcher:rxmatchproc,
		PROTECTED  data:void

	OPERATIONS
		PUBLIC regex(rxmatchproc p, void* data):regex,
		PUBLIC ~regex():regex,
		PUBLIC match(CONST_char* s, int len, int pos):int,
		PUBLIC search(CONST_char* s, int len, int& matchlen, int startpos):int,
		PUBLIC OK():bool,
		PRIVATE regex(CONST_regex&):regex,
		PRIVATE operator_=(CONST_regex&):regex&
		;


CLASS subString	#LOC 49


	ATTRIBUTES
		PROTECTED  pos:unsigned int,
		PROTECTED  len:unsigned int

	OPERATIONS
		PROTECTED assign(strRep* , CONST_char* , int):void,
		PROTECTED subString(string& x, int p, int l):subString,
		PROTECTED subString(CONST_string& x, int p, int l):subString,
		PUBLIC subString(CONST_subString& x):subString,
		PUBLIC ~subString():subString,
		PUBLIC operator_=(CONST_string& y):subString&,
		PUBLIC operator_=(CONST_subString& y):subString&,
		PUBLIC operator_=(CONST_char* t):subString&,
		PUBLIC operator_=(char* t):subString&,
		PUBLIC operator_=(char c):subString&,
		PUBLIC contains(char c):bool,
		PUBLIC contains(CONST_string& y):bool,
		PUBLIC contains(CONST_subString& y):bool,
		PUBLIC contains(CONST_char* t):bool,
		PUBLIC contains(char* t):bool,
		PUBLIC contains(CONST_regex& r):bool,
		PUBLIC matches(CONST_regex& r):bool,
		PUBLIC length():unsigned int,
		PUBLIC empty():int,
		PUBLIC chars():const char*,
		PUBLIC OK():bool
		;



	RELATION S
			ROLES
			CLASS	subString MULT UNDEFINED,
			CLASS	string MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	subString MULT UNDEFINED,
			CLASS	string MULT UNDEFINED
		;

CLASS string	#LOC 318


	ATTRIBUTES
		PROTECTED  rep:strRep

	OPERATIONS
		PROTECTED search(int, int, CONST_char* , int):int,
		PROTECTED search(int, int, char):int,
		PROTECTED match(int, int, int, CONST_char* , int):int,
		PROTECTED _gsub(CONST_char* , int, CONST_char* ,int):int,
		PROTECTED _gsub(CONST_regex& , CONST_char* , int):int,
		PROTECTED _substr(int, int):subString,
		PROTECTED _substr(int, int):const subString,
		PRIVATE string(int):string,
		PRIVATE operator_=(int):string&,
		PUBLIC string():string,
		PUBLIC string(CONST_string& x):string,
		PUBLIC string(CONST_subString&  x):string,
		PUBLIC string(CONST_char* t):string,
		PUBLIC string(CONST_char* t, int len):string,
		PUBLIC string(char c):string,
		PUBLIC string(ostrstream& os):string,
		PUBLIC ~string():string,
		PUBLIC operator_=(CONST_string& y):string&,
		PUBLIC operator_=(CONST_char* y):string&,
		PUBLIC operator_=(char* y):string&,
		PUBLIC operator_=(char c):string&,
		PUBLIC operator_=(CONST_subString& y):string&,
		PUBLIC operator_=(ostrstream& os):string&,
		PUBLIC operator_+=(CONST_string& y):string&,
		PUBLIC operator_+=(CONST_subString& y):string&,
		PUBLIC operator_+=(CONST_char* t):string&,
		PUBLIC operator_+=(char* t):string&,
		PUBLIC operator_+=(char c):string&,
		PUBLIC prepend(CONST_string& y):string&,
		PUBLIC prepend(CONST_subString& y):string&,
		PUBLIC prepend(CONST_char* t):string&,
		PUBLIC prepend(char* t):string&,
		PUBLIC prepend(char c):string&,
		PUBLIC index(char c, int startpos):int,
		PUBLIC index(CONST_string& y, int startpos):int,
		PUBLIC index(CONST_subString& y, int startpos):int,
		PUBLIC index(CONST_char* t, int startpos):int,
		PUBLIC index(char* t, int startpos):int,
		PUBLIC index(CONST_regex& r, int startpos):int,
		PUBLIC contains(char c):bool,
		PUBLIC contains(CONST_string& y):bool,
		PUBLIC contains(CONST_subString& y):bool,
		PUBLIC contains(CONST_char* t):bool,
		PUBLIC contains(char* t):bool,
		PUBLIC contains(CONST_regex& r):bool,
		PUBLIC contains(char c, int pos):bool,
		PUBLIC contains(CONST_string& y, int pos):bool,
		PUBLIC contains(CONST_subString& y, int pos):bool,
		PUBLIC contains(CONST_char* t, int pos):bool,
		PUBLIC contains(char* t, int pos):bool,
		PUBLIC contains(CONST_regex& r, int pos):bool,
		PUBLIC matches(char c, int pos):bool,
		PUBLIC matches(CONST_string& y, int pos):bool,
		PUBLIC matches(CONST_subString& y, int pos):bool,
		PUBLIC matches(CONST_char* t, int pos):bool,
		PUBLIC matches(char* t, int pos):bool,
		PUBLIC matches(CONST_regex& r, int pos):bool,
		PUBLIC freq(char c):int,
		PUBLIC freq(CONST_string& y):int,
		PUBLIC freq(CONST_subString& y):int,
		PUBLIC freq(CONST_char* t):int,
		PUBLIC freq(char* t):int,
		PUBLIC at(int pos, int len):subString,
		PUBLIC operator():subString,
		PUBLIC at(CONST_string& x, int startpos):subString,
		PUBLIC at(CONST_subString& x, int startpos):subString,
		PUBLIC at(CONST_char* t, int startpos):subString,
		PUBLIC at(char* t, int startpos):subString,
		PUBLIC at(char c, int startpos):subString,
		PUBLIC at(CONST_regex& r, int startpos):subString,
		PUBLIC before(int pos):subString,
		PUBLIC before(CONST_string& x, int startpos):subString,
		PUBLIC before(CONST_subString& x, int startpos):subString,
		PUBLIC before(CONST_char* t, int startpos):subString,
		PUBLIC before(char* t, int startpos):subString,
		PUBLIC before(char c, int startpos):subString,
		PUBLIC before(CONST_regex& r, int startpos):subString,
		PUBLIC through(int pos):subString,
		PUBLIC through(CONST_string& x, int startpos):subString,
		PUBLIC through(CONST_subString& x, int startpos):subString,
		PUBLIC through(CONST_char* t, int startpos):subString,
		PUBLIC through(char* t, int startpos):subString,
		PUBLIC through(char c, int startpos):subString,
		PUBLIC through(CONST_regex& r, int startpos):subString,
		PUBLIC from(int pos):subString,
		PUBLIC from(CONST_string& x, int startpos):subString,
		PUBLIC from(CONST_subString& x, int startpos):subString,
		PUBLIC from(CONST_char* t, int startpos):subString,
		PUBLIC from(char* t, int startpos):subString,
		PUBLIC from(char c, int startpos):subString,
		PUBLIC from(CONST_regex& r, int startpos):subString,
		PUBLIC after(int pos):subString,
		PUBLIC after(CONST_string& x, int startpos):subString,
		PUBLIC after(CONST_subString& x, int startpos):subString,
		PUBLIC after(CONST_char* t, int startpos):subString,
		PUBLIC after(char* t, int startpos):subString,
		PUBLIC after(char c, int startpos):subString,
		PUBLIC after(CONST_regex& r, int startpos):subString,
		PUBLIC at(int pos, int len):const subString,
		PUBLIC operator():const subString,
		PUBLIC at(CONST_string& x, int startpos):const subString,
		PUBLIC at(CONST_subString& x, int startpos):const subString,
		PUBLIC at(CONST_char* t, int startpos):const subString,
		PUBLIC at(char* t, int startpos):const subString,
		PUBLIC at(char c, int startpos):const subString,
		PUBLIC at(CONST_regex& r, int startpos):const subString,
		PUBLIC before(int pos):const subString,
		PUBLIC before(CONST_string& x, int startpos):const subString,
		PUBLIC before(CONST_subString& x, int startpos):const subString,
		PUBLIC before(CONST_char* t, int startpos):const subString,
		PUBLIC before(char* t, int startpos):const subString,
		PUBLIC before(char c, int startpos):const subString,
		PUBLIC before(CONST_regex& r, int startpos):const subString,
		PUBLIC through(int pos):const subString,
		PUBLIC through(CONST_string& x, int startpos):const subString,
		PUBLIC through(CONST_subString& x, int startpos):const subString,
		PUBLIC through(CONST_char* t, int startpos):const subString,
		PUBLIC through(char* t, int startpos):const subString,
		PUBLIC through(char c, int startpos):const subString,
		PUBLIC through(CONST_regex& r, int startpos):const subString,
		PUBLIC from(int pos):const subString,
		PUBLIC from(CONST_string& x, int startpos):const subString,
		PUBLIC from(CONST_subString& x, int startpos):const subString,
		PUBLIC from(CONST_char* t, int startpos):const subString,
		PUBLIC from(char* t, int startpos):const subString,
		PUBLIC from(char c, int startpos):const subString,
		PUBLIC from(CONST_regex& r, int startpos):const subString,
		PUBLIC after(int pos):const subString,
		PUBLIC after(CONST_string& x, int startpos):const subString,
		PUBLIC after(CONST_subString& x, int startpos):const subString,
		PUBLIC after(CONST_char* t, int startpos):const subString,
		PUBLIC after(char* t, int startpos):const subString,
		PUBLIC after(char c, int startpos):const subString,
		PUBLIC after(CONST_regex& r, int startpos):const subString,
		PUBLIC del(int pos, int len):void,
		PUBLIC del(CONST_string& y, int startpos):void,
		PUBLIC del(CONST_subString& y, int startpos):void,
		PUBLIC del(CONST_char* t, int startpos):void,
		PUBLIC del(char* t, int startpos):void,
		PUBLIC del(char c, int startpos):void,
		PUBLIC del(CONST_regex& r, int startpos):void,
		PUBLIC gsub(CONST_string& pat, CONST_string& repl):int,
		PUBLIC gsub(CONST_subString& pat, CONST_string& repl):int,
		PUBLIC gsub(CONST_char* pat, CONST_string& repl):int,
		PUBLIC gsub(CONST_char* pat, CONST_char* repl):int,
		PUBLIC gsub(CONST_char* pat, char* repl):int,
		PUBLIC gsub(char* pat, CONST_string& repl):int,
		PUBLIC gsub(char* pat, CONST_char* repl):int,
		PUBLIC gsub(char* pat, char* repl):int,
		PUBLIC gsub(CONST_regex& pat, CONST_string& repl):int,
		PUBLIC reverse():void,
		PUBLIC upcase():void,
		PUBLIC downcase():void,
		PUBLIC capitalize():void,
		PUBLIC operator_[](char i):char&,
		PUBLIC operator_[](short i):char&,
		PUBLIC operator_[](ushort i):char&,
		PUBLIC operator_[](int i):char&,
		PUBLIC operator_[](uint i):char&,
		PUBLIC operator_[](long i):char&,
		PUBLIC operator_[](ulong i):char&,
		PUBLIC operator_[](char i):char,
		PUBLIC operator_[](ushort i):char,
		PUBLIC operator_[](short i):char,
		PUBLIC operator_[](int i):char,
		PUBLIC operator_[](uint i):char,
		PUBLIC operator_[](long i):char,
		PUBLIC operator_[](ulong i):char,
		PUBLIC elem(int i):char,
		PUBLIC firstchar():char,
		PUBLIC lastchar():char,
		PUBLIC char*():operator_const,
		PUBLIC operator_char*():operator_char*,
		PUBLIC chars():const char*,
		PUBLIC length():unsigned int,
		PUBLIC empty():int,
		PUBLIC alloc(int newsize):void,
		PUBLIC allocation():int,
		PUBLIC error(CONST_char* msg):void,
		PUBLIC OK():bool
		;


#==================================================================
#File ../../code/ddd-3.0/ddd/ctrl.o.nu.cls	 Class Number = 3
#==================================================================
#Process file  ../../code/ddd-3.0/ddd/cwd.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/cook.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/hash.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/home.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/rxclass.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/sigName.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/strclass.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/tabs.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/SignalB.o.nu.cls

CLASS SignalBlocker	#LOC 37


	ATTRIBUTES
		PRIVATE  old_set:sigset_t

	OPERATIONS
		PRIVATE operator_=(CONST_SignalBlocker&):SignalBlocker&,
		PRIVATE SignalBlocker(CONST_SignalBlocker& sb):SignalBlocker,
		PUBLIC SignalBlocker(int signum):SignalBlocker,
		PUBLIC SignalBlocker():SignalBlocker,
		PUBLIC ~SignalBlocker():SignalBlocker
		;


#=====================================================================
#File ../../code/ddd-3.0/ddd/SignalB.o.nu.cls	 Class Number = 1
#=====================================================================
#Process file  ../../code/ddd-3.0/ddd/TypeInfo.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/UniqueId.o.nu.cls

CLASS UniqueId	#LOC 32


	ATTRIBUTES
		PRIVATE  _id:unsigned long,
		PRIVATE SHARED  tics:unsigned long,
		PRIVATE SHARED  ids:unsigned long,
		PUBLIC SHARED  debug:bool

	OPERATIONS
		PUBLIC UniqueId():UniqueId,
		PUBLIC ~UniqueId():UniqueId,
		PUBLIC long():operator_unsigned,
		PUBLIC SHARED inUse():unsigned long
		;


#======================================================================
#File ../../code/ddd-3.0/ddd/UniqueId.o.nu.cls	 Class Number = 1
#======================================================================
#Process file  ../../code/ddd-3.0/ddd/MemCheck.o.nu.cls

CLASS MemCheckHeader	#LOC 28


	ATTRIBUTES


	OPERATIONS
		PUBLIC init():void
		;


CLASS MemCheck	#LOC 45


	ATTRIBUTES
		PRIVATE SHARED  tics:unsigned,
		PRIVATE SHARED  freeBytes:unsigned,
		PRIVATE SHARED  allocBytes:unsigned,
		PUBLIC SHARED  log:int

	OPERATIONS
		PRIVATE SHARED morecore(unsigned nunits):MemCheckHeader*,
		PRIVATE SHARED _free(MemCheckHeader *bp):void,
		PRIVATE SHARED validate(MemCheckHeader* bp, char* src):void,
		PRIVATE SHARED init():void,
		PUBLIC SHARED alloc(unsigned nbytes):void*,
		PUBLIC SHARED free(void *p):void,
		PUBLIC SHARED map(ostream& os, unsigned start , char* prefix):void,
		PUBLIC SHARED tic():unsigned,
		PUBLIC SHARED in_free():unsigned,
		PUBLIC SHARED in_alloc():unsigned,
		PUBLIC SHARED OK():int
		;



	RELATION freep
			ROLES
			CLASS	MemCheck MULT UNDEFINED,
			CLASS	MemCheckHeader MULT UNDEFINED
		;


	RELATION allocp
			ROLES
			CLASS	MemCheck MULT UNDEFINED,
			CLASS	MemCheckHeader MULT UNDEFINED
		;


	AGGREGATION NAME freebase CONTAINER CLASS MemCheck:: MULT UNDEFINED
			PARTS
			CLASS	MemCheckHeader MULT UNDEFINED
		;


	AGGREGATION NAME allocbase CONTAINER CLASS MemCheck:: MULT UNDEFINED
			PARTS
			CLASS	MemCheckHeader MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	MemCheck MULT UNDEFINED,
			CLASS	MemCheckHeader MULT UNDEFINED
		;

CLASS MemChecker	#LOC 16


	ATTRIBUTES
		PRIVATE  start:unsigned

	OPERATIONS
		PUBLIC MemChecker(char *pfx):MemChecker,
		PUBLIC ~MemChecker():MemChecker
		;



	AGGREGATION NAME prefix CONTAINER CLASS MemChecker:: MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;

#======================================================================
#File ../../code/ddd-3.0/ddd/MemCheck.o.nu.cls	 Class Number = 3
#======================================================================
#Process file  ../../code/ddd-3.0/ddd/IntIntAA.o.nu.cls

CLASS AssocRec	#LOC 32


	ATTRIBUTES
		PUBLIC  key:K,
		PUBLIC  value:V

	OPERATIONS
		PUBLIC AssocRec(CONST_K& k, CONST_V& v):AssocRec,
		PUBLIC AssocRec(CONST_K& k):AssocRec,
		PRIVATE AssocRec(CONST_AssocRec<K_V>& x):AssocRec,
		PRIVATE operator_=(CONST_AssocRec<K_V>&):AssocRec<K,V>&
		;



	AGGREGATION NAME next CONTAINER CLASS AssocRec::AssocRec MULT UNDEFINED
			PARTS
			CLASS	K,V MULT UNDEFINED
		;

CLASS _Assoc	#LOC 127


	ATTRIBUTES


	OPERATIONS
		PROTECTED ABSTRACT lookup(CONST_K& key):AssocRec<K,V>*,
		PROTECTED ABSTRACT insert(CONST_K& key):AssocRec<K,V>*,
		PUBLIC _Assoc():_Assoc,
		PUBLIC ABSTRACT ~_Assoc():_Assoc,
		PUBLIC operator_[](CONST_K& key):V&,
		PUBLIC operator_[](CONST_K& key):const V&,
		PUBLIC add(CONST_K& key):void,
		PUBLIC has(CONST_K& key):bool,
		PUBLIC remove(CONST_K& key, int n):void,
		PUBLIC _Assoc(CONST__Assoc<K_V>& m):_Assoc,
		PUBLIC operator_=(CONST__Assoc<K_V>& m):_Assoc<K, V>
		;



	AGGREGATION NAME entries CONTAINER CLASS _Assoc::AssocRec MULT UNDEFINED
			PARTS
			CLASS	K,V MULT UNDEFINED
		;

CLASS AssocMark	#LOC 29


	ATTRIBUTES


	OPERATIONS
		PROTECTED AssocMark(AssocRec<K_V> *ptr):AssocMark,
		PUBLIC AssocMark(CONST_Assoc<K_V>& assoc):AssocMark,
		PUBLIC AssocMark(CONST_AssocMark<K_V>& mark):AssocMark,
		PUBLIC operator_=(CONST_Assoc<K_V>& assoc):AssocMark<K,V>&,
		PUBLIC operator_=(CONST_AssocMark<K_V>& mark):AssocMark<K,V>&
		;



	AGGREGATION NAME rec CONTAINER CLASS AssocMark::AssocRec MULT UNDEFINED
			PARTS
			CLASS	K,V MULT UNDEFINED
		;

CLASS AssocIter	#LOC 42


	ATTRIBUTES


	OPERATIONS
		PROTECTED AssocIter(AssocRec<K_V> *ptr):AssocIter,
		PUBLIC AssocIter(CONST_Assoc<K_V>& assoc):AssocIter,
		PUBLIC AssocIter(CONST_AssocIter<K_V>& iter):AssocIter,
		PUBLIC operator_=(CONST_Assoc<K_V>& assoc):AssocIter<K,V>&,
		PUBLIC operator_=(CONST_AssocIter<K_V>& iter):AssocIter<K,V>&,
		PUBLIC key():const K&,
		PUBLIC value():const V&,
		PUBLIC value():V&,
		PUBLIC ok():bool,
		PUBLIC next():AssocIter<K,V>,
		PUBLIC operator_++():const AssocIter<K,V>&,
		PUBLIC operator_++(int):const AssocIter<K,V>
		;



	GENERALIZATION AssocMark
			SUBCLASSES AssocIter
		;

CLASS Assoc	#LOC 30


	ATTRIBUTES


	OPERATIONS
		PROTECTED lookup(CONST_K& key):AssocRec<K,V>*,
		PROTECTED insert(CONST_K& key):AssocRec<K,V>*,
		PUBLIC release(CONST_AssocMark<K_V>& mark):void
		;



	GENERALIZATION _Assoc
			SUBCLASSES Assoc
		;

CLASS DynArray	#LOC 94


	ATTRIBUTES
		PRIVATE  _allocated_size:int,
		PRIVATE  _values:T

	OPERATIONS
		PRIVATE SHARED max(int a, int b):int,
		PRIVATE grow(int new_size_min):void,
		PROTECTED value(int i):T&,
		PROTECTED _value(int i):T&,
		PUBLIC ABSTRACT size():int,
		PUBLIC operator_[](int i):T&,
		PUBLIC operator_[](int i):T&,
		PUBLIC values():T*,
		PUBLIC T*():operator_const,
		PUBLIC operator_T*():operator_T*,
		PUBLIC DynArray(int initial_size):DynArray,
		PUBLIC DynArray(T* v, int n):DynArray,
		PUBLIC DynArray(CONST_DynArray<T>& m):DynArray,
		PUBLIC ABSTRACT ~DynArray():DynArray,
		PUBLIC operator_=(CONST_DynArray<T>& m):DynArray<T>&
		;


CLASS VarArray	#LOC 82


	ATTRIBUTES
		PRIVATE  _size:int

	OPERATIONS
		PUBLIC ABSTRACT size():int,
		PROTECTED ABSTRACT add(CONST_T& v):void,
		PROTECTED ABSTRACT _remove(int n):void,
		PROTECTED ABSTRACT remove(CONST_T& v):void,
		PUBLIC VarArray(int initial_size):VarArray,
		PUBLIC VarArray(T* v, int n):VarArray,
		PUBLIC VarArray(CONST_VarArray<T>& m):VarArray,
		PUBLIC ABSTRACT ~VarArray():VarArray,
		PUBLIC operator_=(CONST_VarArray<T>& m):VarArray<T>&,
		PUBLIC operator_+=(CONST_T& value):void,
		PUBLIC operator_-=(CONST_T& value):void,
		PUBLIC operator_[](int i):T&,
		PUBLIC operator_[](int i):T&
		;



	GENERALIZATION DynArray
			SUBCLASSES VarArray
		;

#======================================================================
#File ../../code/ddd-3.0/ddd/IntIntAA.o.nu.cls	 Class Number = 7
#======================================================================
#Process file  ../../code/ddd-3.0/ddd/StringA.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/StringSA.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/VoidArray.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/WidgetSA.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/Agent.o.nu.cls

CLASS AgentManager	#LOC 44


	ATTRIBUTES
		PRIVATE  old_pipe_handler:SignalProc,
		PRIVATE  old_chld_handler:SignalProc

	OPERATIONS
		PRIVATE operator_+=(Agent *key):void,
		PRIVATE operator_-=(Agent *key):void,
		PRIVATE AgentManager(CONST_AgentManager&):AgentManager,
		PRIVATE operator_=(CONST_AgentManager&):AgentManager&,
		PUBLIC AgentManager(SignalProc new_chld_handler):AgentManager,
		PUBLIC ABSTRACT ~AgentManager():AgentManager,
		PUBLIC search(int pid):Agent*,
		PUBLIC childStatusChange():bool,
		PUBLIC commit():void
		;



	RELATION first
			ROLES
			CLASS	AgentManager MULT UNDEFINED,
			CLASS	Agent MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	AgentManager MULT UNDEFINED,
			CLASS	Agent MULT UNDEFINED
		;

CLASS HandlerList	#LOC 93


	ATTRIBUTES
		PRIVATE  proc:HandlerProc,
		PRIVATE  client_data:void,
		PRIVATE  next:HandlerRec,
		PRIVATE  remove_me:bool,
		PRIVATE  _nTypes:unsigned,
		PRIVATE  *handlers:HandlerRec,
		PRIVATE  active:int

	OPERATIONS
		PRIVATE HandlerRec(HandlerProc p, void* c, HandlerRec* n):HandlerRec,
		PRIVATE HandlerRec(CONST_HandlerRec&):HandlerRec,
		PRIVATE operator_=(CONST_HandlerRec&):HandlerRec&,
		PRIVATE SHARED compare(CONST_HandlerRec& l1, CONST_HandlerRec& l2):int,
		PROTECTED processRemovals(unsigned type):void,
		PRIVATE operator_=(CONST_HandlerList&):HandlerList&,
		PUBLIC HandlerList(unsigned n):HandlerList,
		PUBLIC HandlerList(CONST_HandlerList& l):HandlerList,
		PUBLIC compare(CONST_HandlerList& l):int,
		PUBLIC nTypes():unsigned,
		PUBLIC add(unsigned type, HandlerProc proc, void* client_data):void,
		PUBLIC add(CONST_HandlerList& l):void,
		PUBLIC remove(unsigned type, HandlerProc proc, void* client_data):void,
		PUBLIC removeAll(unsigned type):void,
		PUBLIC removeAll():void,
		PUBLIC call(unsigned type, void* CONST_source , void* CONST_call_data):void,
		PUBLIC has(unsigned type):int,
		PUBLIC ~HandlerList():HandlerList
		;


CLASS Agent	#LOC 305


	ATTRIBUTES
		PRIVATE  _pid:public: pid_t,
		PROTECTED  _inputfp:FILE,
		PROTECTED  _outputfp:FILE,
		PROTECTED  _errorfp:FILE,
		PRIVATE  _running:bool,
		PRIVATE  _beingTerminated:bool,
		PRIVATE  _lastStatus:int,
		PRIVATE  _terminateTimeOut:int,
		PRIVATE  _hangupTimeOut:int,
		PRIVATE  _killTimeOut:int,
		PRIVATE  to_child:int ,
		PRIVATE  to_parent:int ,
		PRIVATE  to_parent_error:int 

	OPERATIONS
		PRIVATE operator_=(CONST_Agent&):Agent&,
		PROTECTED callHandlers(int type, void* call_data):void,
		PROTECTED ABSTRACT callHandlersWhenIdle(int type, void* call_data):void,
		PRIVATE checkIfDead():void,
		PRIVATE setRunning():void,
		PRIVATE unsetRunning():void,
		PRIVATE startChildProcess():void,
		PRIVATE SHARED childStatusChange(int sig):void,
		PRIVATE _raise(string msg, int handler, bool system_error, bool check_if_running):void,
		PROTECTED _raiseMsg(string msg):void,
		PROTECTED _raiseWarning(string msg):void,
		PROTECTED _raiseIOMsg(string msg):void,
		PROTECTED _raiseIOWarning(string msg):void,
		PROTECTED raiseMsg(string msg):void,
		PROTECTED raiseWarning(string msg):void,
		PROTECTED raiseIOMsg(string msg):void,
		PROTECTED raiseIOWarning(string msg):void,
		PROTECTED ABSTRACT waitToTerminate():void,
		PROTECTED ABSTRACT abort():void,
		PROTECTED SHARED defaultHandler(Agent* source, void* client_data, void* call_data):void,
		PROTECTED addDefaultHandler(unsigned type):void,
		PROTECTED ABSTRACT restoreParentIO():void,
		PROTECTED ABSTRACT activateIO():void,
		PROTECTED ABSTRACT deactivateIO():void,
		PROTECTED ABSTRACT setupCommunication():int,
		PROTECTED ABSTRACT setupChildCommunication():int,
		PROTECTED ABSTRACT setupParentCommunication():int,
		PROTECTED ABSTRACT executeChild():void,
		PROTECTED ABSTRACT closeChannel(FILE *fp):void,
		PROTECTED ABSTRACT inputEOF():void,
		PROTECTED ABSTRACT errorEOF():void,
		PROTECTED inputIsTerminal():bool,
		PROTECTED outputIsTerminal():bool,
		PROTECTED onTerminal():bool,
		PUBLIC Agent(string pth, unsigned nTypes):Agent,
		PUBLIC Agent(FILE* in , FILE* out , FILE* err , unsigned nTypes):Agent,
		PUBLIC Agent(bool, unsigned nTypes):Agent,
		PUBLIC Agent(CONST_Agent& c):Agent,
		PUBLIC ABSTRACT dup():Agent*,
		PUBLIC ABSTRACT ~Agent():Agent,
		PUBLIC ABSTRACT start():void,
		PUBLIC inputfp():FILE*,
		PUBLIC outputfp():FILE*,
		PUBLIC errorfp():FILE*,
		PUBLIC ABSTRACT shutdown():void,
		PUBLIC ABSTRACT wait():void,
		PUBLIC ABSTRACT terminate(bool onExit):void,
		PUBLIC _kill(int sig):void,
		PUBLIC _hangup():void,
		PUBLIC _terminate():void,
		PUBLIC ABSTRACT handlerChange():void,
		PUBLIC addHandler(unsigned type, AgentHandlerProc proc, void* client_data):void,
		PUBLIC addHandler(CONST_Agent& a):void,
		PUBLIC removeHandler(unsigned type, AgentHandlerProc proc, void* client_data):void,
		PUBLIC removeAllHandlers(unsigned type):void,
		PUBLIC removeAllHandlers():void,
		PUBLIC hasHandler(unsigned type):bool,
		PUBLIC hasNewStatus(int status):void,
		PUBLIC path():string,
		PUBLIC pid():pid_t,
		PUBLIC terminateTimeOut():int&,
		PUBLIC hangupTimeOut():int&,
		PUBLIC killTimeOut():int&,
		PUBLIC terminateTimeOut():int,
		PUBLIC hangupTimeOut():int,
		PUBLIC killTimeOut():int,
		PUBLIC beingTerminated():bool,
		PUBLIC lastStatus():int,
		PUBLIC name():string,
		PUBLIC running():bool,
		PUBLIC ABSTRACT commit():void,
		PUBLIC ABSTRACT OK():bool
		;



	AGGREGATION NAME handlers CONTAINER CLASS Agent::AssocRec MULT UNDEFINED
			PARTS
			CLASS	HandlerList MULT UNDEFINED
		;


	RELATION next
			ROLES
			CLASS	Agent MULT UNDEFINED,
			CLASS	Agent MULT UNDEFINED
		;


	AGGREGATION NAME _path CONTAINER CLASS Agent::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME runningAgents CONTAINER CLASS Agent::AssocRec MULT UNDEFINED
			PARTS
			CLASS	AgentManager MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	Agent MULT UNDEFINED,
			CLASS	string MULT UNDEFINED
		;

#===================================================================
#File ../../code/ddd-3.0/ddd/Agent.o.nu.cls	 Class Number = 3
#===================================================================
#Process file  ../../code/ddd-3.0/ddd/AgentM.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/ChunkQueue.o.nu.cls

CLASS ChunkQueue	#LOC 79


	ATTRIBUTES
		PRIVATE  _length:public: int,
		PRIVATE  _size:int,
		PRIVATE  _data:char

	OPERATIONS
		PRIVATE grow(int newSize):void,
		PRIVATE ChunkQueue(CONST_ChunkQueue&):ChunkQueue,
		PRIVATE operator_=(CONST_ChunkQueue&):ChunkQueue&,
		PUBLIC ChunkQueue(int initialSize):ChunkQueue,
		PUBLIC ABSTRACT ~ChunkQueue():ChunkQueue,
		PUBLIC append(char* dta, int len):void,
		PUBLIC discard(int len):void,
		PUBLIC discard():void,
		PUBLIC data():char*,
		PUBLIC length():int
		;


#========================================================================
#File ../../code/ddd-3.0/ddd/ChunkQueue.o.nu.cls	 Class Number = 1
#========================================================================
#Process file  ../../code/ddd-3.0/ddd/DataLength.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/HandlerL.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/LiterateA.o.nu.cls

CLASS AsyncAgent	#LOC 139


	ATTRIBUTES
		PRIVATE  _appContext:public: XtAppContext,
		PRIVATE  _handlers:AsyncAgentHandler ,
		PRIVATE  _ids:XtInputId ,
		PRIVATE  workProcs:AsyncAgentWorkProc,
		PRIVATE  new_status:int

	OPERATIONS
		PRIVATE dispatch(int* fid, XtInputId* id):void,
		PRIVATE initHandlers():void,
		PRIVATE addDeathOfChildHandler():void,
		PRIVATE deleteWorkProc(AsyncAgentWorkProcInfo* info, bool remove):void,
		PRIVATE deleteAllWorkProcs():void,
		PRIVATE SHARED somethingHappened(XtPointer client_data, int* fid, XtInputId* id):void,
		PRIVATE SHARED _childStatusChange(XtPointer client_data, XtIntervalId* iid):void,
		PRIVATE SHARED childStatusChange(Agent* agent, void* client_data, void* call_data):void,
		PRIVATE SHARED callTheHandlers(XtPointer client_data):Boolean,
		PRIVATE SHARED callTheHandlersIfIdle(XtPointer client_data, XtIntervalId* id):void,
		PRIVATE SHARED terminateProcess(XtPointer, XtIntervalId*):void,
		PRIVATE SHARED hangupProcess(XtPointer, XtIntervalId*):void,
		PRIVATE SHARED killProcess(XtPointer, XtIntervalId*):void,
		PROTECTED setHandler(unsigned type, AsyncAgentHandler handler):AsyncAgentHandler,
		PROTECTED clearHandlers():void,
		PROTECTED id(unsigned type):XtInputId,
		PROTECTED handler(unsigned type):AsyncAgentHandler,
		PROTECTED ABSTRACT waitToTerminate():void,
		PROTECTED ABSTRACT callHandlersWhenIdle(int type, void* call_data):void,
		PROTECTED ABSTRACT isIdle():bool,
		PROTECTED ABSTRACT closeChannel(FILE *fp):void,
		PRIVATE removeInput(unsigned type):void,
		PRIVATE operator_=(CONST_AsyncAgent&):AsyncAgent&,
		PUBLIC appContext():XtAppContext,
		PUBLIC AsyncAgent(XtAppContext app_context, string pth, unsigned nTypes):AsyncAgent,
		PUBLIC AsyncAgent(XtAppContext app_context, FILE* in , FILE* out , FILE* err , unsigned nTypes):AsyncAgent,
		PUBLIC AsyncAgent(XtAppContext app_context, bool dummy, unsigned nTypes):AsyncAgent,
		PUBLIC AsyncAgent(CONST_AsyncAgent& c):AsyncAgent,
		PUBLIC ABSTRACT dup():Agent*,
		PUBLIC ~AsyncAgent():AsyncAgent,
		PUBLIC ABSTRACT abort():void,
		PUBLIC ABSTRACT terminate(bool onExit):void
		;



	GENERALIZATION Agent
			SUBCLASSES AsyncAgent
		;


	RELATION 
			ROLES
			CLASS	AsyncAgent MULT UNDEFINED,
			CLASS	Agent MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	AsyncAgent MULT UNDEFINED,
			CLASS	string MULT UNDEFINED
		;

CLASS LiterateAgent	#LOC 112


	ATTRIBUTES
		PRIVATE  activeIO:public: bool,
		PRIVATE  _block_tty_input:bool

	OPERATIONS
		PRIVATE _activateIO():void,
		PRIVATE _deactivateIO():void,
		PRIVATE ABSTRACT activateIO():void,
		PRIVATE ABSTRACT deactivateIO():void,
		PRIVATE _read(char* & data, FILE* fp):int,
		PRIVATE _readNonBlocking(char* data, int size, FILE* fp):int,
		PRIVATE SHARED outputReady(AsyncAgent *c):void,
		PRIVATE SHARED inputReady(AsyncAgent *c):void,
		PRIVATE SHARED errorReady(AsyncAgent *c):void,
		PRIVATE SHARED default_block_tty_input():bool,
		PUBLIC block_tty_input():bool,
		PUBLIC block_tty_input(bool state):bool,
		PROTECTED readInput(char*& data):int,
		PROTECTED ABSTRACT _readInput(char *& data):int,
		PROTECTED ABSTRACT readAndDispatchInput(bool expectEOF):void,
		PROTECTED readError(char*& data):int,
		PROTECTED ABSTRACT _readError(char *& data):int,
		PROTECTED ABSTRACT readAndDispatchError(bool expectEOF):void,
		PROTECTED ABSTRACT dispatch(int type, char* data, int length):void,
		PROTECTED handlerChange():void,
		PROTECTED blocking_tty(FILE *fp):bool,
		PUBLIC LiterateAgent(XtAppContext app_context, string pth, unsigned nTypes):LiterateAgent,
		PUBLIC LiterateAgent(XtAppContext app_context, FILE* in , FILE* out , FILE* err , unsigned nTypes):LiterateAgent,
		PUBLIC LiterateAgent(XtAppContext app_context, bool dummy, unsigned nTypes):LiterateAgent,
		PUBLIC LiterateAgent(CONST_LiterateAgent& lit):LiterateAgent,
		PUBLIC ABSTRACT dup():Agent*,
		PUBLIC ABSTRACT write(CONST_char* data, int length):int,
		PUBLIC flush():int,
		PUBLIC ABSTRACT start():void,
		PUBLIC ABSTRACT abort():void
		;



	GENERALIZATION AsyncAgent
			SUBCLASSES LiterateAgent
		;


	RELATION 
			ROLES
			CLASS	LiterateAgent MULT UNDEFINED,
			CLASS	AsyncAgent MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	LiterateAgent MULT UNDEFINED,
			CLASS	string MULT UNDEFINED
		;

#=======================================================================
#File ../../code/ddd-3.0/ddd/LiterateA.o.nu.cls	 Class Number = 2
#=======================================================================
#Process file  ../../code/ddd-3.0/ddd/TimeOut.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/TTYAgent.o.nu.cls

CLASS TTYAgent	#LOC 70


	ATTRIBUTES
		PRIVATE  master:int,
		PRIVATE  slave:int,
		PRIVATE  push:bool

	OPERATIONS
		PRIVATE open_master():void,
		PRIVATE open_slave():void,
		PROTECTED ABSTRACT setupCommunication():int,
		PROTECTED ABSTRACT setupChildCommunication():int,
		PROTECTED ABSTRACT setupParentCommunication():int,
		PROTECTED ABSTRACT open_tty(CONST_char* tty, int flags):int,
		PROTECTED ABSTRACT tty_ok(CONST_char *tty):bool,
		PUBLIC TTYAgent(XtAppContext app_context, string pth, unsigned nTypes):TTYAgent,
		PUBLIC TTYAgent(XtAppContext app_context, FILE* in , FILE* out , FILE* err , unsigned nTypes):TTYAgent,
		PUBLIC TTYAgent(XtAppContext app_context, bool dummy, unsigned nTypes):TTYAgent,
		PUBLIC TTYAgent(CONST_TTYAgent& tty):TTYAgent,
		PUBLIC ABSTRACT dup():Agent*,
		PUBLIC master_tty():const string&,
		PUBLIC slave_tty():const string&
		;



	GENERALIZATION LiterateAgent
			SUBCLASSES TTYAgent
		;


	AGGREGATION NAME _master_tty CONTAINER CLASS TTYAgent::AssocRec MULT UNDEFINED
			PARTS
			CLASS	public:string MULT UNDEFINED
		;


	AGGREGATION NAME _slave_tty CONTAINER CLASS TTYAgent::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	TTYAgent MULT UNDEFINED,
			CLASS	string MULT UNDEFINED
		;

#======================================================================
#File ../../code/ddd-3.0/ddd/TTYAgent.o.nu.cls	 Class Number = 1
#======================================================================
#Process file  ../../code/ddd-3.0/ddd/converters.o.nu.cls

CLASS MString	#LOC 166


	ATTRIBUTES
		PRIVATE  _mstring:XmString

	OPERATIONS
		PUBLIC MString(char* text , XmStringCharSet charset):MString,
		PUBLIC MString(CONST_char* text, XmStringCharSet charset):MString,
		PUBLIC MString(CONST_string& text, XmStringCharSet charset):MString,
		PUBLIC MString(XmString text, bool):MString,
		PUBLIC MString(CONST_MString& m):MString,
		PUBLIC ~MString():MString,
		PUBLIC baseline(XmFontList fontlist):Dimension,
		PUBLIC isEmpty():Boolean,
		PUBLIC lineCount():int,
		PUBLIC extent(Dimension& x, Dimension& y, XmFontList fontlist):void,
		PUBLIC height(XmFontList fontlist):Dimension,
		PUBLIC width(XmFontList fontlist):Dimension,
		PUBLIC length():int,
		PUBLIC str(XmStringCharSet charset):string,
		PUBLIC operator_=(CONST_MString& m):MString&,
		PUBLIC operator_+=(CONST_MString& m):MString&,
		PUBLIC prepend(CONST_MString& m):MString&,
		PUBLIC operator_==(CONST_MString& m):Boolean,
		PUBLIC operator_!=(CONST_MString& m):Boolean,
		PUBLIC operator_XmString():operator_XmString,
		PUBLIC operator_XmString():operator_XmString,
		PUBLIC xmstring():XmString,
		PUBLIC isNull():Boolean,
		PUBLIC contains(CONST_MString& m):Boolean,
		PUBLIC OK():Boolean
		;


#========================================================================
#File ../../code/ddd-3.0/ddd/converters.o.nu.cls	 Class Number = 1
#========================================================================
#Process file  ../../code/ddd-3.0/ddd/events.o.nu.cls

CLASS BoxPoint	#LOC 123


	ATTRIBUTES
		PROTECTED  point:BoxCoordinate 

	OPERATIONS
		PUBLIC BoxPoint(BoxCoordinate x, BoxCoordinate y):BoxPoint,
		PUBLIC BoxPoint(BoxCoordinate c):BoxPoint,
		PUBLIC BoxPoint():BoxPoint,
		PUBLIC BoxPoint(CONST_BoxPoint& p):BoxPoint,
		PUBLIC isValid():bool,
		PUBLIC operator_+(CONST_BoxPoint& p):BoxPoint,
		PUBLIC operator_-(CONST_BoxPoint& p):BoxPoint,
		PUBLIC operator_*(CONST_BoxPoint& p):BoxPoint,
		PUBLIC operator_/(CONST_BoxPoint& p):BoxPoint,
		PUBLIC operator_%(CONST_BoxPoint& p):BoxPoint,
		PUBLIC operator_+=(CONST_BoxPoint& p):void,
		PUBLIC operator_-=(CONST_BoxPoint& p):void,
		PUBLIC operator_*=(CONST_BoxPoint& p):void,
		PUBLIC operator_/=(CONST_BoxPoint& p):void,
		PUBLIC operator_%=(CONST_BoxPoint& p):void,
		PUBLIC operator_[](CONST_BoxDimension& dimension):const BoxCoordinate&,
		PUBLIC operator_[](CONST_BoxDimension& dimension):BoxCoordinate&
		;


CLASS BoxSize	#LOC 74


	ATTRIBUTES


	OPERATIONS
		PUBLIC BoxSize(BoxCoordinate x_size, BoxCoordinate y_size):BoxSize,
		PUBLIC BoxSize(BoxCoordinate c):BoxSize,
		PUBLIC BoxSize():BoxSize,
		PUBLIC BoxSize(CONST_BoxPoint& p):BoxSize,
		PUBLIC operator_&(CONST_BoxSize& s):BoxSize,
		PUBLIC operator_|(CONST_BoxSize& s):BoxSize,
		PUBLIC operator_^(CONST_BoxSize& s):BoxSize,
		PUBLIC operator_&=(CONST_BoxSize& s):void,
		PUBLIC operator_|=(CONST_BoxSize& s):void,
		PUBLIC operator_^=(CONST_BoxSize& s):void
		;



	GENERALIZATION BoxPoint
			SUBCLASSES BoxSize
		;

#====================================================================
#File ../../code/ddd-3.0/ddd/events.o.nu.cls	 Class Number = 2
#====================================================================
#Process file  ../../code/ddd-3.0/ddd/findParent.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/fileSBF.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/frame.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/longName.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/verify.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/Delay.o.nu.cls

CLASS _Delay	#LOC 23


	ATTRIBUTES
		PRIVATE  widget:public: Widget,
		PRIVATE  old_cursor:Cursor,
		PRIVATE SHARED  current_cursor:Cursor,
		PRIVATE SHARED  hourglass_cache:Cursor

	OPERATIONS
		PRIVATE _Delay(CONST__Delay&):_Delay,
		PRIVATE operator_=(CONST__Delay&):_Delay&,
		PROTECTED SHARED DestroyCB(Widget, XtPointer, XtPointer):void,
		PROTECTED ABSTRACT hourglass_cursor():Cursor,
		PUBLIC _Delay(Widget w):_Delay,
		PUBLIC ABSTRACT ~_Delay():_Delay
		;


CLASS Delay	#LOC 19


	ATTRIBUTES
		PRIVATE SHARED  delay_count:public:int,
		PRIVATE SHARED  _shells:WidgetArray,
		PRIVATE SHARED  delays:DelayArray

	OPERATIONS
		PRIVATE SHARED DestroyCB(Widget, XtPointer, XtPointer):void,
		PUBLIC Delay(Widget w):Delay,
		PUBLIC ABSTRACT ~Delay():Delay,
		PUBLIC SHARED register_shell(Widget w):void,
		PUBLIC SHARED shells():const WidgetArray&,
		PUBLIC SHARED (*shell_registered)():void
		;



	GENERALIZATION _Delay
			SUBCLASSES Delay
		;

#===================================================================
#File ../../code/ddd-3.0/ddd/Delay.o.nu.cls	 Class Number = 2
#===================================================================
#Process file  ../../code/ddd-3.0/ddd/DestroyCB.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/ExitCB.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/InitImage.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/MString.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/SpinBox.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/AlignBox.o.nu.cls

CLASS BoxRegion	#LOC 67


	ATTRIBUTES


	OPERATIONS
		PUBLIC BoxRegion(CONST_BoxPoint& o, CONST_BoxSize& s):BoxRegion,
		PUBLIC BoxRegion(CONST_BoxPoint& o):BoxRegion,
		PUBLIC BoxRegion():BoxRegion,
		PUBLIC BoxRegion(CONST_BoxRegion& r):BoxRegion,
		PUBLIC origin():BoxPoint&,
		PUBLIC origin(BoxDimension d):BoxCoordinate&,
		PUBLIC space():BoxSize&,
		PUBLIC space(BoxDimension d):BoxCoordinate&,
		PUBLIC origin():const BoxPoint&,
		PUBLIC origin(BoxDimension d):const BoxCoordinate&,
		PUBLIC space():const BoxSize&,
		PUBLIC space(BoxDimension d):const BoxCoordinate&,
		PUBLIC operator_==(CONST_BoxRegion& r):bool,
		PUBLIC operator_!=(CONST_BoxRegion& r):bool,
		PUBLIC operator_<=(CONST_BoxRegion& r):bool,
		PUBLIC operator_&(CONST_BoxRegion& r):BoxRegion,
		PUBLIC operator_|(CONST_BoxRegion& r):BoxRegion,
		PUBLIC isEmpty():bool
		;



	AGGREGATION NAME _origin CONTAINER CLASS BoxRegion::AssocRec MULT UNDEFINED
			PARTS
			CLASS	BoxPoint MULT UNDEFINED
		;


	AGGREGATION NAME _space CONTAINER CLASS BoxRegion::AssocRec MULT UNDEFINED
			PARTS
			CLASS	BoxSize MULT UNDEFINED
		;

CLASS BoxExtend	#LOC 80


	ATTRIBUTES


	OPERATIONS
		PUBLIC BoxExtend(BoxCoordinate x_extend, BoxCoordinate y_extend):BoxExtend,
		PUBLIC BoxExtend(BoxCoordinate c):BoxExtend,
		PUBLIC BoxExtend():BoxExtend,
		PUBLIC BoxExtend(CONST_BoxPoint& p):BoxExtend,
		PUBLIC operator_&(CONST_BoxExtend& e):BoxExtend,
		PUBLIC operator_|(CONST_BoxExtend& e):BoxExtend,
		PUBLIC operator_^(CONST_BoxExtend& e):BoxExtend,
		PUBLIC operator_&=(CONST_BoxExtend& e):void,
		PUBLIC operator_|=(CONST_BoxExtend& e):void,
		PUBLIC operator_^=(CONST_BoxExtend& e):void,
		PUBLIC fix(BoxDimension dimension):void
		;



	GENERALIZATION BoxPoint
			SUBCLASSES BoxExtend
		;

CLASS Box	#LOC 196


	ATTRIBUTES
		PRIVATE  _type:char,
		PROTECTED  _links:int

	OPERATIONS
		PRIVATE SHARED epsHeader(ostream& os, CONST_BoxRegion& region, CONST_BoxPostScriptGC& gc):void,
		PRIVATE operator_=(CONST_Box&):Box&,
		PROTECTED thesize():BoxSize&,
		PROTECTED theextend():BoxExtend&,
		PROTECTED thesize():const BoxSize&,
		PROTECTED theextend():const BoxExtend&,
		PROTECTED Box(CONST_Box& box):Box,
		PROTECTED ABSTRACT matches(CONST_Box& b, CONST_Box* callbackArg):bool,
		PROTECTED ABSTRACT _draw(Widget w, CONST_BoxRegion& region, CONST_BoxRegion& exposed, GC gc, bool context_selected):void,
		PUBLIC ABSTRACT dump(ostream& s):void,
		PUBLIC Box(BoxSize s , BoxExtend e , char* t):Box,
		PUBLIC ABSTRACT ~Box():Box,
		PUBLIC ABSTRACT link():Box*,
		PUBLIC ABSTRACT dup():Box*,
		PUBLIC ABSTRACT dup0():Box*,
		PUBLIC unlink():void,
		PUBLIC id():unsigned long,
		PUBLIC type():const char*,
		PUBLIC extend():BoxExtend,
		PUBLIC size():BoxSize,
		PUBLIC extend(BoxDimension dimension):BoxWeight,
		PUBLIC size(BoxDimension dimension):BoxCoordinate,
		PUBLIC ABSTRACT str():string,
		PUBLIC ABSTRACT corner():BoxSize,
		PUBLIC ABSTRACT resize():Box*,
		PUBLIC ABSTRACT newFont(CONST_string&):void,
		PUBLIC draw(Widget w, CONST_BoxRegion& region, CONST_BoxRegion& exposed , GC gc , bool context_selected):void,
		PUBLIC ABSTRACT _print(ostream& os, CONST_BoxRegion& region, CONST_BoxPrintGC& gc):void,
		PUBLIC SHARED _printHeader(ostream& os, CONST_BoxRegion& region, CONST_BoxPrintGC& gc):void,
		PUBLIC SHARED _printTrailer(ostream& os, CONST_BoxRegion& region, CONST_BoxPrintGC& gc):void,
		PUBLIC print(ostream& os , BoxRegion region , CONST_BoxPrintGC& gc):void,
		PUBLIC operator_==(CONST_Box& b):bool,
		PUBLIC operator_!=(CONST_Box& b):bool,
		PUBLIC ABSTRACT isStringBox():bool,
		PUBLIC ABSTRACT isListBox():bool,
		PUBLIC ABSTRACT isDummyBox():bool,
		PUBLIC ABSTRACT tag(Data* data, DataLink* dl):Box*,
		PUBLIC region(BoxPoint p):BoxRegion,
		PUBLIC data(BoxPoint p):Data*,
		PUBLIC name(BoxPoint p):string,
		PUBLIC selected(BoxPoint p):bool,
		PUBLIC info(BoxPoint p):string,
		PUBLIC ABSTRACT matchMe():const Box&,
		PUBLIC ABSTRACT countMatchBoxes(int[]):void,
		PUBLIC ABSTRACT findTag(CONST_BoxPoint&):const TagBox*,
		PUBLIC findTag():const TagBox*,
		PUBLIC ABSTRACT OK():bool
		;



	AGGREGATION NAME _id CONTAINER CLASS Box::AssocRec MULT UNDEFINED
			PARTS
			CLASS	public:UniqueId MULT UNDEFINED
		;


	AGGREGATION NAME _size CONTAINER CLASS Box::AssocRec MULT UNDEFINED
			PARTS
			CLASS	BoxSize MULT UNDEFINED
		;


	AGGREGATION NAME _extend CONTAINER CLASS Box::AssocRec MULT UNDEFINED
			PARTS
			CLASS	BoxExtend MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	Box MULT UNDEFINED,
			CLASS	BoxSize MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	Box MULT UNDEFINED,
			CLASS	BoxExtend MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	Box MULT UNDEFINED,
			CLASS	BoxRegion MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	Box MULT UNDEFINED,
			CLASS	BoxPoint MULT UNDEFINED
		;

CLASS CompositeBox	#LOC 91


	ATTRIBUTES
		PRIVATE  _size:public: int,
		PRIVATE  _nchildren:int

	OPERATIONS
		PRIVATE grow():void,
		PRIVATE operator_=(CONST_CompositeBox&):CompositeBox&,
		PROTECTED ABSTRACT addChild(Box *b):void,
		PROTECTED _child(int nchild):Box*,
		PROTECTED _child(int nchild):const Box*,
		PROTECTED CompositeBox(CONST_CompositeBox& box):CompositeBox,
		PROTECTED dumpComposite(ostream& s, char* sep , char* head , char* tail):void,
		PROTECTED matches(CONST_Box& , CONST_Box*):bool,
		PROTECTED findTag(CONST_BoxPoint&):const TagBox*,
		PUBLIC CompositeBox(unsigned initialSize , char* t):CompositeBox,
		PUBLIC ~CompositeBox():CompositeBox,
		PUBLIC ABSTRACT str():string,
		PUBLIC resize():Box*,
		PUBLIC newFont(CONST_string& font):void,
		PUBLIC nchildren():int,
		PUBLIC operator_[](int nchild):Box*,
		PUBLIC operator_[](int nchild):const Box*,
		PUBLIC countMatchBoxes(int instances[]):void,
		PUBLIC OK():bool
		;



	GENERALIZATION Box
			SUBCLASSES CompositeBox
		;


	RELATION boxes
			ROLES
			CLASS	CompositeBox MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	CompositeBox MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;

CLASS AlignBox	#LOC 61


	ATTRIBUTES


	OPERATIONS
		PROTECTED AlignBox(CONST_AlignBox& box):AlignBox,
		PROTECTED setSize(Box *b):void,
		PROTECTED ABSTRACT addSize(Box *b):void,
		PROTECTED resize():Box*,
		PROTECTED addChild(Box *b):void,
		PROTECTED drawAlign(Widget w, CONST_BoxRegion& r, CONST_BoxRegion& exposed, GC gc, bool context_selected, BoxDimension dimen):void,
		PUBLIC AlignBox(unsigned initialSize , char* t):AlignBox,
		PUBLIC corner():BoxSize,
		PUBLIC operator_+=(Box *b):AlignBox&
		;



	GENERALIZATION CompositeBox
			SUBCLASSES AlignBox
		;


	AGGREGATION NAME _corner CONTAINER CLASS AlignBox::AssocRec MULT UNDEFINED
			PARTS
			CLASS	public:BoxSize MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	AlignBox MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;

CLASS HAlignBox	#LOC 40


	ATTRIBUTES


	OPERATIONS
		PROTECTED HAlignBox(CONST_HAlignBox& box):public:,
		PROTECTED dump(ostream& s):void,
		PROTECTED ABSTRACT _draw(Widget w, CONST_BoxRegion& r, CONST_BoxRegion& exposed, GC gc, bool context_selected):void,
		PUBLIC HAlignBox(unsigned initialSize , char* t):HAlignBox,
		PUBLIC dup():Box*,
		PUBLIC dup0():Box*,
		PUBLIC addSize(Box *b):void,
		PUBLIC ABSTRACT _print(ostream& os, CONST_BoxRegion& region, CONST_BoxPrintGC& gc):void,
		PUBLIC operator_&=(Box *b):HAlignBox&
		;



	GENERALIZATION AlignBox
			SUBCLASSES HAlignBox
		;


	RELATION 
			ROLES
			CLASS	HAlignBox MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;

CLASS VAlignBox	#LOC 42


	ATTRIBUTES


	OPERATIONS
		PRIVATE _draw(Widget w, CONST_BoxRegion& r, CONST_BoxRegion& exposed, GC gc, bool context_selected):public: void,
		PROTECTED VAlignBox(CONST_VAlignBox& box):VAlignBox,
		PROTECTED dump(ostream& s):void,
		PUBLIC VAlignBox(unsigned initialSize , char* t):VAlignBox,
		PUBLIC dup():Box*,
		PUBLIC dup0():Box*,
		PUBLIC addSize(Box *b):void,
		PUBLIC ABSTRACT _print(ostream& os, CONST_BoxRegion& region, CONST_BoxPrintGC& gc):void,
		PUBLIC operator_|=(Box *b):VAlignBox&
		;



	GENERALIZATION AlignBox
			SUBCLASSES VAlignBox
		;


	RELATION 
			ROLES
			CLASS	VAlignBox MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;

CLASS UAlignBox	#LOC 39


	ATTRIBUTES


	OPERATIONS
		PRIVATE _draw(Widget w, CONST_BoxRegion& region, CONST_BoxRegion& exposed, GC gc, bool context_selected):public: void,
		PROTECTED UAlignBox(CONST_UAlignBox& box):UAlignBox,
		PROTECTED dump(ostream& s):void,
		PUBLIC UAlignBox(unsigned initialSize , char* t):UAlignBox,
		PUBLIC dup():Box*,
		PUBLIC dup0():Box*,
		PUBLIC addSize(Box *b):void,
		PUBLIC ABSTRACT _print(ostream& os, CONST_BoxRegion& region, CONST_BoxPrintGC& gc):void,
		PUBLIC operator_^=(Box *b):UAlignBox&
		;



	GENERALIZATION AlignBox
			SUBCLASSES UAlignBox
		;


	RELATION 
			ROLES
			CLASS	UAlignBox MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;

CLASS TAlignBox	#LOC 39


	ATTRIBUTES


	OPERATIONS
		PRIVATE _draw(Widget w, CONST_BoxRegion& region, CONST_BoxRegion& exposed, GC gc, bool context_selected):public: void,
		PROTECTED TAlignBox(CONST_TAlignBox& box):TAlignBox,
		PROTECTED dump(ostream& s):void,
		PUBLIC TAlignBox(unsigned initialSize , char* t):TAlignBox,
		PUBLIC dup():Box*,
		PUBLIC dup0():Box*,
		PUBLIC addSize(Box *b):void,
		PUBLIC ABSTRACT _print(ostream& os, CONST_BoxRegion& region, CONST_BoxPrintGC& gc):void,
		PUBLIC operator_&=(Box *b):TAlignBox&
		;



	GENERALIZATION AlignBox
			SUBCLASSES TAlignBox
		;


	RELATION 
			ROLES
			CLASS	TAlignBox MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;

#======================================================================
#File ../../code/ddd-3.0/ddd/AlignBox.o.nu.cls	 Class Number = 9
#======================================================================
#Process file  ../../code/ddd-3.0/ddd/ArcBox.o.nu.cls

CLASS PrimitiveBox	#LOC 16


	ATTRIBUTES


	OPERATIONS
		PROTECTED PrimitiveBox(CONST_PrimitiveBox& box):public:,
		PUBLIC PrimitiveBox(BoxSize s , BoxExtend e , char* t):PrimitiveBox
		;



	GENERALIZATION Box
			SUBCLASSES PrimitiveBox
		;


	RELATION 
			ROLES
			CLASS	PrimitiveBox MULT UNDEFINED,
			CLASS	BoxSize MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	PrimitiveBox MULT UNDEFINED,
			CLASS	BoxExtend MULT UNDEFINED
		;

CLASS RuleBox	#LOC 29


	ATTRIBUTES


	OPERATIONS
		PROTECTED ABSTRACT _draw(Widget w, CONST_BoxRegion& region, CONST_BoxRegion& exposed, GC gc, bool context_selected):public: void,
		PROTECTED RuleBox(CONST_RuleBox& box):RuleBox,
		PROTECTED dump(ostream& s):void,
		PUBLIC RuleBox(BoxSize s , BoxExtend e , char* t):RuleBox,
		PUBLIC dup():Box*,
		PUBLIC _print(ostream& os, CONST_BoxRegion& r, CONST_BoxPrintGC& gc):void
		;



	GENERALIZATION PrimitiveBox
			SUBCLASSES RuleBox
		;


	RELATION 
			ROLES
			CLASS	RuleBox MULT UNDEFINED,
			CLASS	BoxSize MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	RuleBox MULT UNDEFINED,
			CLASS	BoxExtend MULT UNDEFINED
		;

CLASS EmptyBox	#LOC 32


	ATTRIBUTES


	OPERATIONS
		PROTECTED ABSTRACT _draw(Widget, CONST_BoxRegion& , CONST_BoxRegion& , GC, bool):public: void,
		PROTECTED EmptyBox(CONST_EmptyBox& box):EmptyBox,
		PUBLIC _print(ostream& , CONST_BoxRegion& , CONST_BoxPrintGC&):void,
		PUBLIC EmptyBox(BoxSize s , BoxExtend e , char* t):EmptyBox
		;



	GENERALIZATION PrimitiveBox
			SUBCLASSES EmptyBox
		;


	RELATION 
			ROLES
			CLASS	EmptyBox MULT UNDEFINED,
			CLASS	BoxSize MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	EmptyBox MULT UNDEFINED,
			CLASS	BoxExtend MULT UNDEFINED
		;

CLASS FillBox	#LOC 19


	ATTRIBUTES


	OPERATIONS
		PROTECTED FillBox(CONST_FillBox& box):public:,
		PROTECTED dump(ostream& s):void,
		PUBLIC FillBox(BoxSize s , BoxExtend e):FillBox,
		PUBLIC dup():Box*
		;



	GENERALIZATION EmptyBox
			SUBCLASSES FillBox
		;


	RELATION 
			ROLES
			CLASS	FillBox MULT UNDEFINED,
			CLASS	BoxSize MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	FillBox MULT UNDEFINED,
			CLASS	BoxExtend MULT UNDEFINED
		;

CLASS SpaceBox	#LOC 19


	ATTRIBUTES


	OPERATIONS
		PROTECTED SpaceBox(CONST_SpaceBox& box):public:,
		PROTECTED dump(ostream& s):void,
		PUBLIC SpaceBox(BoxSize s):SpaceBox,
		PUBLIC dup():Box*
		;



	GENERALIZATION EmptyBox
			SUBCLASSES SpaceBox
		;


	RELATION 
			ROLES
			CLASS	SpaceBox MULT UNDEFINED,
			CLASS	BoxSize MULT UNDEFINED
		;

CLASS SquareBox	#LOC 27


	ATTRIBUTES


	OPERATIONS
		PROTECTED SquareBox(CONST_SquareBox& box):public:,
		PROTECTED dump(ostream& s):void,
		PUBLIC SquareBox(BoxCoordinate s):SquareBox,
		PUBLIC dup():Box*
		;



	GENERALIZATION SpaceBox
			SUBCLASSES SquareBox
		;

CLASS LineBox	#LOC 41


	ATTRIBUTES
		PRIVATE  _linethickness:public: BoxCoordinate

	OPERATIONS
		PROTECTED LineBox(CONST_LineBox& box):LineBox,
		PROTECTED matches(CONST_Box& b, CONST_Box*):bool,
		PROTECTED ABSTRACT _draw(Widget w, CONST_BoxRegion& region, CONST_BoxRegion& exposed, GC gc, bool context_selected):void,
		PROTECTED ABSTRACT __draw(Widget w, CONST_BoxRegion& region, CONST_BoxRegion& exposed, GC gc, bool context_selected):void,
		PUBLIC LineBox(BoxCoordinate linethickness , char* t):LineBox,
		PUBLIC linethickness():BoxCoordinate
		;



	GENERALIZATION PrimitiveBox
			SUBCLASSES LineBox
		;

CLASS ArcBox	#LOC 52


	ATTRIBUTES
		PRIVATE  _start:public: BoxDegrees,
		PRIVATE  _length:BoxDegrees

	OPERATIONS
		PRIVATE __draw(Widget w, CONST_BoxRegion& region, CONST_BoxRegion& exposed, GC gc, bool context_selected):void,
		PRIVATE _printPS(ostream& os, CONST_BoxRegion& region, CONST_BoxPrintGC& gc):void,
		PRIVATE _printFig(ostream& os, CONST_BoxRegion& region, CONST_BoxPrintGC& gc):void,
		PROTECTED ArcBox(CONST_ArcBox& box):ArcBox,
		PROTECTED dump(ostream& s):void,
		PROTECTED matches(CONST_Box& b, CONST_Box*):bool,
		PUBLIC ArcBox(BoxDegrees start, BoxDegrees length, BoxCoordinate linethickness , char* t):ArcBox,
		PUBLIC dup():Box*,
		PUBLIC ABSTRACT _print(ostream& os, CONST_BoxRegion& region, CONST_BoxPrintGC& gc):void,
		PUBLIC start():BoxDegrees,
		PUBLIC length():BoxDegrees
		;



	GENERALIZATION LineBox
			SUBCLASSES ArcBox
		;

#====================================================================
#File ../../code/ddd-3.0/ddd/ArcBox.o.nu.cls	 Class Number = 8
#====================================================================
#Process file  ../../code/ddd-3.0/ddd/BinBox.o.nu.cls

CLASS HatBox	#LOC 58


	ATTRIBUTES


	OPERATIONS
		PROTECTED ABSTRACT _draw(Widget w, CONST_BoxRegion& region, CONST_BoxRegion& exposed, GC gc, bool context_selected):void,
		PROTECTED HatBox(CONST_HatBox& box):HatBox,
		PROTECTED matches(CONST_Box& b, CONST_Box*):bool,
		PROTECTED findTag(CONST_BoxPoint& p):const TagBox*,
		PRIVATE operator_=(CONST_HatBox&):HatBox&,
		PUBLIC HatBox(Box* box, char* t):HatBox,
		PUBLIC ~HatBox():HatBox,
		PUBLIC box():Box*,
		PUBLIC resize():Box*,
		PUBLIC newFont(CONST_string& font):void,
		PUBLIC countMatchBoxes(int instances[]):void,
		PUBLIC _print(ostream& os, CONST_BoxRegion& region, CONST_BoxPrintGC& gc):void,
		PUBLIC corner():BoxSize,
		PUBLIC str():string
		;



	GENERALIZATION Box
			SUBCLASSES HatBox
		;


	RELATION _box
			ROLES
			CLASS	HatBox MULT UNDEFINED,
			CLASS	public:Box MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	HatBox MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;

CLASS BinBox	#LOC 29


	ATTRIBUTES


	OPERATIONS
		PROTECTED BinBox(CONST_BinBox& box):public:,
		PROTECTED dump(ostream& s):void,
		PUBLIC BinBox(Box* box, char* t):BinBox,
		PUBLIC resize():Box*,
		PUBLIC dup():Box*
		;



	GENERALIZATION HatBox
			SUBCLASSES BinBox
		;


	RELATION 
			ROLES
			CLASS	BinBox MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;

#====================================================================
#File ../../code/ddd-3.0/ddd/BinBox.o.nu.cls	 Class Number = 2
#====================================================================
#Process file  ../../code/ddd-3.0/ddd/Box.o.nu.cls

CLASS TransparentHatBox	#LOC 19


	ATTRIBUTES


	OPERATIONS
		PROTECTED ABSTRACT matchMe():public: const Box&,
		PROTECTED TransparentHatBox(CONST_TransparentHatBox& box):TransparentHatBox,
		PROTECTED ABSTRACT dump(ostream& s):void,
		PUBLIC TransparentHatBox(Box *box):TransparentHatBox
		;



	GENERALIZATION HatBox
			SUBCLASSES TransparentHatBox
		;


	RELATION 
			ROLES
			CLASS	TransparentHatBox MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;

CLASS MarkBox	#LOC 32


	ATTRIBUTES


	OPERATIONS
		PROTECTED ABSTRACT _draw(Widget w, CONST_BoxRegion& region, CONST_BoxRegion& exposed, GC gc, bool context_selected):void,
		PROTECTED MarkBox(CONST_MarkBox& box):MarkBox,
		PUBLIC MarkBox(Box *box):MarkBox,
		PUBLIC dup():Box*,
		PUBLIC __region():const BoxRegion&
		;



	GENERALIZATION TransparentHatBox
			SUBCLASSES MarkBox
		;


	AGGREGATION NAME _region CONTAINER CLASS MarkBox::AssocRec MULT UNDEFINED
			PARTS
			CLASS	public:BoxRegion MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	MarkBox MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;

CLASS TagBox	#LOC 61


	ATTRIBUTES
		PRIVATE  datalink:public: DataLink,
		PRIVATE  _data:Data,
		PRIVATE SHARED  default_datalink:DataLink

	OPERATIONS
		PRIVATE operator_=(CONST_TagBox&):TagBox&,
		PROTECTED ABSTRACT _draw(Widget w, CONST_BoxRegion& region, CONST_BoxRegion& exposed, GC gc, bool context_selected):void,
		PROTECTED TagBox(CONST_TagBox& tagbox):TagBox,
		PROTECTED dump(ostream& s):void,
		PROTECTED findTag(CONST_BoxPoint&):const TagBox*,
		PUBLIC TagBox(Box* box, Data* dta , DataLink* dl):TagBox,
		PUBLIC dup():Box*,
		PUBLIC link():Box*,
		PUBLIC ~TagBox():TagBox,
		PUBLIC __data():Data*,
		PUBLIC __selected():bool,
		PUBLIC __name():string,
		PUBLIC __info():string
		;



	GENERALIZATION MarkBox
			SUBCLASSES TagBox
		;


	RELATION 
			ROLES
			CLASS	TagBox MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;

CLASS VSEFlags	#LOC 96


	ATTRIBUTES
		PRIVATE SHARED  optionTable[]:VSEOptionTableEntry ,
		PUBLIC SHARED  assert_library_ok:bool,
		PUBLIC SHARED  assert_document_ok:bool,
		PUBLIC SHARED  dump_tree:bool,
		PUBLIC SHARED  dump_library:bool,
		PUBLIC SHARED  dump_document:bool,
		PUBLIC SHARED  dump_picture:bool,
		PUBLIC SHARED  dump_while_optimizing:bool,
		PUBLIC SHARED  dump_last:bool,
		PUBLIC SHARED  show_optimize:bool,
		PUBLIC SHARED  show_match_boxes:bool,
		PUBLIC SHARED  show_match_nodes:bool,
		PUBLIC SHARED  show_match_defs:bool,
		PUBLIC SHARED  show_tiny_eval:bool,
		PUBLIC SHARED  show_large_eval:bool,
		PUBLIC SHARED  show_huge_eval:bool,
		PUBLIC SHARED  show_balance:bool,
		PUBLIC SHARED  show_flags:bool,
		PUBLIC SHARED  show_backtrace:bool,
		PUBLIC SHARED  show_ids:bool,
		PUBLIC SHARED  show_vars:bool,
		PUBLIC SHARED  show_draw:bool,
		PUBLIC SHARED  include_size_info:bool,
		PUBLIC SHARED  include_list_info:bool,
		PUBLIC SHARED  include_font_info:bool,
		PUBLIC SHARED  include_const_info:bool,
		PUBLIC SHARED  include_id_info:bool,
		PUBLIC SHARED  include_tag_info:bool,
		PUBLIC SHARED  include_select_info:bool,
		PUBLIC SHARED  optimize_resolveDefs:bool,
		PUBLIC SHARED  optimize_resolveSynonyms:bool,
		PUBLIC SHARED  optimize_foldOps:bool,
		PUBLIC SHARED  optimize_foldConsts:bool,
		PUBLIC SHARED  optimize_inlineFuncs:bool,
		PUBLIC SHARED  optimize_cleanup:bool,
		PUBLIC SHARED  max_optimize_loops:int,
		PUBLIC SHARED  incremental_eval:bool,
		PUBLIC SHARED  optimize_globals:bool,
		PUBLIC SHARED  bag_mode:bool,
		PUBLIC SHARED  verbose:bool,
		PUBLIC SHARED  what:bool,
		PUBLIC SHARED  load_open_mode:bool,
		PUBLIC SHARED  concurrent_mode:bool,
		PUBLIC SHARED  show_eval_time:bool,
		PUBLIC SHARED  show_optimizing_time:bool,
		PUBLIC SHARED  show_display_time:bool,
		PUBLIC SHARED  suppress_eval:bool,
		PUBLIC SHARED  issue_nooptionals:bool,
		PUBLIC SHARED  library_file:char,
		PUBLIC SHARED  document_file:char,
		PUBLIC SHARED  startup_file:char,
		PUBLIC SHARED  include_search_path:char,
		PUBLIC SHARED  max_eval_nesting:int,
		PUBLIC SHARED  max_pattern_variables:int,
		PUBLIC SHARED  max_info_nesting:int,
		PUBLIC SHARED  loops:int

	OPERATIONS
		PUBLIC SHARED optimize_mode():unsigned,
		PUBLIC SHARED _parse(int& argc, char* *& argv, bool vsl_prefix_required):bool,
		PUBLIC SHARED getDefaults(bool warn):void,
		PUBLIC SHARED explain(bool vsl_prefix_required):string,
		PUBLIC SHARED parse(int& argc, char* *& argv, char* args):void,
		PUBLIC SHARED parse_vsl(int& argc, char* *& argv):bool
		;


#=================================================================
#File ../../code/ddd-3.0/ddd/Box.o.nu.cls	 Class Number = 4
#=================================================================
#Process file  ../../code/ddd-3.0/ddd/BoxD.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/BoxExtend.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/BoxRegion.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/BoxSize.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/ColorBox.o.nu.cls

CLASS ColorBox	#LOC 53


	ATTRIBUTES
		PUBLIC SHARED  use_color:bool,
		PRIVATE  _color:Pixel,
		PRIVATE  _color_valid:bool,
		PRIVATE  _color_failed:bool

	OPERATIONS
		PROTECTED ColorBox(CONST_ColorBox& box):ColorBox,
		PROTECTED ABSTRACT _draw(Widget w, CONST_BoxRegion& region, CONST_BoxRegion& exposed, GC gc, bool context_selected):void,
		PROTECTED ABSTRACT color_draw(Widget w, CONST_BoxRegion& region, CONST_BoxRegion& exposed, GC gc, bool context_selected):void,
		PROTECTED convert_color(Widget w):void,
		PUBLIC ColorBox(Box* box, CONST_string& name):ColorBox,
		PUBLIC color_name():const string&,
		PUBLIC color_valid():bool,
		PUBLIC color_failed():bool,
		PUBLIC color():Pixel
		;



	GENERALIZATION TransparentHatBox
			SUBCLASSES ColorBox
		;


	AGGREGATION NAME _color_name CONTAINER CLASS ColorBox::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	ColorBox MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;

CLASS ForegroundColorBox	#LOC 26


	ATTRIBUTES


	OPERATIONS
		PROTECTED ABSTRACT color_draw(Widget w, CONST_BoxRegion& region, CONST_BoxRegion& exposed, GC gc, bool context_selected):public: void,
		PROTECTED ForegroundColorBox(CONST_ForegroundColorBox& box):ForegroundColorBox,
		PUBLIC ForegroundColorBox(Box* box, CONST_string& name):ForegroundColorBox,
		PUBLIC dup():Box*
		;



	GENERALIZATION ColorBox
			SUBCLASSES ForegroundColorBox
		;


	RELATION 
			ROLES
			CLASS	ForegroundColorBox MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;

CLASS BackgroundColorBox	#LOC 26


	ATTRIBUTES


	OPERATIONS
		PROTECTED ABSTRACT color_draw(Widget w, CONST_BoxRegion& region, CONST_BoxRegion& exposed, GC gc, bool context_selected):public: void,
		PROTECTED BackgroundColorBox(CONST_BackgroundColorBox& box):BackgroundColorBox,
		PUBLIC BackgroundColorBox(Box* box, CONST_string& name):BackgroundColorBox,
		PUBLIC dup():Box*
		;



	GENERALIZATION ColorBox
			SUBCLASSES BackgroundColorBox
		;


	RELATION 
			ROLES
			CLASS	BackgroundColorBox MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;

#======================================================================
#File ../../code/ddd-3.0/ddd/ColorBox.o.nu.cls	 Class Number = 3
#======================================================================
#Process file  ../../code/ddd-3.0/ddd/CompositeB.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/DiagBox.o.nu.cls

CLASS FontTable	#LOC 30


	ATTRIBUTES
		PRIVATE  table:FontTableHashEntry  ,
		PRIVATE  _display:Display

	OPERATIONS
		PRIVATE FontTable(CONST_FontTable&):FontTable,
		PRIVATE operator_=(CONST_FontTable&):FontTable&,
		PUBLIC FontTable(Display *display):FontTable,
		PUBLIC ABSTRACT ~FontTable():FontTable,
		PUBLIC operator_[](string& name):XFontStruct*
		;



	RELATION 
			ROLES
			CLASS	FontTable MULT UNDEFINED,
			CLASS	string MULT UNDEFINED
		;

CLASS StringBox	#LOC 82


	ATTRIBUTES
		PRIVATE  _font:XFontStruct,
		PRIVATE  _ascent:BoxCoordinate,
		PUBLIC SHARED  quoted:bool

	OPERATIONS
		PRIVATE operator_=(CONST_StringBox&):StringBox&,
		PROTECTED ABSTRACT _draw(Widget w, CONST_BoxRegion& region, CONST_BoxRegion& exposed, GC gc, bool context_selected):void,
		PROTECTED StringBox(CONST_StringBox& box):StringBox,
		PROTECTED dump(ostream& s):void,
		PROTECTED matches(CONST_Box& b, CONST_Box*):bool,
		PUBLIC StringBox(CONST_string& s , CONST_string& fontname , char* t):StringBox,
		PUBLIC StringBox(CONST_string& s, XFontStruct* fnt, char* t):StringBox,
		PUBLIC dup():Box*,
		PUBLIC _newFont(XFontStruct *newfont):void,
		PUBLIC newFont(CONST_string& fontname):void,
		PUBLIC _print(ostream& os, CONST_BoxRegion& region, CONST_BoxPrintGC& gc):void,
		PUBLIC font():const XFontStruct*,
		PUBLIC fontName():const string&,
		PUBLIC ABSTRACT str():string,
		PUBLIC resize():Box*,
		PUBLIC isStringBox():bool
		;



	GENERALIZATION PrimitiveBox
			SUBCLASSES StringBox
		;


	AGGREGATION NAME _string CONTAINER CLASS StringBox::AssocRec MULT UNDEFINED
			PARTS
			CLASS	public:string MULT UNDEFINED
		;


	AGGREGATION NAME _fontname CONTAINER CLASS StringBox::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	RELATION fontTable
			ROLES
			CLASS	StringBox MULT UNDEFINED,
			CLASS	FontTable MULT UNDEFINED
		;

CLASS DiagBox	#LOC 31


	ATTRIBUTES


	OPERATIONS
		PROTECTED DiagBox(CONST_DiagBox& box):public:,
		PROTECTED dump(ostream& s):void,
		PROTECTED ABSTRACT _draw(Widget w, CONST_BoxRegion& region, CONST_BoxRegion& exposed, GC gc, bool context_selected):void,
		PUBLIC DiagBox(char *t):DiagBox,
		PUBLIC dup():Box*,
		PUBLIC ABSTRACT _print(ostream& , CONST_BoxRegion& , CONST_BoxPrintGC&):void
		;



	GENERALIZATION PrimitiveBox
			SUBCLASSES DiagBox
		;

#=====================================================================
#File ../../code/ddd-3.0/ddd/DiagBox.o.nu.cls	 Class Number = 3
#=====================================================================
#Process file  ../../code/ddd-3.0/ddd/DummyBox.o.nu.cls

CLASS ListBox	#LOC 144


	ATTRIBUTES
		PRIVATE  _last:public: const ListBox

	OPERATIONS
		PRIVATE _head():Box*,
		PRIVATE _tail():Box*,
		PRIVATE operator_=(CONST_ListBox&):ListBox&,
		PUBLIC head():const Box*,
		PUBLIC tail():const ListBox*,
		PUBLIC head():Box*,
		PUBLIC tail():ListBox*,
		PUBLIC isEmpty():bool,
		PROTECTED _relast():void,
		PROTECTED relast():void,
		PROTECTED ListBox(CONST_ListBox& box):ListBox,
		PROTECTED ABSTRACT _draw(Widget, CONST_BoxRegion& , CONST_BoxRegion& , GC, bool):void,
		PROTECTED dump(ostream& s):void,
		PUBLIC ListBox(Box* hd, ListBox* tl, char* t):ListBox,
		PUBLIC ListBox(char *t):ListBox,
		PUBLIC dup():Box*,
		PUBLIC tag(Data* data, DataLink* datalink):Box*,
		PUBLIC operator_+=(Box *b):ListBox&,
		PUBLIC sublist(int start):const ListBox*,
		PUBLIC [](int nchild):const Box* operator,
		PUBLIC length():int,
		PUBLIC matches(CONST_Box& b, CONST_Box* callbackArg):bool,
		PUBLIC isListBox():bool,
		PUBLIC _print(ostream& , CONST_BoxRegion& , CONST_BoxPrintGC&):void,
		PUBLIC atom():Box*,
		PUBLIC OK():bool,
		PUBLIC cons(ListBox *b):ListBox*,
		PUBLIC uncons(ListBox *attach):void
		;



	GENERALIZATION CompositeBox
			SUBCLASSES ListBox
		;


	RELATION 
			ROLES
			CLASS	ListBox MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;

CLASS DummyBox	#LOC 27


	ATTRIBUTES
		PUBLIC SHARED  matchesAll:bool

	OPERATIONS
		PROTECTED DummyBox(CONST_DummyBox& box):public:,
		PROTECTED dump(ostream& s):void,
		PROTECTED matches(CONST_Box& b, CONST_Box* callbackArg):bool,
		PUBLIC DummyBox(char *t):DummyBox,
		PUBLIC dup():Box*,
		PUBLIC isDummyBox():bool
		;



	GENERALIZATION ListBox
			SUBCLASSES DummyBox
		;

#======================================================================
#File ../../code/ddd-3.0/ddd/DummyBox.o.nu.cls	 Class Number = 2
#======================================================================
#Process file  ../../code/ddd-3.0/ddd/FixBox.o.nu.cls

CLASS FixBox	#LOC 16


	ATTRIBUTES


	OPERATIONS
		PROTECTED FixBox(CONST_FixBox& box):public:,
		PUBLIC FixBox(Box* box, char* t):FixBox,
		PUBLIC ABSTRACT resize():Box*
		;



	GENERALIZATION HatBox
			SUBCLASSES FixBox
		;


	RELATION 
			ROLES
			CLASS	FixBox MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;

CLASS HFixBox	#LOC 24


	ATTRIBUTES


	OPERATIONS
		PROTECTED HFixBox(CONST_HFixBox& box):public:,
		PROTECTED dump(ostream& s):void,
		PUBLIC HFixBox(Box* box, char* t):HFixBox,
		PUBLIC resize():Box*,
		PUBLIC dup():Box*
		;



	GENERALIZATION FixBox
			SUBCLASSES HFixBox
		;


	RELATION 
			ROLES
			CLASS	HFixBox MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;

CLASS VFixBox	#LOC 24


	ATTRIBUTES


	OPERATIONS
		PROTECTED VFixBox(CONST_VFixBox& box):public:,
		PROTECTED dump(ostream& s):void,
		PUBLIC VFixBox(Box* box, char* t):VFixBox,
		PUBLIC resize():Box*,
		PUBLIC dup():Box*
		;



	GENERALIZATION FixBox
			SUBCLASSES VFixBox
		;


	RELATION 
			ROLES
			CLASS	VFixBox MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;

#====================================================================
#File ../../code/ddd-3.0/ddd/FixBox.o.nu.cls	 Class Number = 3
#====================================================================
#Process file  ../../code/ddd-3.0/ddd/FontTable.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/HatBox.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/LineBox.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/ListBox.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/MarkBox.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/MatchBox.o.nu.cls

CLASS MatchBox	#LOC 37


	ATTRIBUTES
		PRIVATE  _data:public: int,
		PUBLIC SHARED  matchCallback:MatchBoxFunc

	OPERATIONS
		PROTECTED MatchBox(CONST_MatchBox& box):MatchBox,
		PROTECTED dump(ostream& s):void,
		PROTECTED matches(CONST_Box& b, CONST_Box* callbackArg):bool,
		PUBLIC MatchBox(int d, char* t):MatchBox,
		PUBLIC dup():Box*,
		PUBLIC countMatchBoxes(int instances[]):void
		;



	GENERALIZATION DummyBox
			SUBCLASSES MatchBox
		;

#======================================================================
#File ../../code/ddd-3.0/ddd/MatchBox.o.nu.cls	 Class Number = 1
#======================================================================
#Process file  ../../code/ddd-3.0/ddd/PrimitiveB.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/SlopeBox.o.nu.cls

CLASS SlopeBox	#LOC 17


	ATTRIBUTES


	OPERATIONS
		PROTECTED SlopeBox(CONST_SlopeBox& box):public:,
		PUBLIC SlopeBox(BoxCoordinate linethickness , char* t):SlopeBox,
		PUBLIC ~SlopeBox():SlopeBox
		;



	GENERALIZATION LineBox
			SUBCLASSES SlopeBox
		;

CLASS RiseBox	#LOC 31


	ATTRIBUTES


	OPERATIONS
		PROTECTED ABSTRACT __draw(Widget w, CONST_BoxRegion& region, CONST_BoxRegion& exposed, GC gc, bool context_selected):public: void,
		PROTECTED RiseBox(CONST_RiseBox& box):RiseBox,
		PROTECTED dump(ostream& s):void,
		PUBLIC RiseBox(BoxCoordinate linethickness , char* t):RiseBox,
		PUBLIC ~RiseBox():RiseBox,
		PUBLIC dup():Box*,
		PUBLIC _print(ostream& os, CONST_BoxRegion& region, CONST_BoxPrintGC& gc):void
		;



	GENERALIZATION SlopeBox
			SUBCLASSES RiseBox
		;

CLASS FallBox	#LOC 31


	ATTRIBUTES


	OPERATIONS
		PROTECTED ABSTRACT __draw(Widget w, CONST_BoxRegion& region, CONST_BoxRegion& exposed, GC gc, bool context_selected):public: void,
		PROTECTED FallBox(CONST_FallBox& box):FallBox,
		PROTECTED dump(ostream& s):void,
		PUBLIC FallBox(BoxCoordinate linethickness , char* t):FallBox,
		PUBLIC ~FallBox():FallBox,
		PUBLIC dup():Box*,
		PUBLIC _print(ostream& os, CONST_BoxRegion& region, CONST_BoxPrintGC& gc):void
		;



	GENERALIZATION SlopeBox
			SUBCLASSES FallBox
		;

#======================================================================
#File ../../code/ddd-3.0/ddd/SlopeBox.o.nu.cls	 Class Number = 3
#======================================================================
#Process file  ../../code/ddd-3.0/ddd/THatBox.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/TagBox.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/ArgNode.o.nu.cls

CLASS VSLArg	#LOC 69


	ATTRIBUTES


	OPERATIONS
		PUBLIC box():Box*,
		PUBLIC VSLArg():VSLArg,
		PUBLIC VSLArg(char *s):VSLArg,
		PUBLIC VSLArg(CONST_string& s):VSLArg,
		PUBLIC VSLArg(int n):VSLArg,
		PUBLIC VSLArg(unsigned n):VSLArg,
		PUBLIC VSLArg(Box *box):VSLArg,
		PUBLIC VSLArg(CONST_VSLArg& arg):VSLArg,
		PUBLIC ~VSLArg():VSLArg,
		PUBLIC operator_=(Box *box):VSLArg&,
		PUBLIC operator_=(CONST_VSLArg& arg):VSLArg&
		;



	RELATION _box
			ROLES
			CLASS	VSLArg MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	VSLArg MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;

CLASS VSLLib	#LOC 158


	ATTRIBUTES


	OPERATIONS
		PRIVATE initHash():void,
		PRIVATE bind():int,
		PRIVATE resolveNames():int,
		PRIVATE compilePatterns():int,
		PRIVATE resolveDefs():int,
		PRIVATE resolveSynonyms():int,
		PRIVATE foldOps():int,
		PRIVATE foldConsts():int,
		PRIVATE inlineFuncs():int,
		PRIVATE countSelfReferences():int,
		PRIVATE cleanup():int,
		PRIVATE process(unsigned mode):void,
		PRIVATE _call(CONST_string& func_name, VSLNode* arglist):VSLNode*,
		PRIVATE call(CONST_string& func_name):VSLNode*,
		PRIVATE call(CONST_string& func_name, VSLNode* arg1):VSLNode*,
		PRIVATE call(CONST_string& func_name, VSLNode* arg1, VSLNode* arg2):VSLNode*,
		PRIVATE call(CONST_string& func_name, VSLNode* arg1, VSLNode* arg2, VSLNode* arg3):VSLNode*,
		PRIVATE call(char *func_name):VSLNode*,
		PRIVATE call(char* func_name, VSLNode* arg1):VSLNode*,
		PRIVATE call(char* func_name, VSLNode* arg1, VSLNode* arg2):VSLNode*,
		PRIVATE call(char* func_name, VSLNode* arg1, VSLNode* arg2, VSLNode* arg3):VSLNode*,
		PRIVATE add(CONST_string& func_name, VSLNode* pattern, VSLNode* expr , bool global , CONST_string& filename , int lineno):VSLDef*,
		PRIVATE override(CONST_string& func_name):int,
		PRIVATE replace(CONST_string& func_name):int,
		PRIVATE deflist(CONST_string& func_name):VSLDefList*,
		PRIVATE def(CONST_string& func_name, Box* arg):VSLDef*,
		PRIVATE VSLLib(CONST_VSLLib&):VSLLib,
		PRIVATE operator_=(CONST_VSLLib&):VSLLib&,
		PUBLIC VSLLib():VSLLib,
		PUBLIC VSLLib(CONST_string& lib_name, unsigned optimize):VSLLib,
		PUBLIC VSLLib(istream& s, unsigned optimize):VSLLib,
		PUBLIC read(CONST_string& lib_name, unsigned optimize):VSLLib&,
		PUBLIC read(istream& s, unsigned optimize):VSLLib&,
		PUBLIC SHARED parse():int,
		PUBLIC has(CONST_string& func_name):bool,
		PUBLIC eval(CONST_string& func_name, ListBox* arg):const Box*,
		PUBLIC eval(CONST_string& func_name, VSLArg args[]):const Box*,
		PUBLIC eval(CONST_string& func_name, VSLArg arg0 , VSLArg arg1 , VSLArg arg2 , VSLArg arg3 , VSLArg arg4 , VSLArg arg5 , VSLArg arg6 , VSLArg arg7 , VSLArg arg8 , VSLArg arg9):const Box*,
		PUBLIC output(Box *&arg):void,
		PUBLIC ABSTRACT ~VSLLib():VSLLib,
		PUBLIC SHARED echo(CONST_string& s):void,
		PUBLIC SHARED parse_echo(CONST_string& s):void,
		PUBLIC SHARED parse_error(CONST_string& s):void,
		PUBLIC SHARED parse_warning(CONST_string& s):void,
		PUBLIC SHARED eval_echo(CONST_string& s, CONST_VSLDef* def):void,
		PUBLIC SHARED eval_error(CONST_string& s, CONST_VSLDef* def):void,
		PUBLIC SHARED eval_warning(CONST_string& s, CONST_VSLDef* def):void,
		PUBLIC dumpTree(ostream& s):void,
		PUBLIC lastdef():VSLDef*,
		PUBLIC firstdef():VSLDef*,
		PUBLIC SHARED (*background)():void,
		PUBLIC ABSTRACT OK():bool
		;



	AGGREGATION NAME _lib_name CONTAINER CLASS VSLLib::AssocRec MULT UNDEFINED
			PARTS
			CLASS	public:string MULT UNDEFINED
		;


	RELATION defs
			ROLES
			CLASS	VSLLib MULT UNDEFINED,
			CLASS	VSLDefList MULT UNDEFINED
		;


	RELATION _first
			ROLES
			CLASS	VSLLib MULT UNDEFINED,
			CLASS	VSLDef MULT UNDEFINED
		;


	RELATION _last
			ROLES
			CLASS	VSLLib MULT UNDEFINED,
			CLASS	VSLDef MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	VSLLib MULT UNDEFINED,
			CLASS	VSLNode MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	VSLLib MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	VSLLib MULT UNDEFINED,
			CLASS	ListBox MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	VSLLib MULT UNDEFINED,
			CLASS	VSLArg MULT UNDEFINED
		;

CLASS VSLNode	#LOC 122


	ATTRIBUTES
		PRIVATE  _type:public: char,
		PROTECTED  _base:unsigned,
		PROTECTED SHARED  sideEffectsProhibited:bool,
		PROTECTED SHARED  sideEffectsOccured:bool,
		PUBLIC SHARED  bothSidesCanMatch:bool

	OPERATIONS
		PROTECTED VSLNode(CONST_VSLNode& node):VSLNode,
		PROTECTED ABSTRACT dump(ostream& s):void,
		PROTECTED ABSTRACT _dumpTree(ostream&):void,
		PROTECTED ABSTRACT matches(CONST_VSLNode& node):bool,
		PRIVATE operator_=(CONST_VSLNode &):VSLNode&,
		PUBLIC VSLNode(char *type):VSLNode,
		PUBLIC ABSTRACT ~VSLNode():VSLNode,
		PUBLIC ABSTRACT dup():VSLNode*,
		PUBLIC ABSTRACT eval(ListBox *arglist):const Box*,
		PUBLIC ABSTRACT _eval(ListBox *arglist):const Box*,
		PUBLIC ABSTRACT resolveDefs(VSLDef* , bool):int,
		PUBLIC ABSTRACT resolveSynonyms(VSLDef* , VSLNode* *):int,
		PUBLIC ABSTRACT foldOps(VSLDef* , VSLNode* *):int,
		PUBLIC ABSTRACT foldConsts(VSLDef* , VSLNode* *):int,
		PUBLIC ABSTRACT countSelfReferences(VSLDef* , VSLDefList*):int,
		PUBLIC ABSTRACT inlineFuncs(VSLDef* , VSLNode* *):int,
		PUBLIC ABSTRACT instantiateArgs(VSLDef* , VSLNode* * , VSLNode* * , unsigned , unsigned):int,
		PUBLIC ABSTRACT countArgNodes(VSLDef* , int[], unsigned , unsigned):void,
		PUBLIC ABSTRACT _reBase(VSLDef* , unsigned):int,
		PUBLIC reBase(VSLDef* cdef, unsigned newBase):int,
		PUBLIC ABSTRACT compilePatterns(VSLDef *):void,
		PUBLIC ABSTRACT uncompilePatterns(VSLDef *):void,
		PUBLIC ABSTRACT resolveName(VSLDef* , VSLNode* * , string& , unsigned):int,
		PUBLIC ABSTRACT _resolveNames(VSLDef* , unsigned):int,
		PUBLIC resolveNames(VSLDef* cdef, unsigned base):int,
		PUBLIC ABSTRACT firstName():string,
		PUBLIC ABSTRACT isConst():bool,
		PUBLIC ABSTRACT isArgNode():bool,
		PUBLIC ABSTRACT isBuiltinCallNode():bool,
		PUBLIC ABSTRACT isCallNode():bool,
		PUBLIC ABSTRACT isConstNode():bool,
		PUBLIC ABSTRACT isDefCallNode():bool,
		PUBLIC ABSTRACT isDummyNode():bool,
		PUBLIC ABSTRACT isLetNode():bool,
		PUBLIC ABSTRACT isListNode():bool,
		PUBLIC ABSTRACT isNameNode():bool,
		PUBLIC ABSTRACT isTestNode():bool,
		PUBLIC ABSTRACT isStraight():bool,
		PUBLIC ABSTRACT nargs():unsigned,
		PUBLIC operator_==(CONST_VSLNode& node):bool,
		PUBLIC operator_!=(CONST_VSLNode& node):bool,
		PUBLIC ABSTRACT OK():bool,
		PUBLIC dumpTree(ostream& s):void
		;



	RELATION 
			ROLES
			CLASS	VSLNode MULT UNDEFINED,
			CLASS	ListBox MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	VSLNode MULT UNDEFINED,
			CLASS	VSLDef MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	VSLNode MULT UNDEFINED,
			CLASS	VSLDefList MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	VSLNode MULT UNDEFINED,
			CLASS	string MULT UNDEFINED
		;

CLASS DummyNode	#LOC 42


	ATTRIBUTES
		PUBLIC SHARED  matchesAll:bool

	OPERATIONS
		PROTECTED DummyNode(CONST_DummyNode& node):public:,
		PROTECTED dump(ostream& s):void,
		PROTECTED matches(CONST_VSLNode& node):bool,
		PUBLIC DummyNode(char *type):DummyNode,
		PUBLIC dup():VSLNode*,
		PUBLIC _eval(ListBox *):const Box*,
		PUBLIC isConst():bool,
		PUBLIC isDummyNode():bool
		;



	GENERALIZATION VSLNode
			SUBCLASSES DummyNode
		;


	RELATION 
			ROLES
			CLASS	DummyNode MULT UNDEFINED,
			CLASS	ListBox MULT UNDEFINED
		;

CLASS ArgNode	#LOC 45


	ATTRIBUTES
		PRIVATE  _id:public: unsigned,
		PUBLIC SHARED  matchCallback:ArgNodeFunc

	OPERATIONS
		PROTECTED ArgNode(CONST_ArgNode& node):ArgNode,
		PROTECTED matches(CONST_VSLNode &node):bool,
		PROTECTED dump(ostream& s):void,
		PROTECTED _dumpTree(ostream& s):void,
		PUBLIC ArgNode(unsigned i, char* type):ArgNode,
		PUBLIC dup():VSLNode*,
		PUBLIC _eval(ListBox *arglist):const Box*,
		PUBLIC instantiateArgs(VSLDef* cdef, VSLNode* * node, VSLNode* values[], unsigned base, unsigned n):int,
		PUBLIC countArgNodes(VSLDef* cdef, int instances[], unsigned base, unsigned n):void,
		PUBLIC isConst():bool,
		PUBLIC isArgNode():bool,
		PUBLIC id():unsigned,
		PUBLIC nargs():unsigned
		;



	GENERALIZATION DummyNode
			SUBCLASSES ArgNode
		;


	RELATION 
			ROLES
			CLASS	ArgNode MULT UNDEFINED,
			CLASS	ListBox MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	ArgNode MULT UNDEFINED,
			CLASS	VSLDef MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	ArgNode MULT UNDEFINED,
			CLASS	VSLNode MULT UNDEFINED
		;

CLASS VSLDef	#LOC 95


	ATTRIBUTES
		PRIVATE  _nargs:unsigned,
		PRIVATE  _straight:bool,
		PRIVATE  _lineno:int,
		PRIVATE  being_compiled:bool,
		PUBLIC SHARED  *backtrace:const VSLDef,
		PUBLIC SHARED  *backtrace_args:const Box

	OPERATIONS
		PRIVATE args():string,
		PUBLIC VSLDef(VSLDefList* l, VSLNode* pattern, VSLNode* e , string filename , int lineno):VSLDef,
		PRIVATE VSLDef(CONST_VSLDef&):VSLDef,
		PRIVATE operator_=(CONST_VSLDef&):VSLDef&,
		PUBLIC expr():VSLNode*&,
		PUBLIC node_pattern():VSLNode*&,
		PUBLIC box_pattern():Box*&,
		PUBLIC nargs():unsigned,
		PUBLIC straight():bool,
		PUBLIC listnext():VSLDef*&,
		PUBLIC libnext():VSLDef*&,
		PUBLIC libprev():VSLDef*&,
		PUBLIC listnext():VSLDef*,
		PUBLIC libnext():VSLDef*,
		PUBLIC libprev():VSLDef*,
		PUBLIC func_name():string,
		PUBLIC f_name():string,
		PUBLIC longname():string,
		PUBLIC eval(Box *arg):const Box*,
		PUBLIC compilePattern():void,
		PUBLIC uncompilePattern():void,
		PUBLIC resolveNames():int,
		PUBLIC matches(CONST_Box *arg):bool,
		PUBLIC matches(CONST_VSLNode *arg):bool,
		PUBLIC arglist(CONST_Box *arg):ListBox*,
		PUBLIC nodelist(CONST_VSLNode *arg):VSLNode*,
		PUBLIC ABSTRACT ~VSLDef():VSLDef,
		PUBLIC ABSTRACT OK():bool
		;



	RELATION _expr
			ROLES
			CLASS	VSLDef MULT UNDEFINED,
			CLASS	public:VSLNode MULT UNDEFINED
		;


	RELATION _node_pattern
			ROLES
			CLASS	VSLDef MULT UNDEFINED,
			CLASS	VSLNode MULT UNDEFINED
		;


	RELATION _box_pattern
			ROLES
			CLASS	VSLDef MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;


	AGGREGATION NAME _filename CONTAINER CLASS VSLDef::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	RELATION _listnext
			ROLES
			CLASS	VSLDef MULT UNDEFINED,
			CLASS	VSLDef MULT UNDEFINED
		;


	RELATION _libnext
			ROLES
			CLASS	VSLDef MULT UNDEFINED,
			CLASS	VSLDef MULT UNDEFINED
		;


	RELATION _libprev
			ROLES
			CLASS	VSLDef MULT UNDEFINED,
			CLASS	VSLDef MULT UNDEFINED
		;


	RELATION deflist
			ROLES
			CLASS	VSLDef MULT UNDEFINED,
			CLASS	VSLDefList MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	VSLDef MULT UNDEFINED,
			CLASS	VSLDefList MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	VSLDef MULT UNDEFINED,
			CLASS	VSLNode MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	VSLDef MULT UNDEFINED,
			CLASS	string MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	VSLDef MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;

#=====================================================================
#File ../../code/ddd-3.0/ddd/ArgNode.o.nu.cls	 Class Number = 6
#=====================================================================
#Process file  ../../code/ddd-3.0/ddd/BuiltinCN.o.nu.cls

CLASS TrueBox	#LOC 6


	ATTRIBUTES


	OPERATIONS
		PUBLIC TrueBox():TrueBox
		;



	GENERALIZATION SquareBox
			SUBCLASSES TrueBox
		;

CLASS FalseBox	#LOC 6


	ATTRIBUTES


	OPERATIONS
		PUBLIC FalseBox():FalseBox
		;



	GENERALIZATION SquareBox
			SUBCLASSES FalseBox
		;

CLASS NullBox	#LOC 6


	ATTRIBUTES


	OPERATIONS
		PUBLIC NullBox():NullBox
		;



	GENERALIZATION SquareBox
			SUBCLASSES NullBox
		;

CLASS VSLDefList	#LOC 92


	ATTRIBUTES
		PRIVATE  _ndefs:unsigned,
		PRIVATE  _global:bool,
		PUBLIC  hashcode:unsigned,
		PUBLIC  references:int,
		PUBLIC  self_references:int

	OPERATIONS
		PUBLIC VSLDefList(VSLLib* l, unsigned hash, string func_nm, bool g):VSLDefList,
		PRIVATE VSLDefList(CONST_VSLDefList&):VSLDefList,
		PRIVATE operator_=(CONST_VSLDefList&):VSLDefList&,
		PUBLIC add(bool& newFlag, VSLNode* pattern, VSLNode* expr , string filename , int lineno):VSLDef*,
		PUBLIC def(Box *arglist):VSLDef*,
		PUBLIC firstdef():VSLDef*,
		PUBLIC func_name():string,
		PUBLIC global():bool&,
		PUBLIC global():bool,
		PUBLIC f_name():string,
		PUBLIC first():VSLDef*,
		PUBLIC next():VSLDefList*&,
		PUBLIC ndefs():unsigned,
		PUBLIC eval(Box *arg):const Box*,
		PUBLIC override():void,
		PUBLIC replace():void,
		PUBLIC ABSTRACT ~VSLDefList():VSLDefList,
		PUBLIC OK():bool
		;



	AGGREGATION NAME _func_name CONTAINER CLASS VSLDefList::AssocRec MULT UNDEFINED
			PARTS
			CLASS	public:string MULT UNDEFINED
		;


	RELATION _first
			ROLES
			CLASS	VSLDefList MULT UNDEFINED,
			CLASS	VSLDef MULT UNDEFINED
		;


	RELATION _last
			ROLES
			CLASS	VSLDefList MULT UNDEFINED,
			CLASS	VSLDef MULT UNDEFINED
		;


	RELATION _next
			ROLES
			CLASS	VSLDefList MULT UNDEFINED,
			CLASS	VSLDefList MULT UNDEFINED
		;


	RELATION lib
			ROLES
			CLASS	VSLDefList MULT UNDEFINED,
			CLASS	VSLLib MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	VSLDefList MULT UNDEFINED,
			CLASS	VSLLib MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	VSLDefList MULT UNDEFINED,
			CLASS	string MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	VSLDefList MULT UNDEFINED,
			CLASS	VSLNode MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	VSLDefList MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;

CLASS CallNode	#LOC 87


	ATTRIBUTES
		PUBLIC SHARED  matchesAll:bool

	OPERATIONS
		PROTECTED CallNode(CONST_CallNode& node):CallNode,
		PROTECTED ABSTRACT call(Box *arg):const Box*,
		PROTECTED dump(ostream& s):void,
		PROTECTED _dumpTree(ostream& s):void,
		PROTECTED ABSTRACT func_name():char*,
		PROTECTED ABSTRACT isInfix():bool,
		PROTECTED matches(CONST_VSLNode& node):bool,
		PRIVATE operator_=(CONST_CallNode&):CallNode&,
		PUBLIC arg():VSLNode*&,
		PUBLIC arg():VSLNode*,
		PUBLIC CallNode(VSLNode* a, char* type):CallNode,
		PUBLIC ~CallNode():CallNode,
		PUBLIC _eval(ListBox *arglist):const Box*,
		PUBLIC countSelfReferences(VSLDef* cdef, VSLDefList* deflist):int,
		PUBLIC resolveDefs(VSLDef* cdef, bool complain_recursive):int,
		PUBLIC resolveSynonyms(VSLDef* cdef, VSLNode* * node):int,
		PUBLIC foldOps(VSLDef* cdef, VSLNode* * node):int,
		PUBLIC foldConsts(VSLDef* cdef, VSLNode* * node):int,
		PUBLIC inlineFuncs(VSLDef* cdef, VSLNode* * node):int,
		PUBLIC instantiateArgs(VSLDef* cdef, VSLNode* * node, VSLNode* values[], unsigned base, unsigned n):int,
		PUBLIC countArgNodes(VSLDef* cdef, int instances[], unsigned base, unsigned n):void,
		PUBLIC _reBase(VSLDef* cdef, unsigned newBase):int,
		PUBLIC compilePatterns(VSLDef *cdef):void,
		PUBLIC uncompilePatterns(VSLDef *cdef):void,
		PUBLIC resolveName(VSLDef* cdef, VSLNode* * node, string& name, unsigned id):int,
		PUBLIC _resolveNames(VSLDef* cdef, unsigned base):int,
		PUBLIC firstName():string,
		PUBLIC isConst():bool,
		PUBLIC isCallNode():bool,
		PUBLIC nargs():unsigned,
		PUBLIC OK():bool
		;



	GENERALIZATION VSLNode
			SUBCLASSES CallNode
		;


	RELATION _arg
			ROLES
			CLASS	CallNode MULT UNDEFINED,
			CLASS	public:VSLNode MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	CallNode MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	CallNode MULT UNDEFINED,
			CLASS	VSLNode MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	CallNode MULT UNDEFINED,
			CLASS	ListBox MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	CallNode MULT UNDEFINED,
			CLASS	VSLDef MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	CallNode MULT UNDEFINED,
			CLASS	VSLDefList MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	CallNode MULT UNDEFINED,
			CLASS	string MULT UNDEFINED
		;

CLASS DefCallNode	#LOC 55


	ATTRIBUTES


	OPERATIONS
		PROTECTED DefCallNode(CONST_DefCallNode& node):DefCallNode,
		PROTECTED call(Box *arg):const Box*,
		PROTECTED func_name():char*,
		PROTECTED matches(CONST_VSLNode& node):bool,
		PRIVATE operator_=(CONST_DefCallNode&):DefCallNode&,
		PUBLIC dup():VSLNode*,
		PUBLIC DefCallNode(VSLDef* def, VSLNode* arg, char* type):DefCallNode,
		PUBLIC DefCallNode(VSLDefList* deflist, VSLNode* arg, char* type):DefCallNode,
		PUBLIC ~DefCallNode():DefCallNode,
		PUBLIC countSelfReferences(VSLDef* cdef, VSLDefList* deflist):int,
		PUBLIC resolveDefs(VSLDef* cdef, bool complain_recursive):int,
		PUBLIC resolveSynonyms(VSLDef* cdef, VSLNode* * node):int,
		PUBLIC inlineFuncs(VSLDef* cdef, VSLNode* * node):int,
		PUBLIC isDefCallNode():bool,
		PUBLIC OK():bool
		;



	GENERALIZATION CallNode
			SUBCLASSES DefCallNode
		;


	RELATION _def
			ROLES
			CLASS	DefCallNode MULT UNDEFINED,
			CLASS	public:VSLDef MULT UNDEFINED
		;


	RELATION _deflist
			ROLES
			CLASS	DefCallNode MULT UNDEFINED,
			CLASS	VSLDefList MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	DefCallNode MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	DefCallNode MULT UNDEFINED,
			CLASS	VSLDef MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	DefCallNode MULT UNDEFINED,
			CLASS	VSLNode MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	DefCallNode MULT UNDEFINED,
			CLASS	VSLDefList MULT UNDEFINED
		;

CLASS BuiltinCallNode	#LOC 52


	ATTRIBUTES
		PRIVATE  _index:public: int

	OPERATIONS
		PROTECTED BuiltinCallNode(CONST_BuiltinCallNode& node):BuiltinCallNode,
		PROTECTED call(Box *arg):const Box*,
		PROTECTED func_name():char*,
		PROTECTED isInfix():bool,
		PROTECTED matches(CONST_VSLNode& node):bool,
		PUBLIC BuiltinCallNode(int i, VSLNode* a, char* type):BuiltinCallNode,
		PUBLIC BuiltinCallNode(BuiltinCallNode& node, VSLNode* a, char* type):BuiltinCallNode,
		PUBLIC dup():VSLNode*,
		PUBLIC foldOps(VSLDef* cdef, VSLNode* * node):int,
		PUBLIC foldConsts(VSLDef* cdef, VSLNode* * node):int,
		PUBLIC isBuiltinCallNode():bool,
		PUBLIC OK():bool
		;



	GENERALIZATION CallNode
			SUBCLASSES BuiltinCallNode
		;


	RELATION 
			ROLES
			CLASS	BuiltinCallNode MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	BuiltinCallNode MULT UNDEFINED,
			CLASS	VSLNode MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	BuiltinCallNode MULT UNDEFINED,
			CLASS	VSLDef MULT UNDEFINED
		;

CLASS ListNode	#LOC 78


	ATTRIBUTES


	OPERATIONS
		PROTECTED ListNode(CONST_ListNode& node):ListNode,
		PROTECTED matches(CONST_VSLNode& node):bool,
		PRIVATE operator_=(CONST_ListNode&):ListNode&,
		PUBLIC ListNode(VSLNode* hd, VSLNode* tl, char* type):ListNode,
		PUBLIC dup():VSLNode*,
		PUBLIC ~ListNode():ListNode,
		PUBLIC head():VSLNode*&,
		PUBLIC tail():VSLNode*&,
		PUBLIC head():VSLNode*,
		PUBLIC tail():VSLNode*,
		PUBLIC _eval(ListBox *arglist):const Box*,
		PUBLIC countSelfReferences(VSLDef* cdef, VSLDefList* deflist):int,
		PUBLIC resolveDefs(VSLDef* cdef, bool complain_recursive):int,
		PUBLIC resolveSynonyms(VSLDef* cdef, VSLNode* * node):int,
		PUBLIC foldOps(VSLDef* cdef, VSLNode* * node):int,
		PUBLIC foldConsts(VSLDef* cdef, VSLNode* * node):int,
		PUBLIC inlineFuncs(VSLDef* cdef, VSLNode* * node):int,
		PUBLIC instantiateArgs(VSLDef* cdef, VSLNode* * node, VSLNode* values[], unsigned base, unsigned n):int,
		PUBLIC countArgNodes(VSLDef* cdef, int instances[], unsigned base, unsigned n):void,
		PUBLIC _reBase(VSLDef* cdef, unsigned newBase):int,
		PUBLIC compilePatterns(VSLDef *cdef):void,
		PUBLIC uncompilePatterns(VSLDef *cdef):void,
		PUBLIC resolveName(VSLDef* cdef, VSLNode* * node, string& name, unsigned id):int,
		PUBLIC _resolveNames(VSLDef* cdef, unsigned base):int,
		PUBLIC firstName():string,
		PUBLIC append(VSLNode *node):int,
		PUBLIC dump(ostream& s):void,
		PUBLIC _dumpTree(ostream& s):void,
		PUBLIC isConst():bool,
		PUBLIC isListNode():bool,
		PUBLIC isStraight():bool,
		PUBLIC nargs():unsigned,
		PUBLIC OK():bool
		;



	GENERALIZATION VSLNode
			SUBCLASSES ListNode
		;


	RELATION _head
			ROLES
			CLASS	ListNode MULT UNDEFINED,
			CLASS	public:VSLNode MULT UNDEFINED
		;


	RELATION _tail
			ROLES
			CLASS	ListNode MULT UNDEFINED,
			CLASS	VSLNode MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	ListNode MULT UNDEFINED,
			CLASS	VSLNode MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	ListNode MULT UNDEFINED,
			CLASS	ListBox MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	ListNode MULT UNDEFINED,
			CLASS	VSLDef MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	ListNode MULT UNDEFINED,
			CLASS	VSLDefList MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	ListNode MULT UNDEFINED,
			CLASS	string MULT UNDEFINED
		;

CLASS ConstNode	#LOC 56


	ATTRIBUTES


	OPERATIONS
		PROTECTED ConstNode(CONST_ConstNode& node):ConstNode,
		PROTECTED dump(ostream& s):void,
		PROTECTED _dumpTree(ostream& s):void,
		PROTECTED matches(CONST_VSLNode& node):bool,
		PRIVATE operator_=(CONST_ConstNode&):ConstNode&,
		PUBLIC ConstNode(Box* box, char* type):ConstNode,
		PUBLIC ~ConstNode():ConstNode,
		PUBLIC dup():VSLNode*,
		PUBLIC _eval(ListBox *arglist):const Box*,
		PUBLIC isConst():bool,
		PUBLIC isConstNode():bool,
		PUBLIC isStraight():bool,
		PUBLIC OK():bool
		;



	GENERALIZATION VSLNode
			SUBCLASSES ConstNode
		;


	RELATION _box
			ROLES
			CLASS	ConstNode MULT UNDEFINED,
			CLASS	public:Box MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	ConstNode MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	ConstNode MULT UNDEFINED,
			CLASS	ListBox MULT UNDEFINED
		;

CLASS TrueNode	#LOC 9


	ATTRIBUTES


	OPERATIONS
		PUBLIC TrueNode():TrueNode
		;



	GENERALIZATION ConstNode
			SUBCLASSES TrueNode
		;

CLASS FalseNode	#LOC 9


	ATTRIBUTES


	OPERATIONS
		PUBLIC FalseNode():FalseNode
		;



	GENERALIZATION ConstNode
			SUBCLASSES FalseNode
		;

CLASS NullNode	#LOC 9


	ATTRIBUTES


	OPERATIONS
		PUBLIC NullNode():NullNode
		;



	GENERALIZATION ConstNode
			SUBCLASSES NullNode
		;

CLASS StringNode	#LOC 9


	ATTRIBUTES


	OPERATIONS
		PUBLIC StringNode(CONST_string &str):StringNode
		;



	GENERALIZATION ConstNode
			SUBCLASSES StringNode
		;

CLASS NumNode	#LOC 9


	ATTRIBUTES


	OPERATIONS
		PUBLIC NumNode(int num):NumNode
		;



	GENERALIZATION ConstNode
			SUBCLASSES NumNode
		;

CLASS EmptyListNode	#LOC 9


	ATTRIBUTES


	OPERATIONS
		PUBLIC EmptyListNode():EmptyListNode
		;



	GENERALIZATION ConstNode
			SUBCLASSES EmptyListNode
		;

CLASS FixListNode	#LOC 11


	ATTRIBUTES


	OPERATIONS
		PUBLIC FixListNode(VSLNode *arg):FixListNode,
		PUBLIC FixListNode(VSLNode* arg1, VSLNode* arg2):FixListNode,
		PUBLIC FixListNode(VSLNode* arg1, VSLNode* arg2, VSLNode* arg3):FixListNode,
		PUBLIC FixListNode(VSLNode* arg1, VSLNode* arg2, VSLNode* arg3, VSLNode* arg4):FixListNode
		;



	GENERALIZATION ListNode
			SUBCLASSES FixListNode
		;


	RELATION 
			ROLES
			CLASS	FixListNode MULT UNDEFINED,
			CLASS	VSLNode MULT UNDEFINED
		;

#========================================================================
#File ../../code/ddd-3.0/ddd/BuiltinCN.o.nu.cls	 Class Number = 16
#========================================================================
#Process file  ../../code/ddd-3.0/ddd/CallNode.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/ConstNode.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/DefCallN.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/LetNode.o.nu.cls

CLASS LetNode	#LOC 104


	ATTRIBUTES
		PRIVATE  _nargs:unsigned,
		PRIVATE  _straight:bool,
		PRIVATE  being_compiled:bool

	OPERATIONS
		PRIVATE _args():ListNode*,
		PRIVATE _body():ListNode*,
		PRIVATE arglist(CONST_Box *arg):ListBox*,
		PRIVATE nodelist(CONST_VSLNode *arg):VSLNode*,
		PRIVATE domatch(CONST_Box *arg):bool,
		PRIVATE domatch(CONST_VSLNode *arg):bool,
		PROTECTED dump(ostream& s):void,
		PROTECTED _dumpTree(ostream& s):void,
		PROTECTED LetNode(CONST_LetNode& node):LetNode,
		PROTECTED func_name():char*,
		PROTECTED call(Box *):const Box*,
		PRIVATE operator_=(CONST_LetNode&):LetNode&,
		PUBLIC LetNode(VSLNode* p, VSLNode* a, VSLNode* b, char* type):LetNode,
		PUBLIC ~LetNode():LetNode,
		PUBLIC node_pattern():VSLNode*,
		PUBLIC box_pattern():Box*,
		PUBLIC args():VSLNode*,
		PUBLIC body():VSLNode*,
		PUBLIC node_pattern():const VSLNode*,
		PUBLIC box_pattern():const Box*,
		PUBLIC args():const VSLNode*,
		PUBLIC body():const VSLNode*,
		PUBLIC compilePatterns(VSLDef *cdef):void,
		PUBLIC uncompilePatterns(VSLDef *cdef):void,
		PUBLIC _resolveNames(VSLDef* cdef, unsigned base):int,
		PUBLIC inlineFuncs(VSLDef* cdef, VSLNode* * node):int,
		PUBLIC _reBase(VSLDef* cdef, unsigned newBase):int,
		PUBLIC dup():VSLNode*,
		PUBLIC _eval(ListBox *arglist):const Box*,
		PUBLIC isLetNode():bool,
		PUBLIC OK():bool
		;



	GENERALIZATION CallNode
			SUBCLASSES LetNode
		;


	RELATION _node_pattern
			ROLES
			CLASS	LetNode MULT UNDEFINED,
			CLASS	public:VSLNode MULT UNDEFINED
		;


	RELATION _box_pattern
			ROLES
			CLASS	LetNode MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	LetNode MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	LetNode MULT UNDEFINED,
			CLASS	VSLNode MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	LetNode MULT UNDEFINED,
			CLASS	VSLDef MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	LetNode MULT UNDEFINED,
			CLASS	ListBox MULT UNDEFINED
		;

CLASS WhereNode	#LOC 19


	ATTRIBUTES


	OPERATIONS
		PROTECTED dump(ostream& s):public: void,
		PROTECTED WhereNode(WhereNode& node):WhereNode,
		PUBLIC WhereNode(VSLNode* p, VSLNode* a, VSLNode* b):WhereNode
		;



	GENERALIZATION LetNode
			SUBCLASSES WhereNode
		;


	RELATION 
			ROLES
			CLASS	WhereNode MULT UNDEFINED,
			CLASS	VSLNode MULT UNDEFINED
		;

#=====================================================================
#File ../../code/ddd-3.0/ddd/LetNode.o.nu.cls	 Class Number = 2
#=====================================================================
#Process file  ../../code/ddd-3.0/ddd/wm.o.nu.cls

CLASS GDBAgent	#LOC 556


	ATTRIBUTES
		PROTECTED  state:State,
		PRIVATE  _type:DebuggerType,
		PRIVATE  _user_data:void,
		PRIVATE  _has_frame_command:bool,
		PRIVATE  _has_func_command:bool,
		PRIVATE  _has_run_io_command:bool,
		PRIVATE  _has_print_r_option:bool,
		PRIVATE  _has_output_command:bool,
		PRIVATE  _has_where_h_option:bool,
		PRIVATE  _has_display_command:bool,
		PRIVATE  _has_clear_command:bool,
		PRIVATE  _has_handler_command:bool,
		PRIVATE  _has_pwd_command:bool,
		PRIVATE  _has_setenv_command:bool,
		PRIVATE  _has_edit_command:bool,
		PRIVATE  _has_make_command:bool,
		PRIVATE  _has_jump_command:bool,
		PRIVATE  _has_regs_command:bool,
		PRIVATE  _has_watch_command:WatchMode,
		PRIVATE  _has_named_values:bool,
		PRIVATE  _has_when_command:bool,
		PRIVATE  _has_when_semicolon:bool,
		PRIVATE  _wants_delete_comma:bool,
		PRIVATE  _has_err_redirection:bool,
		PRIVATE  _has_givenfile_command:bool,
		PRIVATE  _has_cont_sig_command:bool,
		PRIVATE  _program_language:ProgramLanguage,
		PRIVATE  _verbatim:bool,
		PRIVATE  _recording:bool,
		PRIVATE  _detect_echos:bool,
		PRIVATE  echoed_characters:int,
		PRIVATE  questions_waiting:bool,
		PRIVATE  _qu_data:void,
		PRIVATE  qu_index:int,
		PRIVATE  _qu_count:int,
		PRIVATE  cmd_array:StringArray,
		PRIVATE  complete_answers:StringArray,
		PRIVATE  _qu_datas:VoidArray,
		PRIVATE  _qa_data:void,
		PRIVATE  _on_answer:OAProc,
		PRIVATE  _on_answer_completion:OACProc,
		PRIVATE  _on_question_completion:OQCProc,
		PRIVATE  _on_qu_array_completion:OQACProc

	OPERATIONS
		PRIVATE operator_=(CONST_GDBAgent&):GDBAgent&,
		PROTECTED SHARED prepend_prefix(CONST_string& prefix, CONST_string& expr):string,
		PROTECTED SHARED append_suffix(CONST_string& expr, CONST_string& suffix):string,
		PROTECTED trace(char* prefix, void* call_data):void,
		PUBLIC GDBAgent(XtAppContext app_context, CONST_string& gdb_call, DebuggerType type, unsigned nTypes):GDBAgent,
		PUBLIC GDBAgent(CONST_GDBAgent& gdb):GDBAgent,
		PUBLIC ABSTRACT dup():Agent*,
		PUBLIC ~GDBAgent():GDBAgent,
		PUBLIC do_start(OAProc on_answer, OACProc on_answer_completion, void* user_data):void,
		PUBLIC start_plus(OAProc on_answer, OACProc on_answer_completion, void* user_data, CONST_StringArray& cmds, CONST_VoidArray& user_datas, int qu_count, OQACProc on_qu_array_completion, void* qa_data):void,
		PUBLIC send_user_cmd(string cmd, void* user_data):bool,
		PUBLIC send_user_ctrl_cmd(string cmd, void* user_data):bool,
		PUBLIC send_user_cmd_plus(CONST_StringArray& cmds, CONST_VoidArray& qu_datas, int qu_count, OQACProc on_qu_array_completion, void* qa_data, string user_cmd, void* user_data):bool,
		PUBLIC send_question(string cmd, OQCProc on_question_completion, void* qu_data):bool,
		PUBLIC send_qu_array(CONST_StringArray& cmds, CONST_VoidArray& qu_datas, int qu_count, OQACProc on_qu_array_completion, void* qa_data):bool,
		PUBLIC type():DebuggerType,
		PUBLIC title():string,
		PUBLIC isReadyWithPrompt():bool,
		PUBLIC isBusyOnCmd():bool,
		PUBLIC isBusyOnQuestion():bool,
		PUBLIC prompt():string,
		PUBLIC has_frame_command():bool,
		PUBLIC has_frame_command(bool val):bool,
		PUBLIC has_func_command():bool,
		PUBLIC has_func_command(bool val):bool,
		PUBLIC has_run_io_command():bool,
		PUBLIC has_run_io_command(bool val):bool,
		PUBLIC has_print_r_option():bool,
		PUBLIC has_print_r_option(bool val):bool,
		PUBLIC has_output_command():bool,
		PUBLIC has_output_command(bool val):bool,
		PUBLIC has_where_h_option():bool,
		PUBLIC has_where_h_option(bool val):bool,
		PUBLIC has_display_command():bool,
		PUBLIC has_display_command(bool val):bool,
		PUBLIC has_clear_command():bool,
		PUBLIC has_clear_command(bool val):bool,
		PUBLIC has_handler_command():bool,
		PUBLIC has_handler_command(bool val):bool,
		PUBLIC has_pwd_command():bool,
		PUBLIC has_pwd_command(bool val):bool,
		PUBLIC has_setenv_command():bool,
		PUBLIC has_setenv_command(bool val):bool,
		PUBLIC has_edit_command():bool,
		PUBLIC has_edit_command(bool val):bool,
		PUBLIC has_make_command():bool,
		PUBLIC has_make_command(bool val):bool,
		PUBLIC has_jump_command():bool,
		PUBLIC has_jump_command(bool val):bool,
		PUBLIC has_regs_command():bool,
		PUBLIC has_regs_command(bool val):bool,
		PUBLIC has_watch_command():WatchMode,
		PUBLIC has_watch_command(WatchMode val):WatchMode,
		PUBLIC has_named_values():bool,
		PUBLIC has_named_values(bool val):bool,
		PUBLIC has_when_command():bool,
		PUBLIC has_when_command(bool val):bool,
		PUBLIC has_when_semicolon():bool,
		PUBLIC has_when_semicolon(bool val):bool,
		PUBLIC wants_delete_comma():bool,
		PUBLIC wants_delete_comma(bool val):bool,
		PUBLIC has_err_redirection():bool,
		PUBLIC has_err_redirection(bool val):bool,
		PUBLIC has_givenfile_command():bool,
		PUBLIC has_givenfile_command(bool val):bool,
		PUBLIC has_cont_sig_command():bool,
		PUBLIC has_cont_sig_command(bool val):bool,
		PUBLIC program_language():ProgramLanguage,
		PUBLIC program_language(ProgramLanguage val):ProgramLanguage,
		PUBLIC program_language(string text):ProgramLanguage,
		PUBLIC has_enable_command():bool,
		PUBLIC has_disable_command():bool,
		PUBLIC has_ignore_command():bool,
		PUBLIC has_condition_command():bool,
		PUBLIC has_delete_command():bool,
		PUBLIC has_volatile_breakpoints():bool,
		PUBLIC has_redirection():bool,
		PUBLIC has_assign_command():bool,
		PUBLIC has_system_calls():bool,
		PUBLIC has_exec_files():bool,
		PUBLIC has_classes():bool,
		PUBLIC has_core_files():bool,
		PUBLIC has_processes():bool,
		PUBLIC has_cd_command():bool,
		PUBLIC has_shell_command():bool,
		PUBLIC has_temporary_breakpoints():bool,
		PUBLIC has_breakpoint_conditions():bool,
		PUBLIC has_typed_pointers():bool,
		PUBLIC type():bool has_typed return,
		PUBLIC has_scalars():bool,
		PUBLIC has_quotes():bool,
		PUBLIC display_prints_values():bool,
		PUBLIC has_enable_display_command():bool,
		PUBLIC has_disable_display_command():bool,
		PUBLIC has_numbered_displays():bool,
		PUBLIC wants_display_comma():bool,
		PUBLIC has_info_display_command():bool,
		PUBLIC has_redisplaying_undisplay():bool,
		PUBLIC has_conditions():bool,
		PUBLIC can_disable():bool,
		PUBLIC can_enable():bool,
		PUBLIC verbatim():bool,
		PUBLIC verbatim(bool val):bool,
		PUBLIC recording():bool,
		PUBLIC recording(bool val):bool,
		PUBLIC detect_echos():bool,
		PUBLIC detect_echos(bool val):bool,
		PUBLIC print_command(string expr , bool internal):string,
		PUBLIC assign_command(string var, string expr):string,
		PUBLIC display_command(string expr):string,
		PUBLIC where_command(int count):string,
		PUBLIC pwd_command():string,
		PUBLIC frame_command(int number):string,
		PUBLIC frame_command():string,
		PUBLIC func_command():string,
		PUBLIC echo_command(string text):string,
		PUBLIC whatis_command(string expr):string,
		PUBLIC dereferenced_expr(string expr):string,
		PUBLIC address_expr(string expr):string,
		PUBLIC index_expr(string expr, string index):string,
		PUBLIC default_index_base():int,
		PUBLIC info_locals_command():string,
		PUBLIC info_args_command():string,
		PUBLIC info_display_command():string,
		PUBLIC disassemble_command(string start, string end):string,
		PUBLIC make_command(string target):string,
		PUBLIC jump_command(string pc):string,
		PUBLIC regs_command(bool all):string,
		PUBLIC watch_command(string expr, WatchMode w):string,
		PUBLIC kill_command():string,
		PUBLIC enable_command(string bp):string,
		PUBLIC disable_command(string bp):string,
		PUBLIC delete_command(string bp):string,
		PUBLIC ignore_command(string bp, int count):string,
		PUBLIC condition_command(string bp, string expr):string,
		PUBLIC shell_command(string cmd):string,
		PUBLIC debug_command(string program):string,
		PUBLIC signal_command(int sig):string,
		PUBLIC nop_command(string comment):string,
		PUBLIC history_file():string,
		PUBLIC ABSTRACT write(CONST_char* data, int length):int,
		PUBLIC write(CONST_string& data):int,
		PUBLIC ends_with_prompt(CONST_string& answer):bool,
		PUBLIC ends_with_secondary_prompt(CONST_string& answer):bool,
		PRIVATE init_qu_array(CONST_StringArray& cmds, CONST_VoidArray& qu_datas, int qu_count, OQACProc on_qu_array_completion, void* qa_data):void,
		PRIVATE requires_reply(CONST_string& answer):string,
		PRIVATE cut_off_prompt(string& answer):void,
		PRIVATE strip_dbx_comments(string& answer):void,
		PRIVATE strip_control(string& answer):void,
		PRIVATE normalize_answer(string& answer):void,
		PRIVATE normalize_address(string& addr):void,
		PRIVATE handle_echo(string& answer):void,
		PRIVATE handle_more(string& answer):void,
		PRIVATE handle_reply(string& answer):void,
		PRIVATE handle_input(string& answer):void,
		PRIVATE handle_died():void,
		PROTECTED SHARED InputHP(Agent* , void* , void*):void,
		PROTECTED SHARED PanicHP(Agent* , void* , void*):void,
		PROTECTED SHARED StrangeHP(Agent* , void* , void*):void,
		PROTECTED SHARED DiedHP(Agent* , void* , void*):void,
		PROTECTED SHARED traceInputHP(Agent* , void* , void*):void,
		PROTECTED SHARED traceOutputHP(Agent* , void* , void*):void,
		PROTECTED SHARED traceErrorHP(Agent* , void* , void*):void
		;



	GENERALIZATION TTYAgent
			SUBCLASSES GDBAgent
		;


	AGGREGATION NAME last_prompt CONTAINER CLASS GDBAgent::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME last_written CONTAINER CLASS GDBAgent::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME complete_answer CONTAINER CLASS GDBAgent::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	GDBAgent MULT UNDEFINED,
			CLASS	string MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	GDBAgent MULT UNDEFINED,
			CLASS	Agent MULT UNDEFINED
		;

#================================================================
#File ../../code/ddd-3.0/ddd/wm.o.nu.cls	 Class Number = 1
#================================================================
#Process file  ../../code/ddd-3.0/ddd/TestNode.o.nu.cls

CLASS TestNode	#LOC 51


	ATTRIBUTES


	OPERATIONS
		PRIVATE _test():public: ListNode*,
		PRIVATE _true():ListNode*,
		PRIVATE _false():ListNode*,
		PROTECTED dump(ostream& s):void,
		PROTECTED _dumpTree(ostream& s):void,
		PROTECTED TestNode(CONST_TestNode& node):TestNode,
		PROTECTED func_name():char*,
		PROTECTED call(Box *):const Box*,
		PUBLIC TestNode(VSLNode* tst, VSLNode* t, VSLNode* f, char* type):TestNode,
		PUBLIC test():VSLNode*,
		PUBLIC thetrue():VSLNode*,
		PUBLIC thefalse():VSLNode*,
		PUBLIC test():VSLNode*,
		PUBLIC thetrue():VSLNode*,
		PUBLIC thefalse():VSLNode*,
		PUBLIC dup():VSLNode*,
		PUBLIC _eval(ListBox *arglist):const Box*,
		PUBLIC foldConsts(VSLDef* cdef, VSLNode* * node):int,
		PUBLIC resolveDefs(VSLDef* cdef, bool complain_recursive):int,
		PUBLIC isTestNode():bool,
		PUBLIC OK():bool
		;



	GENERALIZATION CallNode
			SUBCLASSES TestNode
		;


	RELATION 
			ROLES
			CLASS	TestNode MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	TestNode MULT UNDEFINED,
			CLASS	VSLNode MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	TestNode MULT UNDEFINED,
			CLASS	ListBox MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	TestNode MULT UNDEFINED,
			CLASS	VSLDef MULT UNDEFINED
		;

#======================================================================
#File ../../code/ddd-3.0/ddd/TestNode.o.nu.cls	 Class Number = 1
#======================================================================
#Process file  ../../code/ddd-3.0/ddd/TrueNode.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/VSEFlags.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/VSLBuiltin.o.nu.cls

CLASS FontFixBox	#LOC 20


	ATTRIBUTES


	OPERATIONS
		PROTECTED FontFixBox(CONST_FontFixBox& box):FontFixBox,
		PROTECTED dump(ostream& s):void,
		PUBLIC FontFixBox(Box* box, char* t):FontFixBox,
		PUBLIC dup():Box*,
		PUBLIC newFont(CONST_string&):void
		;



	GENERALIZATION HatBox
			SUBCLASSES FontFixBox
		;


	RELATION 
			ROLES
			CLASS	FontFixBox MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;

#========================================================================
#File ../../code/ddd-3.0/ddd/VSLBuiltin.o.nu.cls	 Class Number = 1
#========================================================================
#Process file  ../../code/ddd-3.0/ddd/VSLDef.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/VSLErr.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/VSLNode.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/VSLRead.o.nu.cls

CLASS NameNode	#LOC 42


	ATTRIBUTES


	OPERATIONS
		PROTECTED NameNode(CONST_NameNode& node):NameNode,
		PROTECTED dump(ostream& s):void,
		PROTECTED _dumpTree(ostream& s):void,
		PUBLIC NameNode(string nm, char* type):NameNode,
		PUBLIC dup():VSLNode*,
		PUBLIC _eval(ListBox *):const Box*,
		PUBLIC isConst():bool,
		PUBLIC isNameNode():bool,
		PUBLIC nargs():unsigned,
		PUBLIC resolveName(VSLDef* cdef, VSLNode* * node, string& name, unsigned id):int,
		PUBLIC firstName():string,
		PUBLIC OK():bool
		;



	GENERALIZATION VSLNode
			SUBCLASSES NameNode
		;


	AGGREGATION NAME _name CONTAINER CLASS NameNode::AssocRec MULT UNDEFINED
			PARTS
			CLASS	public:string MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	NameNode MULT UNDEFINED,
			CLASS	string MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	NameNode MULT UNDEFINED,
			CLASS	ListBox MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	NameNode MULT UNDEFINED,
			CLASS	VSLDef MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	NameNode MULT UNDEFINED,
			CLASS	VSLNode MULT UNDEFINED
		;

CLASS vslNameSet	#LOC 25


	ATTRIBUTES


	OPERATIONS
		PUBLIC vslNameSet(CONST_char *name):vslNameSet,
		PUBLIC ~vslNameSet():vslNameSet,
		PUBLIC reset():void,
		PUBLIC add(CONST_char *name):int,
		PRIVATE vslNameSet(CONST_vslNameSet&):vslNameSet,
		PRIVATE operator_=(CONST_vslNameSet&):vslNameSet&
		;



	AGGREGATION NAME _name CONTAINER CLASS vslNameSet::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	RELATION _next
			ROLES
			CLASS	vslNameSet MULT UNDEFINED,
			CLASS	vslNameSet MULT UNDEFINED
		;

#=====================================================================
#File ../../code/ddd-3.0/ddd/VSLRead.o.nu.cls	 Class Number = 2
#=====================================================================
#Process file  ../../code/ddd-3.0/ddd/layout.o.nu.cls

CLASS Layout	#LOC 100


	ATTRIBUTES


	OPERATIONS
		PUBLIC SHARED add_graph(char *g):void,
		PUBLIC SHARED add_node(char* g, char* node):void,
		PUBLIC SHARED add_edge(char* g, char* node1, char* node2):void,
		PUBLIC SHARED set_node_width(char* g, char* node, int width):void,
		PUBLIC SHARED set_node_height(char* g, char* node, int height):void,
		PUBLIC SHARED set_node_position(char* g, char* node, int x, int y):void,
		PUBLIC SHARED add_edge_hint(char* g, char* node1, char* node2, int x, int y):void,
		PUBLIC SHARED remove_edge_hint(char* g, char* node1, char* node2, int x, int y):void,
		PUBLIC SHARED remove_edge(char* g, char* node1, char* node2):void,
		PUBLIC SHARED remove_node(char* g, char* label):void,
		PUBLIC SHARED remove_graph(char *g):void,
		PUBLIC SHARED layout(char *g):void,
		PUBLIC SHARED (*node_callback)():void,
		PUBLIC SHARED (*hint_callback)():void,
		PUBLIC SHARED (*compare_callback)():int,
		PUBLIC SHARED dddDebug(char *g):void,
		PUBLIC SHARED inc_layout(GRAPH *graph):void,
		PUBLIC SHARED new_layout(GRAPH *graph):void,
		PUBLIC SHARED dddOutput(GRAPH *graph):void,
		PUBLIC SHARED dddNodeOut(char* graph,NODE* node):void,
		PUBLIC SHARED debugNode(NODE *node):void,
		PUBLIC SHARED debugLevel(GRAPH* graph, int n):void,
		PUBLIC SHARED debugAllLevel(GRAPH *graph):void,
		PUBLIC SHARED debugAllNodes(GRAPH *graph):void,
		PUBLIC SHARED debugNodeXFig(NODE *nd):void,
		PUBLIC SHARED debugEdgeXFig(NODE* source, NODE* target, int arrow):void,
		PUBLIC SHARED debugGraphXFig(GRAPH *graph):void,
		PUBLIC SHARED listInit(EDGELIST *list):void,
		PUBLIC SHARED listInsertEdge(EDGELIST* list, NODE* node):EDGE*,
		PUBLIC SHARED listRemoveEdge(EDGELIST* list, EDGE* edge):void,
		PUBLIC SHARED listFindNode(EDGELIST* list, NODE* node):EDGE*,
		PUBLIC SHARED listFindTarget(EDGELIST* list, NODE* target):EDGE*,
		PUBLIC SHARED listRemove(EDGELIST *list):void,
		PUBLIC SHARED nodeInit(NODE* node, ID* id , NODETYPE type):void,
		PUBLIC SHARED nodeRemove(NODE *node):void,
		PUBLIC SHARED graphInit(GRAPH* graph, char* label):void,
		PUBLIC SHARED graphEnterNode(GRAPH* graph, ID* id, NODETYPE type):NODE*,
		PUBLIC SHARED graphGetNode(GRAPH* graph, ID* id, NODETYPE type):NODE*,
		PUBLIC SHARED graphRemoveNode(GRAPH* graph, ID* id, NODETYPE type):void,
		PUBLIC SHARED graphCreateLevels(GRAPH* graph, int n):void,
		PUBLIC SHARED graphRemoveLevels(GRAPH *graph):void,
		PUBLIC SHARED graphAddLevels(GRAPH* graph, int n):void,
		PUBLIC SHARED graphInsertEdge(GRAPH* graph,NODE* source,NODE* target):void,
		PUBLIC SHARED graphInvertEdge(NODE* source, NODE* target):void,
		PUBLIC SHARED graphNewNodeID():int,
		PUBLIC SHARED graphInsertHint(GRAPH* graph, NODE* source, NODE* target):NODE*,
		PUBLIC SHARED graphFindEdgeAtSource(NODE* source, NODE* target):EDGE*,
		PUBLIC SHARED graphFindEdgeAtTarget(NODE* source, NODE* target):EDGE*,
		PUBLIC SHARED graphResetLevels(GRAPH *graph):void,
		PUBLIC SHARED graphHashStr(char* str, int prime):int,
		PUBLIC SHARED graphGet(GRAPHTAB* tab, char* label):GRAPH*,
		PUBLIC SHARED graphNew(GRAPHTAB* tab,char* label):GRAPH*,
		PUBLIC SHARED graphRemove(GRAPHTAB* tab, char* label):void,
		PUBLIC SHARED graphTabInit(GRAPHTAB *tab):void,
		PUBLIC SHARED levelsInsertNode(GRAPH* graph, NODE* node, int n):void,
		PUBLIC SHARED levelsRemoveNode(GRAPH* graph, NODE* node, int n):void,
		PUBLIC SHARED levelsEnterNodes(GRAPH* graph, int pullup):void,
		PUBLIC SHARED levelsIndex(NODE **level):void,
		PUBLIC SHARED levelsLength(NODE **level):int,
		PUBLIC SHARED sortApplyLevel(GRAPH *graph):int,
		PUBLIC SHARED sortPullupNodes(GRAPH *graph):void,
		PUBLIC SHARED minimumLevel(NODE *node):int,
		PUBLIC SHARED distance(NODE* node, NODE* origin):int,
		PUBLIC SHARED sortInsertHints(GRAPH *graph):void,
		PUBLIC SHARED sortCheckNode(GRAPH* graph, NODE* node):void,
		PUBLIC SHARED sortNodeUpperBary(NODE *node):int,
		PUBLIC SHARED sortNodeLowerBary(NODE *node):int,
		PUBLIC SHARED sortGraphUpperBary(GRAPH *graph):void,
		PUBLIC SHARED sortGraphLowerBary(GRAPH *graph):void,
		PUBLIC SHARED sortByCenter(NODE **level):void,
		PUBLIC SHARED sortAvrgCenter(GRAPH *graph):void,
		PUBLIC SHARED sortCmpCenters(NODE* * first, NODE* * second):int,
		PUBLIC SHARED sortInitX(GRAPH *graph):void,
		PUBLIC SHARED sortGraphUpX(GRAPH *graph):void,
		PUBLIC SHARED sortGraphDownX(GRAPH *graph):void,
		PUBLIC SHARED sortLevelUpX(NODE* * level, int dist):void,
		PUBLIC SHARED sortLevelDownX(NODE* * level, int dist):void,
		PUBLIC SHARED sortLeftSpace(NODE* node, int dist):int,
		PUBLIC SHARED sortMoveLeft(NODE* node, int newx, int dist):void,
		PUBLIC SHARED sortMoveRight(NODE* node, int newx, int mindist):void,
		PUBLIC SHARED sortMove(NODE* node, int newx, int mindist):void,
		PUBLIC SHARED sortAvrgUpperX(NODE *node):int,
		PUBLIC SHARED sortAvrgLowerX(NODE *node):int,
		PUBLIC SHARED sortCmpUpperPrio(NODE* * fst, NODE* * snd):int,
		PUBLIC SHARED sortCmpLowerPrio(NODE* * fst, NODE* * snd):int,
		PUBLIC SHARED sortLevelVertical(NODE* * level, int miny, int minydist):int,
		PUBLIC SHARED sortGraphVertical(GRAPH *graph):void
		;


#====================================================================
#File ../../code/ddd-3.0/ddd/layout.o.nu.cls	 Class Number = 1
#====================================================================
#Process file  ../../code/ddd-3.0/ddd/BoxGraphN.o.nu.cls

CLASS GraphNode	#LOC 135


	ATTRIBUTES
		PRIVATE  _selected:bool,
		PRIVATE  _hidden:bool,
		PRIVATE  _redraw:bool,
		PUBLIC  count:int

	OPERATIONS
		PRIVATE operator_=(CONST_GraphNode&):GraphNode&,
		PROTECTED GraphNode(CONST_GraphNode& node):GraphNode,
		PUBLIC GraphNode():GraphNode,
		PUBLIC ABSTRACT ~GraphNode():GraphNode,
		PUBLIC ABSTRACT dup():GraphNode*,
		PUBLIC id():unsigned long,
		PUBLIC selected():bool&,
		PUBLIC selected():bool,
		PUBLIC hidden():bool&,
		PUBLIC hidden():bool,
		PUBLIC redraw():bool&,
		PUBLIC redraw():bool,
		PUBLIC firstFrom():GraphEdge*,
		PUBLIC nextFrom(GraphEdge *ref):GraphEdge*,
		PUBLIC firstTo():GraphEdge*,
		PUBLIC nextTo(GraphEdge *ref):GraphEdge*,
		PUBLIC ABSTRACT pos():const BoxPoint&,
		PUBLIC ABSTRACT region(CONST_GraphGC& gc):const BoxRegion&,
		PUBLIC ABSTRACT highlightRegion(CONST_GraphGC& gc):const BoxRegion&,
		PUBLIC ABSTRACT sensitiveRegion(CONST_GraphGC& gc):const BoxRegion&,
		PUBLIC ABSTRACT str():string,
		PUBLIC origin(CONST_GraphGC& gc):const BoxPoint&,
		PUBLIC space(CONST_GraphGC& gc):const BoxSize&,
		PUBLIC ABSTRACT isHint():bool,
		PUBLIC ABSTRACT moveTo(CONST_BoxPoint& newPos):void,
		PUBLIC ABSTRACT originToPos(CONST_BoxPoint& origin, CONST_GraphGC&):BoxPoint,
		PUBLIC ABSTRACT draw(Widget, CONST_BoxRegion& , CONST_GraphGC&):void,
		PUBLIC draw(Widget w, CONST_BoxRegion& exposed):void,
		PUBLIC draw(Widget w):void,
		PUBLIC ABSTRACT _print(ostream& , CONST_GraphGC&):void,
		PUBLIC ABSTRACT OK():bool
		;



	AGGREGATION NAME _id CONTAINER CLASS GraphNode::AssocRec MULT UNDEFINED
			PARTS
			CLASS	public:UniqueId MULT UNDEFINED
		;


	RELATION _firstFrom
			ROLES
			CLASS	GraphNode MULT UNDEFINED,
			CLASS	GraphEdge MULT UNDEFINED
		;


	RELATION _firstTo
			ROLES
			CLASS	GraphNode MULT UNDEFINED,
			CLASS	GraphEdge MULT UNDEFINED
		;


	RELATION next
			ROLES
			CLASS	GraphNode MULT UNDEFINED,
			CLASS	GraphNode MULT UNDEFINED
		;


	RELATION prev
			ROLES
			CLASS	GraphNode MULT UNDEFINED,
			CLASS	GraphNode MULT UNDEFINED
		;


	RELATION graph
			ROLES
			CLASS	GraphNode MULT UNDEFINED,
			CLASS	Graph MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	GraphNode MULT UNDEFINED,
			CLASS	GraphEdge MULT UNDEFINED
		;

CLASS GraphEdge	#LOC 97


	ATTRIBUTES
		PRIVATE  _hidden:bool

	OPERATIONS
		PRIVATE operator_=(CONST_GraphEdge&):GraphEdge&,
		PROTECTED ABSTRACT _draw(Widget w, CONST_BoxRegion& exposed, CONST_GraphGC& gc):void,
		PROTECTED enqueue():void,
		PROTECTED dequeue():void,
		PROTECTED GraphEdge(CONST_GraphEdge& edge):GraphEdge,
		PUBLIC GraphEdge(GraphNode* f, GraphNode* t):GraphEdge,
		PUBLIC ABSTRACT ~GraphEdge():GraphEdge,
		PUBLIC ABSTRACT dup():GraphEdge*,
		PUBLIC from():GraphNode*,
		PUBLIC to():GraphNode*,
		PUBLIC id():unsigned long,
		PUBLIC hidden():bool&,
		PUBLIC hidden():bool,
		PUBLIC draw(Widget w, CONST_BoxRegion& exposed , CONST_GraphGC& gc):void,
		PUBLIC ABSTRACT _print(ostream& os, CONST_GraphGC& gc):void,
		PUBLIC ABSTRACT OK():bool
		;



	AGGREGATION NAME _id CONTAINER CLASS GraphEdge::AssocRec MULT UNDEFINED
			PARTS
			CLASS	public:UniqueId MULT UNDEFINED
		;


	RELATION _from
			ROLES
			CLASS	GraphEdge MULT UNDEFINED,
			CLASS	GraphNode MULT UNDEFINED
		;


	RELATION _to
			ROLES
			CLASS	GraphEdge MULT UNDEFINED,
			CLASS	GraphNode MULT UNDEFINED
		;


	RELATION _nextFrom
			ROLES
			CLASS	GraphEdge MULT UNDEFINED,
			CLASS	GraphEdge MULT UNDEFINED
		;


	RELATION _nextTo
			ROLES
			CLASS	GraphEdge MULT UNDEFINED,
			CLASS	GraphEdge MULT UNDEFINED
		;


	RELATION _prevFrom
			ROLES
			CLASS	GraphEdge MULT UNDEFINED,
			CLASS	GraphEdge MULT UNDEFINED
		;


	RELATION _prevTo
			ROLES
			CLASS	GraphEdge MULT UNDEFINED,
			CLASS	GraphEdge MULT UNDEFINED
		;


	RELATION next
			ROLES
			CLASS	GraphEdge MULT UNDEFINED,
			CLASS	GraphEdge MULT UNDEFINED
		;


	RELATION prev
			ROLES
			CLASS	GraphEdge MULT UNDEFINED,
			CLASS	GraphEdge MULT UNDEFINED
		;


	RELATION graph
			ROLES
			CLASS	GraphEdge MULT UNDEFINED,
			CLASS	Graph MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	GraphEdge MULT UNDEFINED,
			CLASS	GraphNode MULT UNDEFINED
		;

CLASS PosGraphNode	#LOC 40


	ATTRIBUTES


	OPERATIONS
		PROTECTED PosGraphNode(CONST_PosGraphNode& node):PosGraphNode,
		PUBLIC PosGraphNode(CONST_BoxPoint& initialPos):PosGraphNode,
		PUBLIC ABSTRACT ~PosGraphNode():PosGraphNode,
		PUBLIC SHARED (*MoveCB)():bool,
		PUBLIC ABSTRACT moveTo(CONST_BoxPoint& newPos):void,
		PUBLIC ABSTRACT pos():const BoxPoint&
		;



	GENERALIZATION GraphNode
			SUBCLASSES PosGraphNode
		;


	AGGREGATION NAME _pos CONTAINER CLASS PosGraphNode::AssocRec MULT UNDEFINED
			PARTS
			CLASS	public:BoxPoint MULT UNDEFINED
		;

CLASS RegionGraphNode	#LOC 87


	ATTRIBUTES


	OPERATIONS
		PROTECTED ABSTRACT forceDraw(Widget w, CONST_BoxRegion& exposed, CONST_GraphGC& gc):void,
		PROTECTED center():void,
		PROTECTED RegionGraphNode(CONST_RegionGraphNode& node):RegionGraphNode,
		PUBLIC RegionGraphNode(CONST_BoxPoint& initialPos , CONST_BoxSize& initialSize):RegionGraphNode,
		PUBLIC ABSTRACT ~RegionGraphNode():RegionGraphNode,
		PUBLIC ABSTRACT moveTo(CONST_BoxPoint& newPos):void,
		PUBLIC SHARED (*ResizeCB)():bool,
		PUBLIC ABSTRACT resize(CONST_BoxSize& newSize):void,
		PUBLIC ABSTRACT originToPos(CONST_BoxPoint& origin, CONST_GraphGC&):BoxPoint,
		PUBLIC ABSTRACT draw(Widget w, CONST_BoxRegion& exposed, CONST_GraphGC& gc):void,
		PUBLIC ABSTRACT _print(ostream& os, CONST_GraphGC& gc):void,
		PUBLIC ABSTRACT region(CONST_GraphGC&):const BoxRegion&,
		PUBLIC ABSTRACT highlightRegion(CONST_GraphGC& gc):const BoxRegion&,
		PUBLIC ABSTRACT sensitiveRegion(CONST_GraphGC& gc):const BoxRegion&
		;



	GENERALIZATION PosGraphNode
			SUBCLASSES RegionGraphNode
		;


	AGGREGATION NAME _region CONTAINER CLASS RegionGraphNode::AssocRec MULT UNDEFINED
			PARTS
			CLASS	public:BoxRegion MULT UNDEFINED
		;

CLASS BoxGraphNode	#LOC 84


	ATTRIBUTES


	OPERATIONS
		PRIVATE operator_=(CONST_BoxGraphNode&):BoxGraphNode&,
		PROTECTED ABSTRACT forceDraw(Widget w, CONST_BoxRegion& exposed, CONST_GraphGC& gc):void,
		PROTECTED find_mark(Box* dup, Box* src, Box* mark):MarkBox*,
		PROTECTED BoxGraphNode(CONST_BoxGraphNode& node):BoxGraphNode,
		PUBLIC BoxGraphNode(Box* b, CONST_BoxPoint& initialPos , MarkBox* h):BoxGraphNode,
		PUBLIC dup():GraphNode*,
		PUBLIC ABSTRACT ~BoxGraphNode():BoxGraphNode,
		PUBLIC box():Box*,
		PUBLIC highlight():MarkBox*,
		PUBLIC ABSTRACT str():string,
		PUBLIC ABSTRACT highlightRegion(CONST_GraphGC& gc):const BoxRegion&,
		PUBLIC setHighlight(MarkBox *b):void,
		PUBLIC setBox(Box *b):void,
		PUBLIC ABSTRACT _print(ostream& os, CONST_GraphGC& gc):void
		;



	GENERALIZATION RegionGraphNode
			SUBCLASSES BoxGraphNode
		;


	RELATION _box
			ROLES
			CLASS	BoxGraphNode MULT UNDEFINED,
			CLASS	public:Box MULT UNDEFINED
		;


	RELATION _highlight
			ROLES
			CLASS	BoxGraphNode MULT UNDEFINED,
			CLASS	MarkBox MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	BoxGraphNode MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	BoxGraphNode MULT UNDEFINED,
			CLASS	MarkBox MULT UNDEFINED
		;

#=======================================================================
#File ../../code/ddd-3.0/ddd/BoxGraphN.o.nu.cls	 Class Number = 5
#=======================================================================
#Process file  ../../code/ddd-3.0/ddd/Graph.o.nu.cls

CLASS Graph	#LOC 159


	ATTRIBUTES


	OPERATIONS
		PRIVATE operator_=(CONST_Graph&):Graph&,
		PROTECTED addNodes(GraphNode* nodes):void,
		PROTECTED addEdges(GraphEdge* edges):void,
		PROTECTED addUsedEdges(GraphEdge* edges):void,
		PROTECTED removeNode(GraphNode* node):void,
		PROTECTED removeEdge(GraphEdge* edge):void,
		PROTECTED haveNode(GraphNode* node):bool,
		PROTECTED haveEdge(GraphEdge* edge):bool,
		PROTECTED getNode(GraphNode* node, CONST_Graph& graph):GraphNode*,
		PROTECTED Graph(CONST_Graph& graph):Graph,
		PUBLIC Graph():Graph,
		PUBLIC ABSTRACT ~Graph():Graph,
		PUBLIC ABSTRACT dup():Graph*,
		PUBLIC operator_+=(CONST_Graph& g):void,
		PUBLIC operator_+=(GraphNode *node):void,
		PUBLIC operator_+=(GraphEdge *edge):void,
		PUBLIC operator_-=(GraphNode *node):void,
		PUBLIC operator_-=(GraphEdge *edge):void,
		PUBLIC firstNode():GraphNode*,
		PUBLIC nextNode(GraphNode *ref):GraphNode*,
		PUBLIC firstVisibleNode():GraphNode*,
		PUBLIC nextVisibleNode(GraphNode *ref):GraphNode*,
		PUBLIC firstEdge():GraphEdge*,
		PUBLIC nextEdge(GraphEdge *ref):GraphEdge*,
		PUBLIC firstVisibleEdge():GraphEdge*,
		PUBLIC nextVisibleEdge(GraphEdge *ref):GraphEdge*,
		PUBLIC makeNodeFirst(GraphNode *node):void,
		PUBLIC makeNodeLast(GraphNode *node):void,
		PUBLIC makeEdgeFirst(GraphEdge *edge):void,
		PUBLIC makeEdgeLast(GraphEdge *edge):void,
		PUBLIC draw(Widget w, CONST_BoxRegion& exposed, CONST_GraphGC& gc):void,
		PUBLIC draw(Widget w, CONST_BoxRegion& exposed):void,
		PUBLIC draw(Widget w):void,
		PUBLIC _print(ostream& os, CONST_GraphGC& gc):void,
		PUBLIC _printHeader(ostream& os, CONST_GraphGC& gc):void,
		PUBLIC _printTrailer(ostream& os, CONST_GraphGC& gc):void,
		PUBLIC print(ostream& os, CONST_GraphGC& gc):void,
		PUBLIC region(CONST_GraphGC& gc):BoxRegion,
		PUBLIC ABSTRACT OK():bool
		;



	RELATION _firstNode
			ROLES
			CLASS	Graph MULT UNDEFINED,
			CLASS	public:GraphNode MULT UNDEFINED
		;


	RELATION _firstEdge
			ROLES
			CLASS	Graph MULT UNDEFINED,
			CLASS	GraphEdge MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	Graph MULT UNDEFINED,
			CLASS	GraphNode MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	Graph MULT UNDEFINED,
			CLASS	GraphEdge MULT UNDEFINED
		;

#===================================================================
#File ../../code/ddd-3.0/ddd/Graph.o.nu.cls	 Class Number = 1
#===================================================================
#Process file  ../../code/ddd-3.0/ddd/GraphEdit.o.nu.cls

CLASS HintGraphNode	#LOC 48


	ATTRIBUTES


	OPERATIONS
		PROTECTED ABSTRACT forceDraw(Widget w, CONST_BoxRegion& exposed, CONST_GraphGC& gc):public: void,
		PROTECTED HintGraphNode(CONST_HintGraphNode &node):HintGraphNode,
		PUBLIC HintGraphNode(CONST_BoxPoint& initialPos):HintGraphNode,
		PUBLIC ABSTRACT ~HintGraphNode():HintGraphNode,
		PUBLIC dup():GraphNode*,
		PUBLIC ABSTRACT isHint():bool,
		PUBLIC ABSTRACT region(CONST_GraphGC& gc):const BoxRegion&,
		PUBLIC ABSTRACT sensitiveRegion(CONST_GraphGC& gc):const BoxRegion&
		;



	GENERALIZATION RegionGraphNode
			SUBCLASSES HintGraphNode
		;

CLASS LineGraphEdge	#LOC 71


	ATTRIBUTES


	OPERATIONS
		PROTECTED SHARED findLine(CONST_BoxPoint& c1, CONST_BoxPoint& c2, CONST_BoxRegion& b1, CONST_BoxRegion& b2, BoxPoint& p1, BoxPoint& p2, CONST_GraphGC& gc):public:void,
		PROTECTED ABSTRACT _draw(Widget w, CONST_BoxRegion& exposed, CONST_GraphGC& gc):void,
		PROTECTED ABSTRACT drawLine(Widget w, CONST_BoxRegion& exposed, CONST_GraphGC& gc):void,
		PROTECTED ABSTRACT drawSelf(Widget w, CONST_BoxRegion& exposed, CONST_GraphGC& gc):void,
		PROTECTED ABSTRACT drawArrowHead(Widget w, CONST_BoxRegion& exposed, CONST_GraphGC& gc, CONST_BoxPoint& pos, double alpha):void,
		PROTECTED LineGraphEdge(CONST_LineGraphEdge &edge):LineGraphEdge,
		PRIVATE SHARED moveToSide(CONST_BoxRegion& b, int side, BoxPoint& p, CONST_BoxPoint& c):void,
		PRIVATE SHARED clipToSide(CONST_BoxRegion& b, int side, BoxPoint& p, CONST_BoxPoint& c):void,
		PRIVATE SHARED clipToCircle(CONST_BoxRegion& b, int side, BoxPoint& p, CONST_BoxPoint& c):void,
		PUBLIC LineGraphEdge(GraphNode* f, GraphNode* t):LineGraphEdge,
		PUBLIC ABSTRACT ~LineGraphEdge():LineGraphEdge,
		PUBLIC _print(ostream& os, CONST_GraphGC& gc):void,
		PUBLIC dup():GraphEdge*
		;



	GENERALIZATION GraphEdge
			SUBCLASSES LineGraphEdge
		;


	RELATION 
			ROLES
			CLASS	LineGraphEdge MULT UNDEFINED,
			CLASS	BoxPoint MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	LineGraphEdge MULT UNDEFINED,
			CLASS	GraphNode MULT UNDEFINED
		;

#=======================================================================
#File ../../code/ddd-3.0/ddd/GraphEdit.o.nu.cls	 Class Number = 2
#=======================================================================
#Process file  ../../code/ddd-3.0/ddd/GraphGC.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/GraphNode.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/HintGraphN.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/LineGraphE.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/ArcGraphE.o.nu.cls

CLASS ArcGraphEdge	#LOC 39


	ATTRIBUTES


	OPERATIONS
		PROTECTED ArcGraphEdge(CONST_ArcGraphEdge& edge):public:,
		PROTECTED drawLine(Widget w, CONST_BoxRegion& exposed, CONST_GraphGC& gc):void,
		PROTECTED SHARED center(CONST_BoxPoint& p1, CONST_BoxPoint& p2, CONST_BoxPoint& p3, double& x, double& y):bool,
		PUBLIC ArcGraphEdge(GraphNode* from, GraphNode* to):ArcGraphEdge,
		PUBLIC ABSTRACT ~ArcGraphEdge():ArcGraphEdge,
		PUBLIC _print(ostream& os, CONST_GraphGC& gc):void,
		PUBLIC dup():GraphEdge*
		;



	GENERALIZATION LineGraphEdge
			SUBCLASSES ArcGraphEdge
		;


	RELATION 
			ROLES
			CLASS	ArcGraphEdge MULT UNDEFINED,
			CLASS	GraphNode MULT UNDEFINED
		;

#=======================================================================
#File ../../code/ddd-3.0/ddd/ArcGraphE.o.nu.cls	 Class Number = 1
#=======================================================================
#Process file  ../../code/ddd-3.0/ddd/PosGraphN.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/RegionGN.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/ScrolledGE.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/args.o.nu.cls

CLASS ArgField	#LOC 41


	ATTRIBUTES
		PUBLIC  arg_text_field:Widget,
		PUBLIC  is_empty:bool

	OPERATIONS
		PUBLIC SHARED valueChangedCB(Widget w, XtPointer client_data, XtPointer call_data):void,
		PUBLIC SHARED losePrimaryCB(Widget w, XtPointer client_data, XtPointer call_data):void,
		PRIVATE ArgField(CONST_ArgField&):ArgField,
		PRIVATE operator_=(CONST_ArgField&):ArgField&,
		PUBLIC ArgField(Widget parent, CONST_char* name):ArgField,
		PUBLIC empty():bool,
		PUBLIC get_string():string,
		PUBLIC set_string(string s):void,
		PUBLIC text():Widget,
		PUBLIC top():Widget,
		PUBLIC addHandler(unsigned type, HandlerProc proc, void* client_data):void,
		PUBLIC removeHandler(unsigned type, HandlerProc proc, void* client_data):void,
		PUBLIC callHandlers():void
		;



	AGGREGATION NAME handlers CONTAINER CLASS ArgField::AssocRec MULT UNDEFINED
			PARTS
			CLASS	HandlerList MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	ArgField MULT UNDEFINED,
			CLASS	string MULT UNDEFINED
		;

CLASS Map	#LOC 199


	ATTRIBUTES
		PUBLIC  key:Key,
		PUBLIC  cont:Contents,
		PUBLIC  _length:int

	OPERATIONS
		PUBLIC search(Key k):ListNode*,
		PUBLIC Map():Map,
		PUBLIC clear():void,
		PUBLIC delete_all_contents():void,
		PUBLIC ~Map():Map,
		PUBLIC insert(Key k, Contents* c):int,
		PUBLIC del(Key k):void,
		PUBLIC get(Key k):Contents*,
		PUBLIC contains(Key k):int,
		PUBLIC first_key(MapRef& ref):Key,
		PUBLIC SHARED next_key(MapRef& ref):Key,
		PUBLIC first(MapRef& ref):Contents*,
		PUBLIC SHARED next(MapRef& ref):Contents*,
		PUBLIC length():inline int,
		PRIVATE Map(CONST_Map<Key_Contents>&):Map,
		PRIVATE operator_=(CONST_Map<Key_Contents>&):Map<Key, Contents>&
		;



	RELATION _next
			ROLES
			CLASS	Map MULT UNDEFINED,
			CLASS	ListNode MULT UNDEFINED
		;


	RELATION _first
			ROLES
			CLASS	Map MULT UNDEFINED,
			CLASS	ListNode MULT UNDEFINED
		;

CLASS BreakPoint	#LOC 138


	ATTRIBUTES
		PUBLIC  mynumber:int,
		PUBLIC  mytype:BPType,
		PUBLIC  mydispo:BPDispo,
		PUBLIC  myenabled:bool,
		PUBLIC  myline_nr:int,
		PUBLIC  myignore_count:int,
		PUBLIC  mycommands:StringArray,
		PUBLIC  mywatch_mode:WatchMode,
		PUBLIC  myenabled_changed:bool,
		PUBLIC  myfile_changed:bool,
		PUBLIC  myposition_changed:bool,
		PUBLIC  myaddress_changed:bool,
		PUBLIC  myselected:bool,
		PUBLIC  mysource_glyph:Widget,
		PUBLIC  mycode_glyph:Widget

	OPERATIONS
		PRIVATE BreakPoint(CONST_BreakPoint& b):BreakPoint,
		PRIVATE operator_=(CONST_BreakPoint&):BreakPoint&,
		PROTECTED SHARED false_value():string,
		PROTECTED SHARED and_op():string,
		PROTECTED SHARED is_false(CONST_string& cond):bool,
		PUBLIC BreakPoint(string& info_output, string arg , int number):BreakPoint,
		PUBLIC number_str():const string&,
		PUBLIC number():int,
		PUBLIC symbol():string,
		PUBLIC type():BPType,
		PUBLIC dispo():BPDispo,
		PUBLIC enabled():bool,
		PUBLIC file_name():const string&,
		PUBLIC line_nr():int,
		PUBLIC address():const string&,
		PUBLIC pos():string,
		PUBLIC expr():const string&,
		PUBLIC watch_mode():WatchMode,
		PUBLIC infos():const string&,
		PUBLIC ignore_count():int,
		PUBLIC real_condition():const string&,
		PUBLIC commands():const StringArray&,
		PUBLIC condition():string,
		PUBLIC arg():const string&,
		PUBLIC selected():bool&,
		PUBLIC source_glyph():Widget&,
		PUBLIC code_glyph():Widget&,
		PUBLIC enabled_changed():bool,
		PUBLIC file_changed():bool,
		PUBLIC position_changed():bool,
		PUBLIC address_changed():bool,
		PUBLIC update(string& info_output):bool,
		PUBLIC get_state(ostream& os, int num, bool as_dummy , string addr , string cond):bool,
		PUBLIC SHARED make_false(CONST_string& cond):string
		;



	AGGREGATION NAME mynumber_str CONTAINER CLASS BreakPoint::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME myfile_name CONTAINER CLASS BreakPoint::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME myaddress CONTAINER CLASS BreakPoint::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME myexpr CONTAINER CLASS BreakPoint::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME myinfos CONTAINER CLASS BreakPoint::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME mycondition CONTAINER CLASS BreakPoint::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME myarg CONTAINER CLASS BreakPoint::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	BreakPoint MULT UNDEFINED,
			CLASS	string MULT UNDEFINED
		;

CLASS SourceView	#LOC 829


	ATTRIBUTES
		PUBLIC SHARED  []:XtActionsRec  actions,
		PUBLIC SHARED  line_popup[]:MMDesc ,
		PUBLIC SHARED  address_popup[]:MMDesc ,
		PUBLIC SHARED  bp_popup[]:MMDesc ,
		PUBLIC SHARED  text_popup[]:MMDesc ,
		PUBLIC SHARED  bp_area[]:MMDesc ,
		PUBLIC SHARED  history:StringArray,
		PUBLIC SHARED  history_position:int,
		PUBLIC SHARED  source_history_locked:bool,
		PUBLIC SHARED  code_history_locked:bool,
		PUBLIC SHARED  checking_scroll:bool,
		PUBLIC SHARED  toplevel_w:Widget,
		PUBLIC SHARED  source_form_w:Widget,
		PUBLIC SHARED  source_text_w:Widget,
		PUBLIC SHARED  code_form_w:Widget,
		PUBLIC SHARED  code_text_w:Widget,
		PUBLIC SHARED  edit_breakpoints_dialog_w:Widget,
		PUBLIC SHARED  breakpoint_list_w:Widget,
		PUBLIC SHARED  stack_dialog_w:Widget,
		PUBLIC SHARED  frame_list_w:Widget,
		PUBLIC SHARED  up_w:Widget,
		PUBLIC SHARED  down_w:Widget,
		PUBLIC SHARED  stack_dialog_popped_up:bool,
		PUBLIC SHARED  register_dialog_w:Widget,
		PUBLIC SHARED  register_list_w:Widget,
		PUBLIC SHARED  int_registers_w:Widget,
		PUBLIC SHARED  all_registers_w:Widget,
		PUBLIC SHARED  register_dialog_popped_up:bool,
		PUBLIC SHARED  thread_dialog_w:Widget,
		PUBLIC SHARED  thread_list_w:Widget,
		PUBLIC SHARED  thread_dialog_popped_up:bool,
		PUBLIC SHARED  display_glyphs:bool,
		PUBLIC SHARED  display_line_numbers:bool,
		PUBLIC SHARED  disassemble:bool,
		PUBLIC SHARED  all_registers:bool,
		PUBLIC SHARED  at_lowest_frame:bool,
		PUBLIC SHARED  signal_received:bool,
		PUBLIC SHARED  selected_watch_mode:WatchMode,
		PUBLIC SHARED  tab_width:int,
		PUBLIC SHARED  bp_map:BreakPointMap,
		PUBLIC SHARED  line_count:int,
		PUBLIC SHARED  bps_in_line:IntIntArrayAssoc,
		PUBLIC SHARED  _pos_of_line:TextPositionArray,
		PUBLIC SHARED  bp_addresses:StringArray,
		PUBLIC SHARED  file_cache:StringStringAssoc,
		PUBLIC SHARED  origin_cache:StringOriginAssoc,
		PUBLIC SHARED  code_cache:CodeCache,
		PUBLIC SHARED  current_frame:int,
		PUBLIC SHARED  current_origin:SourceOrigin,
		PUBLIC SHARED  source_name_cache:StringStringAssoc,
		PUBLIC SHARED  file_name_cache:StringStringAssoc,
		PUBLIC SHARED  bad_files:StringArray,
		PUBLIC SHARED  last_top:XmTextPosition,
		PUBLIC SHARED  last_pos:XmTextPosition,
		PUBLIC SHARED  last_start_highlight:XmTextPosition,
		PUBLIC SHARED  last_end_highlight:XmTextPosition,
		PUBLIC SHARED  last_top_pc:XmTextPosition,
		PUBLIC SHARED  last_pos_pc:XmTextPosition,
		PUBLIC SHARED  last_start_highlight_pc:XmTextPosition,
		PUBLIC SHARED  last_end_highlight_pc:XmTextPosition,
		PUBLIC SHARED  last_execution_line:int,
		PUBLIC SHARED  last_frame_pos:int,
		PUBLIC SHARED  frame_pos_locked:bool,
		PUBLIC SHARED  current_drag_origin:Widget,
		PUBLIC SHARED  current_drag_breakpoint:int,
		PUBLIC SHARED  arrow_x_offset:int,
		PUBLIC SHARED  stop_x_offset:int,
		PUBLIC SHARED  multiple_stop_x_offset:int,
		PRIVATE SHARED  plain_arrows:Widget ,
		PRIVATE SHARED  grey_arrows:Widget ,
		PRIVATE SHARED  signal_arrows:Widget ,
		PRIVATE SHARED  drag_arrows:Widget ,
		PRIVATE SHARED  plain_stops:WidgetArray ,
		PRIVATE SHARED  grey_stops:WidgetArray ,
		PRIVATE SHARED  plain_conds:WidgetArray ,
		PRIVATE SHARED  grey_conds:WidgetArray ,
		PRIVATE SHARED  plain_temps:WidgetArray ,
		PRIVATE SHARED  grey_temps:WidgetArray ,
		PRIVATE SHARED  drag_stops:Widget ,
		PRIVATE SHARED  drag_conds:Widget ,
		PRIVATE SHARED  drag_temps:Widget ,
		PRIVATE SHARED  update_code_glyphs:bool,
		PRIVATE SHARED  update_source_glyphs:bool,
		PRIVATE SHARED  change_glyphs:bool,
		PRIVATE SHARED  changed_glyphs:WidgetArray,
		PRIVATE SHARED  max_breakpoint_number_seen:int,
		PUBLIC SHARED  cache_source_files:bool,
		PUBLIC SHARED  cache_machine_code:bool,
		PUBLIC SHARED  cache_glyph_images:bool,
		PUBLIC SHARED  max_popup_expr_length:int,
		PUBLIC SHARED  source_indent_amount:int,
		PUBLIC SHARED  code_indent_amount:int,
		PUBLIC SHARED  line_indent_amount:int,
		PUBLIC SHARED  lines_above_cursor:int,
		PUBLIC SHARED  lines_below_cursor:int,
		PUBLIC SHARED  max_breakpoint_number:int

	OPERATIONS
		PUBLIC SHARED add_to_history(CONST_string& file_name, int line):void,
		PUBLIC SHARED add_to_history(CONST_string& address):void,
		PUBLIC SHARED add_current_to_history():void,
		PUBLIC SHARED goto_entry(string entry):void,
		PUBLIC SHARED set_source_argCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED line_popup_setCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED line_popup_set_tempCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED line_popup_temp_n_contCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED line_popup_set_pcCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED bp_popup_infoCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED bp_popup_deleteCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED bp_popup_disableCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED bp_popup_set_pcCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED text_popup_printCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED text_popup_dispCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED text_popup_watchCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED text_popup_print_refCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED text_popup_disp_refCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED text_popup_watch_refCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED text_popup_whatisCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED text_popup_lookupCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED text_popup_breakCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED text_popup_clearCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED NewBreakpointDCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED NewBreakpointCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED NewWatchpointDCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED NewWatchpointCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED LookupBreakpointCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED PrintWatchpointCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED BreakpointCmdCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED EditBreakpointPropertiesCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED SetBreakpointIgnoreCountCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED SetBreakpointConditionCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED EnableBreakpointsCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED DisableBreakpointsCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED MakeBreakpointsTempCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED DeleteBreakpointsCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED RecordBreakpointCommandsCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED EndBreakpointCommandsCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED EditBreakpointCommandsCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED SetBreakpointIgnoreCountNowCB(XtPointer, XtIntervalId*):void,
		PUBLIC SHARED DeleteInfoCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED RefreshBreakpointsHP(Agent* , void* , void*):void,
		PUBLIC SHARED RecordingHP(Agent* , void* , void*):void,
		PUBLIC SHARED UpdateBreakpointButtonsCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED CheckScrollCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED CheckScrollWorkProc(XtPointer, XtIntervalId*):void,
		PUBLIC SHARED CheckModificationCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED StackDialogPoppedDownCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED CodeDialogPoppedDownCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED RegisterDialogPoppedDownCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED ThreadDialogPoppedDownCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED SelectFrameCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED SelectRegisterCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED SelectThreadCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED ThreadCommandCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED SetWatchModeCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED update_title():void,
		PUBLIC SHARED ActivateGlyphCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED line_height(Widget text_w):int,
		PUBLIC SHARED create_text(Widget parent, CONST_string& base, bool editable, Widget& form, Widget& text):void,
		PUBLIC SHARED refresh_bp_disp():void,
		PUBLIC SHARED refresh_source_bp_disp():void,
		PUBLIC SHARED refresh_code_bp_disp():void,
		PUBLIC SHARED clearBP(void* client_data, XtIntervalId* timer):void,
		PUBLIC SHARED clearJumpBP(CONST_string& answer, void* client_data):void,
		PUBLIC SHARED move_bp(int nr, CONST_string& address, Widget origin , bool copy):bool,
		PUBLIC SHARED copy_bp(int nr, CONST_string& address, Widget origin):bool,
		PUBLIC SHARED _set_bps_cond(IntArray& nrs, string cond, int make_false, Widget origin):void,
		PUBLIC SHARED set_bps_cond(IntArray& nrs, string cond, Widget origin):inlinevoid,
		PUBLIC SHARED set_bps_cond_enabled(IntArray& nrs, bool enabled, Widget origin):inlinevoid,
		PUBLIC SHARED enable_bps_cond(IntArray& nrs, Widget origin):inlinevoid,
		PUBLIC SHARED disable_bps_cond(IntArray& nrs, Widget origin):inlinevoid,
		PUBLIC SHARED get_line_of_pos(Widget w, XmTextPosition pos, int& line_nr, string& address, bool& in_text, int& bp_nr):bool,
		PUBLIC SHARED find_word_bounds(Widget w, CONST_XmTextPosition pos, XmTextPosition& startpos, XmTextPosition& endpos):void,
		PUBLIC SHARED srcpopupAct(Widget, XEvent* , String* , Cardinal*):void,
		PUBLIC SHARED startSelectWordAct(Widget, XEvent* , String* , Cardinal*):void,
		PUBLIC SHARED endSelectWordAct(Widget, XEvent* , String* , Cardinal*):void,
		PUBLIC SHARED updateGlyphsAct(Widget, XEvent* , String* , Cardinal*):void,
		PUBLIC SHARED dragGlyphAct(Widget, XEvent* , String* , Cardinal*):void,
		PUBLIC SHARED followGlyphAct(Widget, XEvent* , String* , Cardinal*):void,
		PUBLIC SHARED dropGlyphAct(Widget, XEvent* , String* , Cardinal*):void,
		PUBLIC SHARED deleteGlyphAct(Widget, XEvent* , String* , Cardinal*):void,
		PUBLIC SHARED doubleClickAct(Widget, XEvent* , String* , Cardinal*):void,
		PUBLIC SHARED setSelection(XtPointer client_data, XtIntervalId* timer):void,
		PUBLIC SHARED set_text_popup_label(int item, CONST_string& arg, bool sens):void,
		PUBLIC SHARED set_text_popup_resource(int item, CONST_string& arg):void,
		PUBLIC SHARED pos_of_line(int line):XmTextPosition,
		PUBLIC SHARED bp_matches(BreakPoint* bp, int line):bool,
		PUBLIC SHARED bp_matches(BreakPoint* bp, CONST_string& file, int line):bool,
		PUBLIC SHARED file_matches(CONST_string& file1, CONST_string& file2):bool,
		PUBLIC SHARED base_matches(CONST_string& file1, CONST_string& file2):bool,
		PUBLIC SHARED is_current_file(CONST_string& file):bool,
		PUBLIC SHARED current_source_name():string,
		PUBLIC SHARED new_bad_file(CONST_string& file_name):bool,
		PUBLIC SHARED post_file_error(CONST_string& file_name, string text, String name , Widget origin):void,
		PUBLIC SHARED post_file_warning(CONST_string& file_name, string text, String name , Widget origin):void,
		PUBLIC SHARED _show_execution_position(string file, int line, bool silent):void,
		PUBLIC SHARED read_local(CONST_string& file_name, long& length, bool silent):String,
		PUBLIC SHARED read_remote(CONST_string& file_name, long& length, bool silent):String,
		PUBLIC SHARED read_class(CONST_string& class_name, string& file_name, SourceOrigin& origin, long& length, bool silent):String,
		PUBLIC SHARED read_from_gdb(CONST_string& source_name, long& length, bool silent):String,
		PUBLIC SHARED read_indented(string& file_name, long& length, SourceOrigin& origin, bool silent):String,
		PUBLIC SHARED read_current(string& file_name, bool force_reload , bool silent):int,
		PUBLIC SHARED SetInsertionPosition(Widget w, XmTextPosition pos, bool fromTop):void,
		PUBLIC SHARED ShowPosition(Widget w, XmTextPosition pos, bool fromTop):void,
		PUBLIC SHARED is_source_widget(Widget w):bool,
		PUBLIC SHARED is_code_widget(Widget w):bool,
		PUBLIC SHARED current_text(Widget w):string&,
		PUBLIC SHARED indent_amount(Widget w, int pos):int,
		PUBLIC SHARED setup_where_line(string& line):void,
		PUBLIC SHARED find_pc(CONST_string& pc):XmTextPosition,
		PUBLIC SHARED refresh_codeOQC(CONST_string& answer, void* data):void,
		PUBLIC SHARED set_code(CONST_string& code, CONST_string& start, CONST_string& end):void,
		PUBLIC SHARED help_on_bp(int bp, bool detailed):MString,
		PUBLIC SHARED normalize_address(string& address):void,
		PUBLIC SHARED make_address(long address):string,
		PUBLIC SHARED get_func_at(CONST_string& address, string& func, int& offset):void,
		PUBLIC SHARED function_is_larger_than(string pc, int max_size):bool,
		PUBLIC SHARED update_properties_panel(BreakpointPropertiesInfo *info):void,
		PUBLIC SHARED update_properties_panels():void,
		PUBLIC SHARED move_breakpoint_properties(int old_bp, int new_bp):void,
		PUBLIC SHARED copy_breakpoint_properties(int old_bp, int new_bp):void,
		PUBLIC SHARED pixmap(Widget w, uchar* bits, int width, int height):Pixmap,
		PUBLIC SHARED create_glyph(Widget form_w, String name, uchar* bits, int width, int height):Widget,
		PUBLIC SHARED map_glyph(Widget& w, Position x, Position y):void,
		PUBLIC SHARED unmap_glyph(Widget w):void,
		PUBLIC SHARED log_glyph(Widget w, int n):void,
		PUBLIC SHARED log_glyphs():void,
		PUBLIC SHARED glyph_position(Widget w, XEvent* e, bool normalize):XmTextPosition,
		PUBLIC SHARED translate_glyph_pos(Widget glyph, Widget text, int& x, int& y):void,
		PRIVATE SHARED map_stop_at(Widget w, XmTextPosition pos, WidgetArray& stops, int& count, TextPositionArray& positions):Widget,
		PRIVATE SHARED map_arrow_at(Widget w, XmTextPosition pos):Widget,
		PRIVATE SHARED map_drag_arrow_at(Widget w, XmTextPosition pos, Widget origin):Widget,
		PRIVATE SHARED unmap_drag_arrow(Widget w):inline void,
		PRIVATE SHARED map_drag_stop_at(Widget w, XmTextPosition pos, Widget origin):Widget,
		PRIVATE SHARED unmap_drag_stop(Widget w):inline void,
		PRIVATE SHARED copy_colors(Widget w, Widget origin):void,
		PRIVATE SHARED UpdateGlyphsWorkProc(XtPointer, XtIntervalId*):void,
		PRIVATE SHARED CreateGlyphsWorkProc(XtPointer):Boolean,
		PRIVATE SHARED update_glyphs_now():void,
		PRIVATE SHARED glyphs_to_be_updated():const WidgetArray&,
		PRIVATE SHARED reset_done(CONST_string& answer, void* data):void,
		PRIVATE SHARED jdb_breakpoint(CONST_string& bp_info):int,
		PUBLIC SourceView(Widget parent):SourceView,
		PUBLIC create_shells():void,
		PUBLIC SHARED show_execution_position(string position , bool stopped , bool signaled , bool silent):void,
		PUBLIC SHARED clear_execution_position():void,
		PUBLIC SHARED show_position(string position, bool silent):void,
		PUBLIC SHARED show_pc(CONST_string& pc, XmHighlightMode mode , bool stopped , bool signaled):void,
		PUBLIC SHARED process_info_bp(string& info_output, CONST_string& break_arg):void,
		PUBLIC SHARED process_info_line_main(string& info_output):void,
		PUBLIC SHARED process_where(string& where_output):void,
		PUBLIC SHARED process_frame(string& frame_output):void,
		PUBLIC SHARED process_registers(string& info_register_output):void,
		PUBLIC SHARED process_threads(string& info_threads_output):void,
		PUBLIC SHARED process_breakpoints(string& info_breakpoints_output):void,
		PUBLIC SHARED process_disassemble(CONST_string& disassemble_output):void,
		PUBLIC SHARED process_pwd(string& pwd_output):void,
		PUBLIC SHARED process_use(string& use_output):void,
		PUBLIC SHARED check_remainder(string& info_output):void,
		PUBLIC SHARED set_frame_pos(int arg, int pos):void,
		PUBLIC SHARED set_frame_func(CONST_string& func):bool,
		PUBLIC SHARED find(CONST_string& s, SearchDirection direction , bool words_only , bool case_sensitive , Time time):void,
		PUBLIC SHARED lookup(string s, bool silent):void,
		PUBLIC SHARED read_file(string file_name, int initial_line , bool force_reload , bool silent):void,
		PUBLIC SHARED reload():void,
		PUBLIC SHARED go_back():void,
		PUBLIC SHARED go_forward():void,
		PUBLIC SHARED line_of_cursor():string,
		PUBLIC SHARED file_of_cursor():string,
		PUBLIC SHARED EditBreakpointsCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED ViewStackFramesCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED ViewRegistersCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED ViewThreadsCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED refresh_stack_frames():void,
		PUBLIC SHARED refresh_registers():void,
		PUBLIC SHARED refresh_threads(bool all_threadgroups):void,
		PUBLIC SHARED refresh_registers_command():string,
		PUBLIC SHARED where_required():bool,
		PUBLIC SHARED register_required():bool,
		PUBLIC SHARED thread_required():bool,
		PUBLIC SHARED set_display_glyphs(bool value):void,
		PUBLIC SHARED set_display_line_numbers(bool value):void,
		PUBLIC SHARED set_disassemble(bool value):void,
		PUBLIC SHARED set_all_registers(bool value):void,
		PUBLIC SHARED set_tab_width(int width):void,
		PUBLIC SHARED set_indent(int source_indent, int code_indent):void,
		PUBLIC SHARED set_max_glyphs(int max_glyphs):void,
		PUBLIC SHARED next_breakpoint_number():int,
		PUBLIC SHARED set_bp(CONST_string& a, bool set, bool temp, CONST_string& cond , Widget origin):void,
		PUBLIC SHARED create_bp(CONST_string& a, Widget origin):void,
		PUBLIC SHARED create_temp_bp(CONST_string& a, Widget origin):void,
		PUBLIC SHARED clear_bp(CONST_string& a, Widget origin):void,
		PUBLIC SHARED temp_n_cont(CONST_string& a, Widget origin):void,
		PUBLIC SHARED enable_bps(IntArray& nrs, Widget origin):void,
		PUBLIC SHARED disable_bps(IntArray& nrs, Widget origin):void,
		PUBLIC SHARED delete_bps(IntArray& nrs, Widget origin):void,
		PUBLIC SHARED edit_bps(IntArray& nrs, Widget origin):void,
		PUBLIC SHARED enable_bp(int nr, Widget origin):inlinevoid,
		PUBLIC SHARED disable_bp(int nr, Widget origin):inlinevoid,
		PUBLIC SHARED delete_bp(int nr, Widget origin):inlinevoid,
		PUBLIC SHARED edit_bp(int nr, Widget origin):inlinevoid,
		PUBLIC SHARED set_bp_commands(IntArray& nrs, CONST_StringArray& commands, Widget origin):void,
		PUBLIC SHARED set_bp_commands(int nr, CONST_StringArray& commands, Widget origin):inlinevoid,
		PUBLIC SHARED numbers(CONST_IntArray& nrs):string,
		PUBLIC SHARED all_numbers(CONST_IntArray& nrs):string,
		PUBLIC SHARED all_bps(CONST_IntArray& nrs):bool,
		PUBLIC SHARED move_pc(CONST_string& address, Widget origin):bool,
		PUBLIC SHARED clear_command(string arg, bool clear_next , int first_bp):string,
		PUBLIC SHARED delete_command(int bp_nr):string,
		PUBLIC SHARED command_list(string cmd):string,
		PUBLIC SHARED pwd():string,
		PUBLIC SHARED class_path():string,
		PUBLIC SHARED source():Widget,
		PUBLIC SHARED code():Widget,
		PUBLIC SHARED source_form():Widget,
		PUBLIC SHARED code_form():Widget,
		PUBLIC SHARED clear_file_cache():void,
		PUBLIC SHARED clear_code_cache():void,
		PUBLIC SHARED clear_history():void,
		PUBLIC SHARED get_line(string position):string,
		PUBLIC SHARED help_on_glyph(Widget glyph, bool detailed):MString,
		PUBLIC SHARED help_on_pos(Widget w, XmTextPosition pos, XmTextPosition& ref, bool detailed):MString,
		PUBLIC SHARED bp_pos(int num):string,
		PUBLIC SHARED breakpoint_at(string pos):BreakPoint*,
		PUBLIC SHARED watchpoint_at(string expr):BreakPoint*,
		PUBLIC SHARED get_word_at_event(Widget w, XEvent* event, XmTextPosition& first_pos, XmTextPosition& last_pos):string,
		PUBLIC SHARED get_word_at_pos(Widget w, XmTextPosition pos, XmTextPosition& startpos, XmTextPosition& endpos):string,
		PUBLIC SHARED have_source():bool,
		PUBLIC SHARED have_exec_pos():bool,
		PUBLIC SHARED have_pc():bool,
		PUBLIC SHARED have_selection():bool,
		PUBLIC SHARED need_pc():bool,
		PUBLIC SHARED get_frame():int,
		PUBLIC SHARED get_state(ostream& os):bool,
		PUBLIC SHARED reset():void,
		PUBLIC SHARED full_path(string file):string,
		PUBLIC SHARED basename(CONST_char *):const char*,
		PUBLIC SHARED edit_breakpoint_properties(int bp_nr):void,
		PUBLIC SHARED update_glyphs(Widget w):void
		;



	AGGREGATION NAME current_file_name CONTAINER CLASS SourceView::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME current_source CONTAINER CLASS SourceView::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME current_code CONTAINER CLASS SourceView::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME current_code_start CONTAINER CLASS SourceView::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME current_code_end CONTAINER CLASS SourceView::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME current_pwd CONTAINER CLASS SourceView::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME current_class_path CONTAINER CLASS SourceView::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME current_threadgroup CONTAINER CLASS SourceView::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME last_execution_file CONTAINER CLASS SourceView::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME last_execution_pc CONTAINER CLASS SourceView::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME last_shown_pc CONTAINER CLASS SourceView::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	SourceView MULT UNDEFINED,
			CLASS	string MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	SourceView MULT UNDEFINED,
			CLASS	Agent MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	SourceView MULT UNDEFINED,
			CLASS	BreakPoint MULT UNDEFINED
		;

#==================================================================
#File ../../code/ddd-3.0/ddd/args.o.nu.cls	 Class Number = 4
#==================================================================
#Process file  ../../code/ddd-3.0/ddd/buttons.o.nu.cls

CLASS DispValue	#LOC 136


	ATTRIBUTES
		PUBLIC  mytype:DispValueType,
		PUBLIC  mydepth:int,
		PUBLIC  myexpanded:bool,
		PUBLIC  changed:bool,
		PUBLIC  myrepeats:int,
		PUBLIC  v:int,
		PUBLIC SHARED  type_cache:StringStringAssoc,
		PUBLIC SHARED  expand_repeated_values:bool

	OPERATIONS
		PUBLIC init(string& value, DispValueType type):void,
		PUBLIC clear():void,
		PUBLIC operator_=(CONST_DispValue&):DispValue&,
		PUBLIC SHARED index_base(CONST_string& expr, int dim):int,
		PUBLIC SHARED add_member_name(CONST_string& base, CONST_string& member_name):string,
		PROTECTED _expand():void,
		PROTECTED _collapse():void,
		PUBLIC DispValue(DispValue* parent, int depth, string& value, CONST_string& full_name, CONST_string& print_name, DispValueType type):DispValue,
		PUBLIC DispValue(CONST_DispValue& dv):DispValue,
		PUBLIC ~DispValue():DispValue,
		PUBLIC dup():DispValue*,
		PUBLIC type():DispValueType,
		PUBLIC parent():DispValue*,
		PUBLIC depth():int,
		PUBLIC repeats():int,
		PUBLIC full_name():const string&,
		PUBLIC name():const string&,
		PUBLIC addr():const string&,
		PUBLIC parent():DispValue*&,
		PUBLIC depth():int&,
		PUBLIC repeats():int&,
		PUBLIC full_name():string&,
		PUBLIC name():string&,
		PUBLIC is_changed():bool,
		PUBLIC expanded():bool,
		PUBLIC collapsed():bool,
		PUBLIC value():string,
		PUBLIC dereferenced():bool,
		PUBLIC dereferenced_name():string,
		PUBLIC nchildren():int,
		PUBLIC get_child(int i):DispValue*,
		PUBLIC vertical_aligned():bool,
		PUBLIC horizontal_aligned():bool,
		PUBLIC dereference():void,
		PUBLIC collapseAll(int depth):void,
		PUBLIC expandAll(int depth):void,
		PUBLIC collapse():void,
		PUBLIC expand():void,
		PUBLIC expandedAll():int,
		PUBLIC collapsedAll():int,
		PUBLIC height():int,
		PUBLIC heightExpanded():int,
		PUBLIC align_vertical():void,
		PUBLIC align_horizontal():void,
		PUBLIC update(string& value, bool& changed, bool& inited, DispValueType type):void,
		PUBLIC new_BaseClass_name(string name):bool,
		PUBLIC SHARED (*background)():bool,
		PUBLIC SHARED clear_type_cache():void
		;



	RELATION myparent
			ROLES
			CLASS	DispValue MULT UNDEFINED,
			CLASS	DispValue MULT UNDEFINED
		;


	AGGREGATION NAME myfull_name CONTAINER CLASS DispValue::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME print_name CONTAINER CLASS DispValue::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME myaddr CONTAINER CLASS DispValue::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	DispValue MULT UNDEFINED,
			CLASS	string MULT UNDEFINED
		;

CLASS DispBox	#LOC 69


	ATTRIBUTES
		PUBLIC SHARED  max_display_title_length:int,
		PUBLIC SHARED  align_2d_arrays:bool,
		PUBLIC SHARED  vsllib_initialized:bool

	OPERATIONS
		PRIVATE DispBox(CONST_DispBox&):DispBox,
		PRIVATE operator_=(CONST_DispBox&):DispBox&,
		PUBLIC SHARED init_vsllib(void()):void,
		PUBLIC DispBox(int disp_nr, CONST_string& name, CONST_DispValue* dv):DispBox,
		PUBLIC ~DispBox():DispBox,
		PUBLIC box():Box*,
		PUBLIC set_value(CONST_DispValue* dv):void,
		PRIVATE create_value_box(CONST_DispValue* dv, int member_name_width):Box*,
		PRIVATE SHARED vsllib():VSLLib*,
		PROTECTED SHARED dup(CONST_string& func_name, CONST_Box* box):Box*,
		PROTECTED SHARED eval(CONST_string& func_name, ListBox* arg):Box*,
		PROTECTED SHARED eval(CONST_string& func_name, VSLArg args[]):Box*,
		PROTECTED SHARED eval(CONST_string& func_name, VSLArg arg1 , VSLArg arg2 , VSLArg arg3):Box*
		;



	RELATION mybox
			ROLES
			CLASS	DispBox MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;


	RELATION title_box
			ROLES
			CLASS	DispBox MULT UNDEFINED,
			CLASS	Box MULT UNDEFINED
		;


	AGGREGATION NAME vsllib_name CONTAINER CLASS DispBox::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME vsllib_path CONTAINER CLASS DispBox::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME vsllib_defs CONTAINER CLASS DispBox::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME vsllib_base_defs CONTAINER CLASS DispBox::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME dummylib CONTAINER CLASS DispBox::AssocRec MULT UNDEFINED
			PARTS
			CLASS	VSLLib MULT UNDEFINED
		;


	RELATION vsllib_ptr
			ROLES
			CLASS	DispBox MULT UNDEFINED,
			CLASS	VSLLib MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	DispBox MULT UNDEFINED,
			CLASS	ListBox MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	DispBox MULT UNDEFINED,
			CLASS	VSLArg MULT UNDEFINED
		;

CLASS DispNode	#LOC 118


	ATTRIBUTES
		PRIVATE  mydisp_nr:int,
		PRIVATE  myenabled:bool,
		PRIVATE  myactive:bool,
		PRIVATE  saved_node_hidden:bool,
		PRIVATE  mydeferred:bool,
		PRIVATE  mylast_change:int,
		PRIVATE SHARED  change_tics:int,
		PUBLIC  alias_of:int

	OPERATIONS
		PROTECTED findTagBox(CONST_Box* box, DispValue* dv):staticTagBox*,
		PRIVATE DispNode(CONST_DispNode&):DispNode,
		PRIVATE operator_=(CONST_DispNode&):DispNode&,
		PUBLIC DispNode(int disp_nr, CONST_string& name, CONST_string& scope , CONST_string& value):DispNode,
		PUBLIC ~DispNode():DispNode,
		PUBLIC disp_nr():int,
		PUBLIC name():const string&,
		PUBLIC addr():const string&,
		PUBLIC scope():const string&,
		PUBLIC depends_on():const string&,
		PUBLIC depends_on():string&,
		PUBLIC enabled():bool,
		PUBLIC disabled():bool,
		PUBLIC active():bool,
		PUBLIC deferred():bool,
		PUBLIC deferred():bool&,
		PUBLIC last_change():int,
		PUBLIC is_user_command():bool,
		PUBLIC user_command():string,
		PUBLIC alias_ok():bool,
		PUBLIC nodeptr():BoxGraphNode*,
		PUBLIC box():const Box*,
		PUBLIC value():DispValue*,
		PUBLIC selected_value():DispValue*,
		PUBLIC selected():bool&,
		PUBLIC moveTo(CONST_BoxPoint& newPos):void,
		PUBLIC SHARED addHandler(unsigned type, HandlerProc proc, void* client_data):void,
		PUBLIC SHARED removeHandler(unsigned type, HandlerProc proc, void* client_data):void,
		PUBLIC update(string& new_value):bool,
		PUBLIC set_addr(CONST_string& new_addr):void,
		PUBLIC refresh():void,
		PUBLIC select(DispValue *dv):void,
		PUBLIC disable():void,
		PUBLIC enable():void,
		PUBLIC make_active():void,
		PUBLIC make_inactive():void
		;



	AGGREGATION NAME myname CONTAINER CLASS DispNode::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME myaddr CONTAINER CLASS DispNode::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME myscope CONTAINER CLASS DispNode::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME mydepends_on CONTAINER CLASS DispNode::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	RELATION mynodeptr
			ROLES
			CLASS	DispNode MULT UNDEFINED,
			CLASS	BoxGraphNode MULT UNDEFINED
		;


	RELATION disp_value
			ROLES
			CLASS	DispNode MULT UNDEFINED,
			CLASS	DispValue MULT UNDEFINED
		;


	RELATION myselected_value
			ROLES
			CLASS	DispNode MULT UNDEFINED,
			CLASS	DispValue MULT UNDEFINED
		;


	RELATION disp_box
			ROLES
			CLASS	DispNode MULT UNDEFINED,
			CLASS	DispBox MULT UNDEFINED
		;


	AGGREGATION NAME handlers CONTAINER CLASS DispNode::AssocRec MULT UNDEFINED
			PARTS
			CLASS	HandlerList MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	DispNode MULT UNDEFINED,
			CLASS	DispValue MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	DispNode MULT UNDEFINED,
			CLASS	string MULT UNDEFINED
		;

CLASS DataDisp	#LOC 456


	ATTRIBUTES
		PUBLIC SHARED  refresh_args_timer:XtIntervalId,
		PUBLIC SHARED  refresh_graph_edit_timer:XtIntervalId,
		PUBLIC SHARED  refresh_addr_timer:XtIntervalId,
		PUBLIC SHARED  lose_selection:bool,
		PUBLIC SHARED  []:XtActionsRec  actions,
		PUBLIC SHARED  graph_popup[]:MMDesc ,
		PUBLIC SHARED  node_popup[]:MMDesc ,
		PUBLIC SHARED  shortcut_popup1[]:MMDesc ,
		PUBLIC SHARED  shortcut_popup2[]:MMDesc ,
		PUBLIC SHARED  display_area[]:MMDesc ,
		PUBLIC SHARED  detail_menu[]:MMDesc ,
		PUBLIC SHARED  shortcut_menu[]:MMDesc ,
		PUBLIC SHARED  rotate_menu[]:MMDesc ,
		PUBLIC SHARED  shortcut_items:const int,
		PUBLIC SHARED  shortcut_exprs:StringArray,
		PUBLIC SHARED  shortcut_labels:StringArray,
		PUBLIC SHARED  graph_cmd_area[]:MMDesc ,
		PRIVATE SHARED  last_origin:Widget,
		PRIVATE SHARED  last_select_time:Time,
		PRIVATE SHARED  next_ddd_display_number:int,
		PRIVATE SHARED  next_gdb_display_number:int,
		PRIVATE SHARED  detect_aliases:bool,
		PRIVATE SHARED  arg_needs_update:bool,
		PRIVATE SHARED  graph_popup_w:Widget,
		PRIVATE SHARED  node_popup_w:Widget,
		PRIVATE SHARED  shortcut_popup_w:Widget,
		PRIVATE SHARED  edit_displays_dialog_w:Widget,
		PRIVATE SHARED  display_list_w:Widget,
		PRIVATE SHARED  force_check_aliases:bool,
		PRIVATE SHARED  graph_form_w:Widget,
		PUBLIC SHARED  graph_edit:Widget,
		PUBLIC SHARED  graph_cmd_w:Widget,
		PUBLIC SHARED  graph_selection_w:Widget,
		PUBLIC SHARED  bump_displays:bool,
		PUBLIC SHARED  max_display_number:int

	OPERATIONS
		PUBLIC SHARED dispCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED dereferenceCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED dereferenceArgCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED toggleDetailCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED toggleRotateCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED toggleDisableCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED rotateCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED rotateAllCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED newCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED enableCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED disableCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED showDetailCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED showMoreDetailCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED hideDetailCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED dependentCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED displayArgCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED setCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED shortcutCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED deleteArgCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED popup_new_argCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED popup_newCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED new_displayDCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED setDCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED UpdateGraphEditorSelectionCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED UpdateDisplayEditorSelectionCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED PreLayoutCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED PostLayoutCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED DoubleClickCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED bump(RegionGraphNode* node, CONST_BoxSize& newSize):bool,
		PUBLIC SHARED RefreshGraphEditCB(XtPointer client_data, XtIntervalId* id):void,
		PUBLIC SHARED RefreshArgsCB(XtPointer client_data, XtIntervalId* id):void,
		PUBLIC SHARED RefreshAddrCB(XtPointer client_data, XtIntervalId* id):void,
		PUBLIC SHARED CompareNodesCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED new_displayCD(Widget w, BoxPoint box_point):void,
		PUBLIC SHARED no_displaysHP(void* , void* , void*):void,
		PUBLIC SHARED set_args(BoxPoint p , SelectionMode mode):void,
		PUBLIC SHARED refresh_display_list(bool silent):void,
		PUBLIC SHARED selected_value():DispValue*,
		PUBLIC SHARED selected_node():DispNode*,
		PUBLIC SHARED open_data_window():void,
		PUBLIC SHARED close_data_window():void,
		PUBLIC SHARED new_data_node(CONST_string& name, CONST_string& scope, CONST_string& answer):DispNode*,
		PUBLIC SHARED new_user_node(CONST_string& name, CONST_string& scope, CONST_string& answer):DispNode*,
		PUBLIC SHARED new_deferred_node(CONST_string& expr, CONST_string& scope, CONST_BoxPoint& pos, CONST_string& depends_on):DispNode*,
		PUBLIC SHARED getDispNrAtPoint(BoxPoint point):int,
		PUBLIC SHARED numbers(IntArray& a):string,
		PUBLIC SHARED all_display_numbers(IntArray& numbers):bool,
		PUBLIC SHARED show(Widget dialog, int depth, int more):void,
		PUBLIC SHARED create_display_dialog(Widget parent, String name, NewDisplayInfo& info):Widget,
		PUBLIC SHARED toggle_rotate(DispValue* dv, bool all):void,
		PUBLIC SHARED graph_selectAct(Widget, XEvent* , String* , Cardinal*):void,
		PUBLIC SHARED graph_select_or_moveAct(Widget, XEvent* , String* , Cardinal*):void,
		PUBLIC SHARED graph_extendAct(Widget, XEvent* , String* , Cardinal*):void,
		PUBLIC SHARED graph_extend_or_moveAct(Widget, XEvent* , String* , Cardinal*):void,
		PUBLIC SHARED graph_toggleAct(Widget, XEvent* , String* , Cardinal*):void,
		PUBLIC SHARED graph_toggle_or_moveAct(Widget, XEvent* , String* , Cardinal*):void,
		PUBLIC SHARED graph_popupAct(Widget, XEvent* , String* , Cardinal*):void,
		PUBLIC SHARED graph_dereferenceAct(Widget, XEvent* , String* , Cardinal*):void,
		PUBLIC SHARED graph_detailAct(Widget, XEvent* , String* , Cardinal*):void,
		PUBLIC SHARED graph_rotateAct(Widget, XEvent* , String* , Cardinal*):void,
		PUBLIC SHARED graph_dependentAct(Widget, XEvent* , String* , Cardinal*):void,
		PUBLIC SHARED call_selection_proc(Widget, String, XEvent* , String* , Cardinal, SelectionMode mode):void,
		PUBLIC SHARED add_shortcut_expr(CONST_string& expr):void,
		PUBLIC SHARED new_displaySQ(string display_expression, string scope, BoxPoint* pos , string depends_on , DeferMode deferred , Widget origin , bool verbose , bool prompt):void,
		PUBLIC SHARED refresh_displaySQ(Widget origin , bool verbose , bool prompt):void,
		PUBLIC SHARED disable_displaySQ(IntArray& display_nrs, bool verbose , bool prompt):void,
		PUBLIC SHARED enable_displaySQ(IntArray& display_nrs, bool verbose , bool prompt):void,
		PUBLIC SHARED delete_displaySQ(IntArray& display_nrs, bool verbose , bool prompt):void,
		PUBLIC SHARED new_display_cmd(string display_expression, BoxPoint* pos , string depends_on):string,
		PUBLIC SHARED refresh_display_cmd():string,
		PUBLIC SHARED disable_display_cmd(IntArray& display_nrs):string,
		PUBLIC SHARED enable_display_cmd(IntArray& display_nrs):string,
		PUBLIC SHARED delete_display_cmd(IntArray& display_nrs):string,
		PUBLIC SHARED delete_display_cmd(CONST_string& name):string,
		PUBLIC SHARED new_display(string display_expression, BoxPoint* pos , string depends_on , Widget origin):void,
		PUBLIC SHARED refresh_display(Widget origin):void,
		PUBLIC SHARED disable_display(IntArray& display_nrs, Widget origin):void,
		PUBLIC SHARED enable_display(IntArray& display_nrs, Widget origin):void,
		PUBLIC SHARED delete_display(IntArray& display_nrs, Widget origin):void,
		PUBLIC SHARED delete_display(CONST_string& name, Widget origin):void,
		PUBLIC SHARED process_info_display(string& info_display_answer, bool defer_deleted):void,
		PUBLIC SHARED process_displays(string& display_answer, bool& disabling_occurred):string,
		PUBLIC SHARED process_user(StringArray& answers):void,
		PUBLIC SHARED process_addr(StringArray& answers):void,
		PUBLIC SHARED process_scope(CONST_string& scope):void,
		PUBLIC SHARED need_scope():bool,
		PUBLIC SHARED set_shortcut_menu(CONST_StringArray& exprs, CONST_StringArray& labels):void,
		PUBLIC SHARED get_shortcut_menu(StringArray& exprs, StringArray& labels):void,
		PUBLIC SHARED refresh_args(bool update_arg):void,
		PRIVATE SHARED again_new_displaySQ(XtPointer client_data, XtIntervalId* id):void,
		PRIVATE SHARED new_data_displayOQC(CONST_string& answer, void* data):void,
		PRIVATE SHARED new_data_display_extraOQC(CONST_string& answer, void* data):void,
		PRIVATE SHARED new_data_displaysSQA(string display_expression, void* data):void,
		PRIVATE SHARED new_data_displaysOQAC(CONST_StringArray& answers, CONST_VoidArray& qu_datas, void* data):void,
		PRIVATE SHARED new_user_displayOQC(CONST_string& answer, void* data):void,
		PRIVATE SHARED refresh_displayOQC(CONST_string& answer, void* data):void,
		PRIVATE SHARED refresh_displayOQAC(CONST_StringArray& answers, CONST_VoidArray& qu_datas, void* data):void,
		PRIVATE SHARED disable_displayOQC(CONST_string& answer, void* data):void,
		PRIVATE SHARED enable_displayOQC(CONST_string& answer, void* data):void,
		PRIVATE SHARED delete_displayOQC(CONST_string& answer, void* data):void,
		PRIVATE SHARED deletion_done(IntArray& display_nrs, bool do_prompt):void,
		PRIVATE SHARED add_aliases(IntArray& a):void,
		PRIVATE SHARED sort_and_check(IntArray& a):bool,
		PRIVATE SHARED select_with_all_descendants(GraphNode *node):void,
		PRIVATE SHARED select_with_all_ancestors(GraphNode *node):void,
		PRIVATE SHARED read_number_and_name(string& answer, string& nr, string& name):void,
		PRIVATE SHARED ClearOriginCB(Widget, XtPointer, XtPointer):void,
		PRIVATE SHARED set_last_origin(Widget origin):void,
		PRIVATE SHARED check_aliases():bool,
		PRIVATE SHARED sort_last_change(IntArray& disp_nrs):void,
		PRIVATE SHARED last_change_of_disp_nr(int disp_nr):int,
		PRIVATE SHARED merge_displays(IntArray displays, bool& changed, bool& suppressed):void,
		PRIVATE SHARED unmerge_display(int disp_nr):bool,
		PRIVATE SHARED alias_display_nr(GraphNode *node):int,
		PRIVATE SHARED write_frame_command(ostream& os, int& current_frame, int target_frame):void,
		PRIVATE SHARED write_restore_scope_command(ostream& os, int& current_frame, CONST_StringArray& scopes, DispNode* dn, bool& ok):void,
		PRIVATE SHARED get_state(ostream& os, bool restore_state, bool include_position, CONST_StringArray& scopes, int target_frame):bool,
		PRIVATE SHARED reset_done(CONST_string& answer, void* data):void,
		PUBLIC DataDisp(Widget parent):DataDisp,
		PUBLIC create_shells():void,
		PUBLIC SHARED count_data_displays():int,
		PUBLIC SHARED get_all_display_numbers(IntArray& numbers):void,
		PUBLIC SHARED refresh_graph_edit(bool silent):void,
		PUBLIC SHARED graph_form():Widget,
		PUBLIC SHARED refresh_addr(DispNode *node):void,
		PUBLIC SHARED add_refresh_data_commands(StringArray& cmds):int,
		PUBLIC SHARED add_refresh_user_commands(StringArray& cmds):int,
		PUBLIC SHARED add_refresh_addr_commands(StringArray& cmds, DispNode* dn):int,
		PUBLIC SHARED EditDisplaysCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED refreshCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED selectAllCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED unselectAllCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED deleteCB(Widget, XtPointer, XtPointer):void,
		PUBLIC SHARED have_user_display(CONST_string& name):bool,
		PUBLIC SHARED new_user_display(CONST_string& name):void,
		PUBLIC SHARED delete_user_display(CONST_string& name):void,
		PUBLIC SHARED language_changedHP(Agent* source, void* client_data, void* call_data):void,
		PUBLIC SHARED set_detect_aliases(bool value):void,
		PUBLIC SHARED have_selection():bool,
		PUBLIC SHARED get_selection(ostream& os, bool include_position):bool,
		PUBLIC SHARED get_state(ostream& os, CONST_StringArray& scopes, int target_frame):bool,
		PUBLIC SHARED get_scopes(StringArray& scopes):bool,
		PUBLIC SHARED need_core_to_restore():bool,
		PUBLIC SHARED shortcut_help(Widget w):MString,
		PUBLIC SHARED reset():void,
		PUBLIC SHARED SelectionLostCB(Widget , XtPointer , XtPointer):void,
		PUBLIC SHARED display_number(CONST_string& name, bool verbose):int
		;



	RELATION disp_graph
			ROLES
			CLASS	DataDisp MULT UNDEFINED,
			CLASS	DispGraph MULT UNDEFINED
		;


	RELATION delay
			ROLES
			CLASS	DataDisp MULT UNDEFINED,
			CLASS	Delay MULT UNDEFINED
		;


	RELATION graph_arg
			ROLES
			CLASS	DataDisp MULT UNDEFINED,
			CLASS	ArgField MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	DataDisp MULT UNDEFINED,
			CLASS	RegionGraphNode MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	DataDisp MULT UNDEFINED,
			CLASS	BoxPoint MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	DataDisp MULT UNDEFINED,
			CLASS	NewDisplayInfo MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	DataDisp MULT UNDEFINED,
			CLASS	DispValue MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	DataDisp MULT UNDEFINED,
			CLASS	string MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	DataDisp MULT UNDEFINED,
			CLASS	GraphNode MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	DataDisp MULT UNDEFINED,
			CLASS	DispNode MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	DataDisp MULT UNDEFINED,
			CLASS	Agent MULT UNDEFINED
		;

CLASS _StatusMsg	#LOC 19


	ATTRIBUTES


	OPERATIONS
		PUBLIC _StatusMsg(CONST_string& c):_StatusMsg,
		PUBLIC ABSTRACT ~_StatusMsg():_StatusMsg
		;



	AGGREGATION NAME cause CONTAINER CLASS _StatusMsg::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME outcome CONTAINER CLASS _StatusMsg::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;

CLASS StatusMsg	#LOC 13


	ATTRIBUTES


	OPERATIONS
		PUBLIC StatusMsg(CONST_string& c):StatusMsg,
		PUBLIC ABSTRACT ~StatusMsg():StatusMsg
		;



	GENERALIZATION _StatusMsg
			SUBCLASSES StatusMsg
		;

CLASS StatusDelay	#LOC 7


	ATTRIBUTES


	OPERATIONS
		PUBLIC StatusDelay(CONST_string& c):StatusDelay
		;



	GENERALIZATION StatusMsg
			SUBCLASSES StatusDelay
		;


	GENERALIZATION Delay
			SUBCLASSES StatusDelay
		;

#=====================================================================
#File ../../code/ddd-3.0/ddd/buttons.o.nu.cls	 Class Number = 7
#=====================================================================
#Process file  ../../code/ddd-3.0/ddd/cmdtty.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/complete.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/userinfo.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/configinfo.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/dbx-lookup.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/disp-read.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/editing.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/environ.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/examine.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/exectty.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/exit.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/file.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/filetype.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/fonts.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/fortranize.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/gdbinit.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/graph.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/hostname.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/index.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/java.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/logo.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/mydialogs.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/options.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/post.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/question.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/regexps.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/resources.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/roulette.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/sashes.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/session.o.nu.cls

CLASS StreamAction	#LOC 24


	ATTRIBUTES
		PRIVATE  stream:ostream,
		PRIVATE  ok:bool

	OPERATIONS
		PUBLIC StreamAction(ostream& os, CONST_string& c):StreamAction,
		PUBLIC ~StreamAction():StreamAction,
		PUBLIC failed(CONST_string& msg):void
		;



	AGGREGATION NAME action CONTAINER CLASS StreamAction::AssocRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;

#=====================================================================
#File ../../code/ddd-3.0/ddd/session.o.nu.cls	 Class Number = 1
#=====================================================================
#Process file  ../../code/ddd-3.0/ddd/settings.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/shell.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/shorten.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/show.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/source.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/string-fun.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/tips.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/toolbar.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/ungrab.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/windows.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/xconfig.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/AliasGE.o.nu.cls

CLASS AliasGraphEdge	#LOC 34


	ATTRIBUTES
		PRIVATE  _disp_nr:public: int

	OPERATIONS
		PROTECTED AliasGraphEdge(CONST_AliasGraphEdge& edge):AliasGraphEdge,
		PUBLIC AliasGraphEdge(int disp_nr, GraphNode* from, GraphNode* to):AliasGraphEdge,
		PUBLIC ABSTRACT ~AliasGraphEdge():AliasGraphEdge,
		PUBLIC disp_nr():int,
		PUBLIC dup():GraphEdge*
		;



	GENERALIZATION ArcGraphEdge
			SUBCLASSES AliasGraphEdge
		;


	RELATION 
			ROLES
			CLASS	AliasGraphEdge MULT UNDEFINED,
			CLASS	GraphNode MULT UNDEFINED
		;

#=====================================================================
#File ../../code/ddd-3.0/ddd/AliasGE.o.nu.cls	 Class Number = 1
#=====================================================================
#Process file  ../../code/ddd-3.0/ddd/BreakPoint.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/BreakPM.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/CodeCache.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/Command.o.nu.cls

CLASS Queue	#LOC 143


	ATTRIBUTES


	OPERATIONS
		PRIVATE firstRec():QueueRec<E>*,
		PROTECTED clear():void,
		PROTECTED add(CONST_Queue<E>& e):void,
		PUBLIC Queue():Queue,
		PUBLIC ~Queue():Queue,
		PUBLIC Queue(CONST_Queue<E>& e):Queue,
		PUBLIC operator_=(CONST_Queue<E>& e):Queue<E>&,
		PUBLIC enqueue_at_end(CONST_E& e):void,
		PUBLIC enqueue_after(CONST_E& e, QueueIter<E> a):void,
		PUBLIC enqueue_at_start(CONST_E& e):void,
		PUBLIC dequeue(CONST_E& e):void,
		PUBLIC operator_+=(CONST_E& e):void,
		PUBLIC operator_-=(CONST_E& e):void,
		PUBLIC first():const E&,
		PUBLIC last():const E&,
		PUBLIC first():E&,
		PUBLIC last():E&,
		PUBLIC isEmpty():bool
		;



	AGGREGATION NAME _first CONTAINER CLASS Queue::QueueRec MULT UNDEFINED
			PARTS
			CLASS	E MULT UNDEFINED
		;


	AGGREGATION NAME _last CONTAINER CLASS Queue::QueueRec MULT UNDEFINED
			PARTS
			CLASS	E MULT UNDEFINED
		;

CLASS QueueIter	#LOC 37


	ATTRIBUTES


	OPERATIONS
		PRIVATE QueueIter(QueueRec<E> *ptr):QueueIter,
		PRIVATE theRec():QueueRec<E>*,
		PUBLIC QueueIter(CONST_Queue<E>& queue):QueueIter,
		PUBLIC QueueIter(CONST_QueueIter<E>& iter):QueueIter,
		PUBLIC operator_=(CONST_QueueIter<E>& iter):QueueIter<E>&,
		PUBLIC operator_=(CONST_Queue<E>& queue):QueueIter<E>&,
		PUBLIC operator():const E&,
		PUBLIC operator():E&,
		PUBLIC ok():bool,
		PUBLIC next():QueueIter<E>
		;



	AGGREGATION NAME rec CONTAINER CLASS QueueIter::QueueRec MULT UNDEFINED
			PARTS
			CLASS	E MULT UNDEFINED
		;

#=====================================================================
#File ../../code/ddd-3.0/ddd/Command.o.nu.cls	 Class Number = 2
#=====================================================================
#Process file  ../../code/ddd-3.0/ddd/DataDisp.o.nu.cls

CLASS DispGraph	#LOC 118


	ATTRIBUTES
		PUBLIC  idMap:DispNodeMap,
		PUBLIC  no_enabled:bool,
		PUBLIC  no_disabled:bool,
		PUBLIC SHARED  hide_inactive_displays:bool

	OPERATIONS
		PUBLIC DispGraph():DispGraph,
		PUBLIC clear():void,
		PUBLIC ~DispGraph():DispGraph,
		PUBLIC count_all():int,
		PUBLIC count_all(Displaying e):int,
		PUBLIC count_selected():int,
		PUBLIC has_enabled():bool,
		PUBLIC has_disabled():bool,
		PUBLIC addHandler(unsigned type, HandlerProc proc, void* client_data):void,
		PUBLIC removeHandler(unsigned type, HandlerProc proc, void* client_data):void,
		PUBLIC callHandlers():void,
		PUBLIC insert(int disp_nr, DispNode* dn, int depends_on):int,
		PUBLIC alias(Widget w, int disp_nr, int alias_disp_nr):bool,
		PUBLIC unalias(int alias_disp_nr):bool,
		PUBLIC make_active(int disp_nr):bool,
		PUBLIC make_inactive(int disp_nr):bool,
		PUBLIC default_pos(DispNode* new_node, Widget w, int depends_on):BoxPoint,
		PUBLIC del(int disp_nr):bool,
		PUBLIC get(int disp_nr):DispNode*,
		PUBLIC get_by_name(CONST_string& name):int,
		PUBLIC get_nr(BoxGraphNode *nodeptr):int,
		PUBLIC contains(int disp_nr):bool,
		PUBLIC first(MapRef& ref, Displaying e):DispNode*,
		PUBLIC next(MapRef& ref, Displaying e):DispNode*,
		PUBLIC first_nr(MapRef& ref, Displaying e):int,
		PUBLIC next_nr(MapRef& ref, Displaying e):int,
		PUBLIC print(ostream& os, CONST_GraphGC& gc):void,
		PROTECTED adjust_position(DispNode* new_node, Widget w, BoxPoint pos, BoxPoint offset, BoxPoint grid):BoxPoint,
		PROTECTED add_alias_edge(Widget w, int alias_disp_nr, GraphNode* from, GraphNode* to):void,
		PRIVATE SHARED disp_node_disabledHP(void* , void* , void*):void,
		PRIVATE SHARED same_angle(CONST_BoxPoint& r, CONST_BoxPoint& p1, CONST_BoxPoint& p2):bool,
		PRIVATE SHARED has_angle(PosGraphNode* node, CONST_BoxPoint& p):bool,
		PRIVATE add_direct_alias_edge(Widget w, int alias_disp_nr, GraphNode* from, GraphNode* to):void,
		PRIVATE add_routed_alias_edge(Widget w, int alias_disp_nr, PosGraphNode* from, PosGraphNode* to):void,
		PRIVATE is_hidden(Widget w, CONST_BoxPoint& p):bool,
		PRIVATE SHARED rotate_offset(CONST_BoxPoint& p, int angle):BoxPoint,
		PRIVATE hint_positions_ok(Widget w, PosGraphNode* from, PosGraphNode* to, CONST_BoxPoint& p1, CONST_BoxPoint& p2):bool
		;



	GENERALIZATION Graph
			SUBCLASSES DispGraph
		;


	AGGREGATION NAME handlers CONTAINER CLASS DispGraph::QueueRec MULT UNDEFINED
			PARTS
			CLASS	HandlerList MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	DispGraph MULT UNDEFINED,
			CLASS	DispNode MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	DispGraph MULT UNDEFINED,
			CLASS	BoxGraphNode MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	DispGraph MULT UNDEFINED,
			CLASS	BoxPoint MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	DispGraph MULT UNDEFINED,
			CLASS	GraphNode MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	DispGraph MULT UNDEFINED,
			CLASS	PosGraphNode MULT UNDEFINED
		;

CLASS PosBuffer	#LOC 81


	ATTRIBUTES
		PUBLIC  already_read:ReadState,
		PUBLIC  started:bool,
		PUBLIC  terminated:bool,
		PUBLIC  signaled:bool,
		PUBLIC  recompiled:bool,
		PUBLIC  check_pc:bool,
		PUBLIC  check_func:bool

	OPERATIONS
		PUBLIC clear():void,
		PUBLIC PosBuffer():PosBuffer,
		PUBLIC filter(string& answer):void,
		PUBLIC answer_ended():string,
		PUBLIC pos_found():bool,
		PUBLIC pc_found():bool,
		PUBLIC auto_cmd_found():bool,
		PUBLIC get_position():const string&,
		PUBLIC get_function():const string&,
		PUBLIC get_pc():const string&,
		PUBLIC get_auto_cmd():const string&,
		PUBLIC started_found():bool,
		PUBLIC terminated_found():bool,
		PUBLIC signaled_found():bool,
		PUBLIC recompiled_found():bool
		;



	AGGREGATION NAME pos_buffer CONTAINER CLASS PosBuffer::QueueRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME func_buffer CONTAINER CLASS PosBuffer::QueueRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME answer_buffer CONTAINER CLASS PosBuffer::QueueRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME pc_buffer CONTAINER CLASS PosBuffer::QueueRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME auto_cmd_buffer CONTAINER CLASS PosBuffer::QueueRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	PosBuffer MULT UNDEFINED,
			CLASS	string MULT UNDEFINED
		;

CLASS NewDisplayInfo	#LOC 56


	ATTRIBUTES
		PUBLIC  display_expressions:StringArray,
		PUBLIC  origin:Widget,
		PUBLIC  shortcut:Widget,
		PUBLIC  text:Widget,
		PUBLIC  verbose:bool,
		PUBLIC  prompt:bool,
		PUBLIC  deferred:DeferMode

	OPERATIONS
		PUBLIC NewDisplayInfo():NewDisplayInfo,
		PUBLIC ~NewDisplayInfo():NewDisplayInfo,
		PRIVATE NewDisplayInfo(CONST_NewDisplayInfo&):NewDisplayInfo,
		PRIVATE operator_=(CONST_NewDisplayInfo&):NewDisplayInfo&
		;



	AGGREGATION NAME display_expression CONTAINER CLASS NewDisplayInfo::QueueRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME scope CONTAINER CLASS NewDisplayInfo::QueueRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME point CONTAINER CLASS NewDisplayInfo::QueueRec MULT UNDEFINED
			PARTS
			CLASS	BoxPoint MULT UNDEFINED
		;


	RELATION point_ptr
			ROLES
			CLASS	NewDisplayInfo MULT UNDEFINED,
			CLASS	BoxPoint MULT UNDEFINED
		;


	AGGREGATION NAME depends_on CONTAINER CLASS NewDisplayInfo::QueueRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;

CLASS RefreshInfo	#LOC 25


	ATTRIBUTES
		PUBLIC  verbose:bool,
		PUBLIC  prompt:bool,
		PUBLIC  display_nrs:IntArray

	OPERATIONS
		PUBLIC RefreshInfo():RefreshInfo,
		PUBLIC ~RefreshInfo():RefreshInfo,
		PRIVATE RefreshInfo(CONST_RefreshInfo&):RefreshInfo,
		PRIVATE operator_=(CONST_RefreshInfo&):RefreshInfo&
		;


#======================================================================
#File ../../code/ddd-3.0/ddd/DataDisp.o.nu.cls	 Class Number = 4
#======================================================================
#Process file  ../../code/ddd-3.0/ddd/DispBox.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/DispBuffer.o.nu.cls

CLASS DispBuffer	#LOC 38


	ATTRIBUTES
		PUBLIC  already_read:ReadState

	OPERATIONS
		PUBLIC DispBuffer():DispBuffer,
		PUBLIC filter(string& answer):void,
		PUBLIC answer_ended():string,
		PUBLIC displays_found():bool,
		PUBLIC get_displays():string,
		PUBLIC clear():void
		;



	AGGREGATION NAME display_buffer CONTAINER CLASS DispBuffer::QueueRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME answer_buffer CONTAINER CLASS DispBuffer::QueueRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	RELATION 
			ROLES
			CLASS	DispBuffer MULT UNDEFINED,
			CLASS	string MULT UNDEFINED
		;

#========================================================================
#File ../../code/ddd-3.0/ddd/DispBuffer.o.nu.cls	 Class Number = 1
#========================================================================
#Process file  ../../code/ddd-3.0/ddd/DispGraph.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/DispNodeM.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/DispValue.o.nu.cls

CLASS SimpleDispValue	#LOC 9


	ATTRIBUTES


	OPERATIONS
		PUBLIC SimpleDispValue():SimpleDispValue
		;



	AGGREGATION NAME value CONTAINER CLASS SimpleDispValue::QueueRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;

CLASS PointerDispValue	#LOC 10


	ATTRIBUTES
		PUBLIC  dereferenced:bool

	OPERATIONS
		PUBLIC PointerDispValue():PointerDispValue
		;



	AGGREGATION NAME value CONTAINER CLASS PointerDispValue::QueueRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;

CLASS ArrayDispValue	#LOC 15


	ATTRIBUTES
		PUBLIC  members:DispValueArray,
		PUBLIC  member_count:int,
		PUBLIC  index_base:int,
		PUBLIC  have_index_base:bool,
		PUBLIC  align:Alignment

	OPERATIONS
		PUBLIC ArrayDispValue():ArrayDispValue
		;


CLASS StructOrClassDispValue	#LOC 10


	ATTRIBUTES
		PUBLIC  members:DispValueArray,
		PUBLIC  member_count:int

	OPERATIONS
		PUBLIC StructOrClassDispValue():StructOrClassDispValue
		;


#=======================================================================
#File ../../code/ddd-3.0/ddd/DispValue.o.nu.cls	 Class Number = 4
#=======================================================================
#Process file  ../../code/ddd-3.0/ddd/DispValueA.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/EntryType.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/GDBAgent.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/HelpCB.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/HistoryF.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/MinMaxA.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/PosBuffer.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/SmartC.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/SourceView.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/ddd.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/compare.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/glob.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/uniquify.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/StringMap.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/AsyncAgent.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/charsets.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/ComboBox.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/LessTifH.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/MakeMenu.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/printBox.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/BoxPoint.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/FontFixBox.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/StringBox.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/TrueBox.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/DummyNode.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/NameNode.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/ListNode.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/VSLDefList.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/VSLLib.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/GraphEdge.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/PannedGE.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/comm-manag.o.nu.cls

CLASS CmdData	#LOC 107


	ATTRIBUTES
		PUBLIC  origin:Widget,
		PUBLIC  filter_disp:Filtering,
		PUBLIC  new_exec_pos:bool,
		PUBLIC  new_frame_pos:bool,
		PUBLIC  set_frame_pos:bool,
		PUBLIC  set_frame_arg:int,
		PUBLIC  user_callback:OQCProc,
		PUBLIC  user_data:void,
		PUBLIC  user_verbose:bool,
		PUBLIC  user_prompt:bool,
		PUBLIC  user_check:bool

	OPERATIONS
		PRIVATE SHARED clear_origin(Widget w, XtPointer client_data, XtPointer call_data):void,
		PRIVATE add_destroy_callback():void,
		PRIVATE remove_destroy_callback():void,
		PUBLIC CmdData(Widget orig , Filtering fd):CmdData,
		PUBLIC ~CmdData():CmdData,
		PRIVATE CmdData(CONST_CmdData&):CmdData,
		PRIVATE operator_=(CONST_CmdData&):CmdData&
		;



	AGGREGATION NAME command CONTAINER CLASS CmdData::QueueRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	RELATION disp_buffer
			ROLES
			CLASS	CmdData MULT UNDEFINED,
			CLASS	DispBuffer MULT UNDEFINED
		;


	RELATION pos_buffer
			ROLES
			CLASS	CmdData MULT UNDEFINED,
			CLASS	PosBuffer MULT UNDEFINED
		;


	AGGREGATION NAME set_frame_func CONTAINER CLASS CmdData::QueueRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME graph_cmd CONTAINER CLASS CmdData::QueueRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME lookup_arg CONTAINER CLASS CmdData::QueueRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME user_answer CONTAINER CLASS CmdData::QueueRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;

CLASS PlusCmdData	#LOC 107


	ATTRIBUTES
		PUBLIC  n_init:int,
		PUBLIC  refresh_initial_line:bool,
		PUBLIC  refresh_file:bool,
		PUBLIC  refresh_line:bool,
		PUBLIC  refresh_recent_files:bool,
		PUBLIC  refresh_pwd:bool,
		PUBLIC  refresh_class_path:bool,
		PUBLIC  refresh_breakpoints:bool,
		PUBLIC  refresh_where:bool,
		PUBLIC  refresh_frame:bool,
		PUBLIC  refresh_pc:bool,
		PUBLIC  refresh_registers:bool,
		PUBLIC  refresh_threads:bool,
		PUBLIC  refresh_data:bool,
		PUBLIC  refresh_user:bool,
		PUBLIC  refresh_addr:bool,
		PUBLIC  refresh_disp_info:bool,
		PUBLIC  refresh_history_filename:bool,
		PUBLIC  refresh_history_size:bool,
		PUBLIC  refresh_setting:bool,
		PUBLIC  refresh_handle:bool,
		PUBLIC  n_refresh_data:int,
		PUBLIC  n_refresh_user:int,
		PUBLIC  config_frame:bool,
		PUBLIC  config_func:bool,
		PUBLIC  config_run_io:bool,
		PUBLIC  config_print_r:bool,
		PUBLIC  config_where_h:bool,
		PUBLIC  config_display:bool,
		PUBLIC  config_clear:bool,
		PUBLIC  config_handler:bool,
		PUBLIC  config_pwd:bool,
		PUBLIC  config_setenv:bool,
		PUBLIC  config_edit:bool,
		PUBLIC  config_make:bool,
		PUBLIC  config_regs:bool,
		PUBLIC  config_named_values:bool,
		PUBLIC  config_when_semicolon:bool,
		PUBLIC  config_delete_comma:bool,
		PUBLIC  config_err_redirection:bool,
		PUBLIC  config_givenfile:bool,
		PUBLIC  config_cont_sig:bool,
		PUBLIC  config_xdb:bool,
		PUBLIC  config_output:bool,
		PUBLIC  config_program_language:bool

	OPERATIONS
		PUBLIC PlusCmdData():PlusCmdData
		;



	AGGREGATION NAME command CONTAINER CLASS PlusCmdData::QueueRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME set_command CONTAINER CLASS PlusCmdData::QueueRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;


	AGGREGATION NAME break_arg CONTAINER CLASS PlusCmdData::QueueRec MULT UNDEFINED
			PARTS
			CLASS	string MULT UNDEFINED
		;

#========================================================================
#File ../../code/ddd-3.0/ddd/comm-manag.o.nu.cls	 Class Number = 2
#========================================================================
#Process file  ../../code/ddd-3.0/ddd/expired.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/history.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/mainloop.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/print.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/select.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/status.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/value-read.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/ArgField.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/DispNode.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/HistoryD.o.nu.cls

#Process file  ../../code/ddd-3.0/ddd/WhatNextCB.o.nu.cls
